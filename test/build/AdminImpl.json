{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogWithdrawExcessTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "marketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        }
      ],
      "name": "LogAddMarket",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "marketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "isClosing",
          "type": "bool"
        }
      ],
      "name": "LogSetIsClosing",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "marketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "priceOracle",
          "type": "address"
        }
      ],
      "name": "LogSetPriceOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "marketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "interestSetter",
          "type": "address"
        }
      ],
      "name": "LogSetInterestSetter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "marketId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "name": "marginPremium",
          "type": "tuple"
        }
      ],
      "name": "LogSetMarginPremium",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "marketId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "name": "spreadPremium",
          "type": "tuple"
        }
      ],
      "name": "LogSetSpreadPremium",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "name": "marginRatio",
          "type": "tuple"
        }
      ],
      "name": "LogSetMarginRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "name": "liquidationSpread",
          "type": "tuple"
        }
      ],
      "name": "LogSetLiquidationSpread",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "name": "earningsRate",
          "type": "tuple"
        }
      ],
      "name": "LogSetEarningsRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "name": "value",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "name": "minBorrowedValue",
          "type": "tuple"
        }
      ],
      "name": "LogSetMinBorrowedValue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "LogSetGlobalOperator",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "31": "contracts/protocol/impl/AdminImpl.sol",
    "35": "contracts/protocol/interfaces/IErc20.sol",
    "37": "contracts/protocol/interfaces/IInterestSetter.sol",
    "38": "contracts/protocol/interfaces/IPriceOracle.sol",
    "41": "contracts/protocol/lib/Cache.sol",
    "42": "contracts/protocol/lib/Decimal.sol",
    "45": "contracts/protocol/lib/Interest.sol",
    "46": "contracts/protocol/lib/Math.sol",
    "48": "contracts/protocol/lib/Require.sol",
    "49": "contracts/protocol/lib/Storage.sol",
    "50": "contracts/protocol/lib/Time.sol",
    "51": "contracts/protocol/lib/Token.sol",
    "52": "contracts/protocol/lib/Types.sol",
    "75": "node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/protocol/impl/AdminImpl.sol",
    "exportedSymbols": {
      "AdminImpl": [
        13596
      ]
    },
    "id": 13597,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12766,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "603:22:31"
      },
      {
        "id": 12767,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "626:33:31"
      },
      {
        "absolutePath": "contracts/protocol/interfaces/IInterestSetter.sol",
        "file": "../interfaces/IInterestSetter.sol",
        "id": 12769,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 15858,
        "src": "661:68:31",
        "symbolAliases": [
          {
            "foreign": 12768,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/protocol/interfaces/IPriceOracle.sol",
        "file": "../interfaces/IPriceOracle.sol",
        "id": 12771,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 15876,
        "src": "730:62:31",
        "symbolAliases": [
          {
            "foreign": 12770,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/protocol/lib/Decimal.sol",
        "file": "../lib/Decimal.sol",
        "id": 12773,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 16725,
        "src": "793:45:31",
        "symbolAliases": [
          {
            "foreign": 12772,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/protocol/lib/Interest.sol",
        "file": "../lib/Interest.sol",
        "id": 12775,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 17941,
        "src": "839:47:31",
        "symbolAliases": [
          {
            "foreign": 12774,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/protocol/lib/Monetary.sol",
        "file": "../lib/Monetary.sol",
        "id": 12777,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 18138,
        "src": "887:47:31",
        "symbolAliases": [
          {
            "foreign": 12776,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/protocol/lib/Require.sol",
        "file": "../lib/Require.sol",
        "id": 12779,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 18832,
        "src": "935:45:31",
        "symbolAliases": [
          {
            "foreign": 12778,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/protocol/lib/Storage.sol",
        "file": "../lib/Storage.sol",
        "id": 12781,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 20244,
        "src": "981:45:31",
        "symbolAliases": [
          {
            "foreign": 12780,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/protocol/lib/Token.sol",
        "file": "../lib/Token.sol",
        "id": 12783,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 20448,
        "src": "1027:41:31",
        "symbolAliases": [
          {
            "foreign": 12782,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/protocol/lib/Types.sol",
        "file": "../lib/Types.sol",
        "id": 12785,
        "nodeType": "ImportDirective",
        "scope": 13597,
        "sourceUnit": 20917,
        "src": "1069:41:31",
        "symbolAliases": [
          {
            "foreign": 12784,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title AdminImpl\n@author dYdX\n * Administrative functions to keep the protocol updated",
        "fullyImplemented": true,
        "id": 13596,
        "linearizedBaseContracts": [
          13596
        ],
        "name": "AdminImpl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12788,
            "libraryName": {
              "contractScope": null,
              "id": 12786,
              "name": "Storage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20243,
              "src": "1247:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storage_$20243",
                "typeString": "library Storage"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1241:32:31",
            "typeName": {
              "contractScope": null,
              "id": 12787,
              "name": "Storage.State",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18947,
              "src": "1259:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                "typeString": "struct Storage.State"
              }
            }
          },
          {
            "id": 12791,
            "libraryName": {
              "contractScope": null,
              "id": 12789,
              "name": "Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20447,
              "src": "1284:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$20447",
                "typeString": "library Token"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1278:24:31",
            "typeName": {
              "id": 12790,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1294:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 12794,
            "libraryName": {
              "contractScope": null,
              "id": 12792,
              "name": "Types",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20916,
              "src": "1313:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Types_$20916",
                "typeString": "library Types"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1307:26:31",
            "typeName": {
              "contractScope": null,
              "id": 12793,
              "name": "Types.Wei",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20704,
              "src": "1323:9:31",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Wei_$20704_storage_ptr",
                "typeString": "struct Types.Wei"
              }
            }
          },
          {
            "constant": true,
            "id": 12797,
            "name": "FILE",
            "nodeType": "VariableDeclaration",
            "scope": 13596,
            "src": "1383:35:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12795,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1383:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41646d696e496d706c",
              "id": 12796,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1407:11:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4b70a5e7c59e3d0b932d067bd46e7887c7f5c096c2fd4a9bfceb35c8e4308d36",
                "typeString": "literal_string \"AdminImpl\""
              },
              "value": "AdminImpl"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12803,
            "name": "LogWithdrawExcessTokens",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12799,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12803,
                  "src": "1505:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12801,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12803,
                  "src": "1528:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1495:53:31"
            },
            "src": "1466:83:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12809,
            "name": "LogAddMarket",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12805,
                  "indexed": false,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12809,
                  "src": "1583:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12807,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12809,
                  "src": "1609:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1573:55:31"
            },
            "src": "1555:74:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12815,
            "name": "LogSetIsClosing",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12811,
                  "indexed": false,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12815,
                  "src": "1666:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12813,
                  "indexed": false,
                  "name": "isClosing",
                  "nodeType": "VariableDeclaration",
                  "scope": 12815,
                  "src": "1692:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1656:56:31"
            },
            "src": "1635:78:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12821,
            "name": "LogSetPriceOracle",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12817,
                  "indexed": false,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12821,
                  "src": "1752:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12819,
                  "indexed": false,
                  "name": "priceOracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 12821,
                  "src": "1778:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1742:61:31"
            },
            "src": "1719:85:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12827,
            "name": "LogSetInterestSetter",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12823,
                  "indexed": false,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12827,
                  "src": "1846:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12825,
                  "indexed": false,
                  "name": "interestSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 12827,
                  "src": "1872:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1836:64:31"
            },
            "src": "1810:91:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12833,
            "name": "LogSetMarginPremium",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12829,
                  "indexed": false,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12833,
                  "src": "1942:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12831,
                  "indexed": false,
                  "name": "marginPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 12833,
                  "src": "1968:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12830,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "1968:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1932:68:31"
            },
            "src": "1907:94:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12839,
            "name": "LogSetSpreadPremium",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12835,
                  "indexed": false,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12839,
                  "src": "2042:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12837,
                  "indexed": false,
                  "name": "spreadPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 12839,
                  "src": "2068:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12836,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "2068:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2032:68:31"
            },
            "src": "2007:94:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12843,
            "name": "LogSetMarginRatio",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12841,
                  "indexed": false,
                  "name": "marginRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 12843,
                  "src": "2140:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12840,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "2140:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2130:40:31"
            },
            "src": "2107:64:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12847,
            "name": "LogSetLiquidationSpread",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12845,
                  "indexed": false,
                  "name": "liquidationSpread",
                  "nodeType": "VariableDeclaration",
                  "scope": 12847,
                  "src": "2216:30:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12844,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "2216:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2206:46:31"
            },
            "src": "2177:76:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12851,
            "name": "LogSetEarningsRate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12849,
                  "indexed": false,
                  "name": "earningsRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12851,
                  "src": "2293:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12848,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "2293:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2283:41:31"
            },
            "src": "2259:66:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12855,
            "name": "LogSetMinBorrowedValue",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12853,
                  "indexed": false,
                  "name": "minBorrowedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 12855,
                  "src": "2369:31:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Value_$18136_memory_ptr",
                    "typeString": "struct Monetary.Value"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12852,
                    "name": "Monetary.Value",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18136,
                    "src": "2369:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Value_$18136_storage_ptr",
                      "typeString": "struct Monetary.Value"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2359:47:31"
            },
            "src": "2331:76:31"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12861,
            "name": "LogSetGlobalOperator",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12857,
                  "indexed": false,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 12861,
                  "src": "2449:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12859,
                  "indexed": false,
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 12861,
                  "src": "2475:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12858,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2439:55:31"
            },
            "src": "2413:82:31"
          },
          {
            "body": {
              "id": 12942,
              "nodeType": "Block",
              "src": "2727:610:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12873,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12863,
                        "src": "2755:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12874,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12865,
                        "src": "2762:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12872,
                      "name": "_validateMarketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13595,
                      "src": "2737:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256) view"
                      }
                    },
                    "id": 12875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2737:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12876,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:34:31"
                },
                {
                  "assignments": [
                    12880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12880,
                      "name": "excessWei",
                      "nodeType": "VariableDeclaration",
                      "scope": 12942,
                      "src": "2781:26:31",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Wei_$20704_memory_ptr",
                        "typeString": "struct Types.Wei"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12879,
                        "name": "Types.Wei",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20704,
                        "src": "2781:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Wei_$20704_storage_ptr",
                          "typeString": "struct Types.Wei"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12885,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12883,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12865,
                        "src": "2835:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12881,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12863,
                        "src": "2810:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      "id": 12882,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNumExcessTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19066,
                      "src": "2810:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$returns$_t_struct$_Wei_$20704_memory_ptr_$bound_to$_t_struct$_State_$18947_storage_ptr_$",
                        "typeString": "function (struct Storage.State storage pointer,uint256) view returns (struct Types.Wei memory)"
                      }
                    },
                    "id": 12884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Wei_$20704_memory_ptr",
                      "typeString": "struct Types.Wei memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2781:63:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2881:23:31",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 12889,
                              "name": "excessWei",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12880,
                              "src": "2882:9:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Wei_$20704_memory_ptr",
                                "typeString": "struct Types.Wei memory"
                              }
                            },
                            "id": 12890,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isNegative",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20886,
                            "src": "2882:20:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Wei_$20704_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Wei_$20704_memory_ptr_$",
                              "typeString": "function (struct Types.Wei memory) pure returns (bool)"
                            }
                          },
                          "id": 12891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2882:22:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12893,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "2918:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6567617469766520657863657373",
                        "id": 12894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2936:17:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1694077b1d3a41b6efa6b359ff29d037b08435c5c42340397982ef9c0bd82585",
                          "typeString": "literal_string \"Negative excess\""
                        },
                        "value": "Negative excess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1694077b1d3a41b6efa6b359ff29d037b08435c5c42340397982ef9c0bd82585",
                          "typeString": "literal_string \"Negative excess\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12886,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "2855:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 12888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "2855:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 12895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:108:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12896,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:108:31"
                },
                {
                  "assignments": [
                    12898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12898,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 12942,
                      "src": "2974:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12897,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2974:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12903,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12901,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12865,
                        "src": "3005:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12899,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12863,
                        "src": "2990:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      "id": 12900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18963,
                      "src": "2990:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_State_$18947_storage_ptr_$",
                        "typeString": "function (struct Storage.State storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 12902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2990:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2974:40:31"
                },
                {
                  "assignments": [
                    12905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12905,
                      "name": "actualBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 12942,
                      "src": "3025:21:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12904,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3025:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12912,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12909,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24174,
                            "src": "3073:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AdminImpl_$13596",
                              "typeString": "library AdminImpl"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AdminImpl_$13596",
                              "typeString": "library AdminImpl"
                            }
                          ],
                          "id": 12908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3065:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3065:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12906,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12898,
                        "src": "3049:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 12907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20288,
                      "src": "3049:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$bound_to$_t_address_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 12911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3049:30:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3025:54:31"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 12913,
                        "name": "excessWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12880,
                        "src": "3093:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Wei_$20704_memory_ptr",
                          "typeString": "struct Types.Wei memory"
                        }
                      },
                      "id": 12914,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20703,
                      "src": "3093:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 12915,
                      "name": "actualBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12905,
                      "src": "3111:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3093:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12924,
                  "nodeType": "IfStatement",
                  "src": "3089:93:31",
                  "trueBody": {
                    "id": 12923,
                    "nodeType": "Block",
                    "src": "3126:56:31",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 12921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12917,
                              "name": "excessWei",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12880,
                              "src": "3140:9:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Wei_$20704_memory_ptr",
                                "typeString": "struct Types.Wei memory"
                              }
                            },
                            "id": 12919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20703,
                            "src": "3140:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 12920,
                            "name": "actualBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12905,
                            "src": "3158:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3140:31:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12922,
                        "nodeType": "ExpressionStatement",
                        "src": "3140:31:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12928,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12867,
                        "src": "3207:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12929,
                          "name": "excessWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12880,
                          "src": "3218:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Wei_$20704_memory_ptr",
                            "typeString": "struct Types.Wei memory"
                          }
                        },
                        "id": 12930,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20703,
                        "src": "3218:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12925,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12898,
                        "src": "3192:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 12927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20391,
                      "src": "3192:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:42:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12932,
                  "nodeType": "ExpressionStatement",
                  "src": "3192:42:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12934,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12898,
                        "src": "3274:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12935,
                          "name": "excessWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12880,
                          "src": "3281:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Wei_$20704_memory_ptr",
                            "typeString": "struct Types.Wei memory"
                          }
                        },
                        "id": 12936,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20703,
                        "src": "3281:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12933,
                      "name": "LogWithdrawExcessTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12803,
                      "src": "3250:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3250:47:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12938,
                  "nodeType": "EmitStatement",
                  "src": "3245:52:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 12939,
                      "name": "excessWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12880,
                      "src": "3315:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Wei_$20704_memory_ptr",
                        "typeString": "struct Types.Wei memory"
                      }
                    },
                    "id": 12940,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20703,
                    "src": "3315:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12871,
                  "id": 12941,
                  "nodeType": "Return",
                  "src": "3308:22:31"
                }
              ]
            },
            "documentation": null,
            "id": 12943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerWithdrawExcessTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12863,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 12943,
                  "src": "2595:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12862,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "2595:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12865,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12943,
                  "src": "2632:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12867,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 12943,
                  "src": "2658:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2585:96:31"
            },
            "returnParameters": {
              "id": 12871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12870,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12943,
                  "src": "2714:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2714:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2713:9:31"
            },
            "scope": 13596,
            "src": "2551:786:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12982,
              "nodeType": "Block",
              "src": "3521:230:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12955,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12945,
                        "src": "3548:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12956,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12947,
                        "src": "3555:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12954,
                      "name": "_requireNoMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13575,
                      "src": "3531:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,address) view"
                      }
                    },
                    "id": 12957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:30:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12958,
                  "nodeType": "ExpressionStatement",
                  "src": "3531:30:31"
                },
                {
                  "assignments": [
                    12960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12960,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 12982,
                      "src": "3572:15:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12959,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3572:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12967,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12964,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24174,
                            "src": "3614:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AdminImpl_$13596",
                              "typeString": "library AdminImpl"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AdminImpl_$13596",
                              "typeString": "library AdminImpl"
                            }
                          ],
                          "id": 12963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3606:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 12965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3606:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12961,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12947,
                        "src": "3590:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 12962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20288,
                      "src": "3590:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$bound_to$_t_address_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 12966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:30:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3572:48:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12971,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12949,
                        "src": "3645:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12972,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12960,
                        "src": "3656:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12968,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12947,
                        "src": "3630:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 12970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20391,
                      "src": "3630:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3630:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12974,
                  "nodeType": "ExpressionStatement",
                  "src": "3630:34:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12976,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12947,
                        "src": "3704:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12977,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12960,
                        "src": "3711:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12975,
                      "name": "LogWithdrawExcessTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12803,
                      "src": "3680:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3680:39:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12979,
                  "nodeType": "EmitStatement",
                  "src": "3675:44:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12980,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12960,
                    "src": "3737:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12953,
                  "id": 12981,
                  "nodeType": "Return",
                  "src": "3730:14:31"
                }
              ]
            },
            "documentation": null,
            "id": 12983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerWithdrawUnsupportedTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12945,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 12983,
                  "src": "3392:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12944,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "3392:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12947,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 12983,
                  "src": "3429:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3429:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12949,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 12983,
                  "src": "3452:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3382:93:31"
            },
            "returnParameters": {
              "id": 12953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12952,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12983,
                  "src": "3508:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3507:9:31"
            },
            "scope": 13596,
            "src": "3343:408:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13062,
              "nodeType": "Block",
              "src": "4077:510:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12999,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "4104:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13000,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12987,
                        "src": "4111:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12998,
                      "name": "_requireNoMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13575,
                      "src": "4087:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,address) view"
                      }
                    },
                    "id": 13001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4087:30:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13002,
                  "nodeType": "ExpressionStatement",
                  "src": "4087:30:31"
                },
                {
                  "assignments": [
                    13004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13004,
                      "name": "marketId",
                      "nodeType": "VariableDeclaration",
                      "scope": 13062,
                      "src": "4128:16:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13003,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4128:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13007,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 13005,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12985,
                      "src": "4147:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                        "typeString": "struct Storage.State storage pointer"
                      }
                    },
                    "id": 13006,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "numMarkets",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18922,
                    "src": "4147:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4128:35:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4174:18:31",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 13008,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "4174:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      "id": 13010,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numMarkets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18922,
                      "src": "4174:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13012,
                  "nodeType": "ExpressionStatement",
                  "src": "4174:18:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13013,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12985,
                            "src": "4202:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                              "typeString": "struct Storage.State storage pointer"
                            }
                          },
                          "id": 13016,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18926,
                          "src": "4202:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 13017,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13015,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13004,
                          "src": "4216:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4202:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$18898_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 13018,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18883,
                      "src": "4202:29:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13019,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12987,
                      "src": "4234:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4202:37:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13021,
                  "nodeType": "ExpressionStatement",
                  "src": "4202:37:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13022,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12985,
                            "src": "4249:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                              "typeString": "struct Storage.State storage pointer"
                            }
                          },
                          "id": 13025,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18926,
                          "src": "4249:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 13026,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13024,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13004,
                          "src": "4263:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4249:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$18898_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 13027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18887,
                      "src": "4249:29:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Index_$17661_storage",
                        "typeString": "struct Interest.Index storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 13028,
                          "name": "Interest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17940,
                          "src": "4281:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Interest_$17940_$",
                            "typeString": "type(library Interest)"
                          }
                        },
                        "id": 13029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17796,
                        "src": "4281:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Index_$17661_memory_ptr_$",
                          "typeString": "function () view returns (struct Interest.Index memory)"
                        }
                      },
                      "id": 13030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4281:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Index_$17661_memory_ptr",
                        "typeString": "struct Interest.Index memory"
                      }
                    },
                    "src": "4249:51:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Index_$17661_storage",
                      "typeString": "struct Interest.Index storage ref"
                    }
                  },
                  "id": 13032,
                  "nodeType": "ExpressionStatement",
                  "src": "4249:51:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13034,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13004,
                        "src": "4329:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13035,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12987,
                        "src": "4339:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13033,
                      "name": "LogAddMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12809,
                      "src": "4316:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 13036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4316:29:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13037,
                  "nodeType": "EmitStatement",
                  "src": "4311:34:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13039,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "4372:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13040,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13004,
                        "src": "4379:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13041,
                        "name": "priceOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12989,
                        "src": "4389:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                          "typeString": "contract IPriceOracle"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                          "typeString": "contract IPriceOracle"
                        }
                      ],
                      "id": 13038,
                      "name": "_setPriceOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13407,
                      "src": "4356:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$_t_contract$_IPriceOracle_$15875_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256,contract IPriceOracle)"
                      }
                    },
                    "id": 13042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4356:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13043,
                  "nodeType": "ExpressionStatement",
                  "src": "4356:45:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13045,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "4430:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13046,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13004,
                        "src": "4437:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13047,
                        "name": "interestSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12991,
                        "src": "4447:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                          "typeString": "contract IInterestSetter"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                          "typeString": "contract IInterestSetter"
                        }
                      ],
                      "id": 13044,
                      "name": "_setInterestSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13449,
                      "src": "4411:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$_t_contract$_IInterestSetter_$15857_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256,contract IInterestSetter)"
                      }
                    },
                    "id": 13048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4411:51:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13049,
                  "nodeType": "ExpressionStatement",
                  "src": "4411:51:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13051,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "4490:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13052,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13004,
                        "src": "4497:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13053,
                        "name": "marginPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12993,
                        "src": "4507:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13050,
                      "name": "_setMarginPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13486,
                      "src": "4472:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256,struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13055,
                  "nodeType": "ExpressionStatement",
                  "src": "4472:49:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13057,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "4549:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13058,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13004,
                        "src": "4556:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13059,
                        "name": "spreadPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12995,
                        "src": "4566:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13056,
                      "name": "_setSpreadPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13523,
                      "src": "4531:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256,struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4531:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13061,
                  "nodeType": "ExpressionStatement",
                  "src": "4531:49:31"
                }
              ]
            },
            "documentation": null,
            "id": 13063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAddMarket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12985,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13063,
                  "src": "3841:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12984,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "3841:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12987,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13063,
                  "src": "3878:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3878:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12989,
                  "name": "priceOracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 13063,
                  "src": "3901:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                    "typeString": "contract IPriceOracle"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12988,
                    "name": "IPriceOracle",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15875,
                    "src": "3901:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                      "typeString": "contract IPriceOracle"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12991,
                  "name": "interestSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 13063,
                  "src": "3935:30:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                    "typeString": "contract IInterestSetter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12990,
                    "name": "IInterestSetter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15857,
                    "src": "3935:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                      "typeString": "contract IInterestSetter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12993,
                  "name": "marginPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 13063,
                  "src": "3975:33:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12992,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "3975:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12995,
                  "name": "spreadPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 13063,
                  "src": "4018:33:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12994,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "4018:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3831:226:31"
            },
            "returnParameters": {
              "id": 12997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4077:0:31"
            },
            "scope": 13596,
            "src": "3808:779:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13091,
              "nodeType": "Block",
              "src": "4732:157:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13073,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13065,
                        "src": "4760:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13074,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13067,
                        "src": "4767:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13072,
                      "name": "_validateMarketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13595,
                      "src": "4742:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256) view"
                      }
                    },
                    "id": 13075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4742:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13076,
                  "nodeType": "ExpressionStatement",
                  "src": "4742:34:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13077,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13065,
                            "src": "4786:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                              "typeString": "struct Storage.State storage pointer"
                            }
                          },
                          "id": 13080,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18926,
                          "src": "4786:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 13081,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13079,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13067,
                          "src": "4800:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4786:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$18898_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 13082,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isClosing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18897,
                      "src": "4786:33:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13083,
                      "name": "isClosing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13069,
                      "src": "4822:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4786:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13085,
                  "nodeType": "ExpressionStatement",
                  "src": "4786:45:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13087,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13067,
                        "src": "4862:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13088,
                        "name": "isClosing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13069,
                        "src": "4872:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13086,
                      "name": "LogSetIsClosing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12815,
                      "src": "4846:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 13089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4846:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13090,
                  "nodeType": "EmitStatement",
                  "src": "4841:41:31"
                }
              ]
            },
            "documentation": null,
            "id": 13092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetIsClosing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13065,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13092,
                  "src": "4629:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13064,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "4629:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13067,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13092,
                  "src": "4666:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4666:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13069,
                  "name": "isClosing",
                  "nodeType": "VariableDeclaration",
                  "scope": 13092,
                  "src": "4692:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13068,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4692:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4619:93:31"
            },
            "returnParameters": {
              "id": 13071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4732:0:31"
            },
            "scope": 13596,
            "src": "4593:296:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13112,
              "nodeType": "Block",
              "src": "5046:106:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13102,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13094,
                        "src": "5074:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13103,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13096,
                        "src": "5081:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13101,
                      "name": "_validateMarketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13595,
                      "src": "5056:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256) view"
                      }
                    },
                    "id": 13104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5056:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13105,
                  "nodeType": "ExpressionStatement",
                  "src": "5056:34:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13107,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13094,
                        "src": "5116:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13108,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13096,
                        "src": "5123:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13109,
                        "name": "priceOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13098,
                        "src": "5133:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                          "typeString": "contract IPriceOracle"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                          "typeString": "contract IPriceOracle"
                        }
                      ],
                      "id": 13106,
                      "name": "_setPriceOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13407,
                      "src": "5100:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$_t_contract$_IPriceOracle_$15875_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256,contract IPriceOracle)"
                      }
                    },
                    "id": 13110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13111,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:45:31"
                }
              ]
            },
            "documentation": null,
            "id": 13113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetPriceOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13094,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13113,
                  "src": "4933:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13093,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "4933:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13096,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13113,
                  "src": "4970:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4970:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13098,
                  "name": "priceOracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 13113,
                  "src": "4996:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                    "typeString": "contract IPriceOracle"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13097,
                    "name": "IPriceOracle",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15875,
                    "src": "4996:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                      "typeString": "contract IPriceOracle"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4923:103:31"
            },
            "returnParameters": {
              "id": 13100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5046:0:31"
            },
            "scope": 13596,
            "src": "4895:257:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13133,
              "nodeType": "Block",
              "src": "5318:112:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13123,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13115,
                        "src": "5346:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13124,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13117,
                        "src": "5353:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13122,
                      "name": "_validateMarketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13595,
                      "src": "5328:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256) view"
                      }
                    },
                    "id": 13125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5328:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13126,
                  "nodeType": "ExpressionStatement",
                  "src": "5328:34:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13128,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13115,
                        "src": "5391:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13129,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13117,
                        "src": "5398:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13130,
                        "name": "interestSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13119,
                        "src": "5408:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                          "typeString": "contract IInterestSetter"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                          "typeString": "contract IInterestSetter"
                        }
                      ],
                      "id": 13127,
                      "name": "_setInterestSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13449,
                      "src": "5372:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$_t_contract$_IInterestSetter_$15857_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256,contract IInterestSetter)"
                      }
                    },
                    "id": 13131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5372:51:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13132,
                  "nodeType": "ExpressionStatement",
                  "src": "5372:51:31"
                }
              ]
            },
            "documentation": null,
            "id": 13134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetInterestSetter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13115,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13134,
                  "src": "5199:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13114,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "5199:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13117,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13134,
                  "src": "5236:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5236:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13119,
                  "name": "interestSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 13134,
                  "src": "5262:30:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                    "typeString": "contract IInterestSetter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13118,
                    "name": "IInterestSetter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15857,
                    "src": "5262:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                      "typeString": "contract IInterestSetter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5189:109:31"
            },
            "returnParameters": {
              "id": 13121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5318:0:31"
            },
            "scope": 13596,
            "src": "5158:272:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13154,
              "nodeType": "Block",
              "src": "5598:110:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13144,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13136,
                        "src": "5626:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13145,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13138,
                        "src": "5633:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13143,
                      "name": "_validateMarketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13595,
                      "src": "5608:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256) view"
                      }
                    },
                    "id": 13146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5608:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13147,
                  "nodeType": "ExpressionStatement",
                  "src": "5608:34:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13149,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13136,
                        "src": "5670:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13150,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13138,
                        "src": "5677:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13151,
                        "name": "marginPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13140,
                        "src": "5687:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13148,
                      "name": "_setMarginPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13486,
                      "src": "5652:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256,struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5652:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13153,
                  "nodeType": "ExpressionStatement",
                  "src": "5652:49:31"
                }
              ]
            },
            "documentation": null,
            "id": 13155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetMarginPremium",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13136,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13155,
                  "src": "5476:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13135,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "5476:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13138,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13155,
                  "src": "5513:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5513:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13140,
                  "name": "marginPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 13155,
                  "src": "5539:33:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13139,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "5539:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5466:112:31"
            },
            "returnParameters": {
              "id": 13142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5598:0:31"
            },
            "scope": 13596,
            "src": "5436:272:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13175,
              "nodeType": "Block",
              "src": "5876:110:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13165,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13157,
                        "src": "5904:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13166,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13159,
                        "src": "5911:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13164,
                      "name": "_validateMarketId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13595,
                      "src": "5886:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256) view"
                      }
                    },
                    "id": 13167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5886:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13168,
                  "nodeType": "ExpressionStatement",
                  "src": "5886:34:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13170,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13157,
                        "src": "5948:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13171,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13159,
                        "src": "5955:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13172,
                        "name": "spreadPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13161,
                        "src": "5965:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                          "typeString": "struct Storage.State storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13169,
                      "name": "_setSpreadPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13523,
                      "src": "5930:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$18947_storage_ptr_$_t_uint256_$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (struct Storage.State storage pointer,uint256,struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5930:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13174,
                  "nodeType": "ExpressionStatement",
                  "src": "5930:49:31"
                }
              ]
            },
            "documentation": null,
            "id": 13176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetSpreadPremium",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13157,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13176,
                  "src": "5754:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13156,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "5754:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13159,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13176,
                  "src": "5791:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5791:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13161,
                  "name": "spreadPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 13176,
                  "src": "5817:33:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13160,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "5817:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5744:112:31"
            },
            "returnParameters": {
              "id": 13163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5876:0:31"
            },
            "scope": 13596,
            "src": "5714:272:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13222,
              "nodeType": "Block",
              "src": "6167:391:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13186,
                            "name": "ratio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13180,
                            "src": "6203:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                              "typeString": "struct Decimal.D256 memory"
                            }
                          },
                          "id": 13187,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "6203:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13188,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13178,
                              "src": "6218:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                "typeString": "struct Storage.State storage pointer"
                              }
                            },
                            "id": 13189,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "riskLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18946,
                            "src": "6218:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RiskLimits_$18920_storage",
                              "typeString": "struct Storage.RiskLimits storage ref"
                            }
                          },
                          "id": 13190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marginRatioMax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18909,
                          "src": "6218:31:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "6203:46:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13192,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "6263:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526174696f20746f6f2068696768",
                        "id": 13193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6281:16:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d1c35770d302ac7e441261e804be2a1cd737155595352d0e2a8c5066b83dc3",
                          "typeString": "literal_string \"Ratio too high\""
                        },
                        "value": "Ratio too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d1c35770d302ac7e441261e804be2a1cd737155595352d0e2a8c5066b83dc3",
                          "typeString": "literal_string \"Ratio too high\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13183,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "6177:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "6177:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6177:130:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13195,
                  "nodeType": "ExpressionStatement",
                  "src": "6177:130:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13199,
                            "name": "ratio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13180,
                            "src": "6343:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                              "typeString": "struct Decimal.D256 memory"
                            }
                          },
                          "id": 13200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "6343:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 13201,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13178,
                                "src": "6357:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                  "typeString": "struct Storage.State storage pointer"
                                }
                              },
                              "id": 13202,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "riskParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18944,
                              "src": "6357:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RiskParams_$18907_storage",
                                "typeString": "struct Storage.RiskParams storage ref"
                              }
                            },
                            "id": 13203,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "liquidationSpread",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18902,
                            "src": "6357:34:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_storage",
                              "typeString": "struct Decimal.D256 storage ref"
                            }
                          },
                          "id": 13204,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "6357:40:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6343:54:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13206,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "6411:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526174696f2063616e6e6f74206265203c3d20737072656164",
                        "id": 13207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6429:27:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74d76c251be78a661296cb71ed2ac6b72b2be2c9fadd5e26131efaec3d9dffb0",
                          "typeString": "literal_string \"Ratio cannot be <= spread\""
                        },
                        "value": "Ratio cannot be <= spread"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74d76c251be78a661296cb71ed2ac6b72b2be2c9fadd5e26131efaec3d9dffb0",
                          "typeString": "literal_string \"Ratio cannot be <= spread\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13196,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "6317:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "6317:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6317:149:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13209,
                  "nodeType": "ExpressionStatement",
                  "src": "6317:149:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13210,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13178,
                          "src": "6476:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                            "typeString": "struct Storage.State storage pointer"
                          }
                        },
                        "id": 13213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "riskParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18944,
                        "src": "6476:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RiskParams_$18907_storage",
                          "typeString": "struct Storage.RiskParams storage ref"
                        }
                      },
                      "id": 13214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "marginRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18900,
                      "src": "6476:28:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_storage",
                        "typeString": "struct Decimal.D256 storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13215,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13180,
                      "src": "6507:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                        "typeString": "struct Decimal.D256 memory"
                      }
                    },
                    "src": "6476:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage",
                      "typeString": "struct Decimal.D256 storage ref"
                    }
                  },
                  "id": 13217,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:36:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13219,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13180,
                        "src": "6545:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13218,
                      "name": "LogSetMarginRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12843,
                      "src": "6527:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6527:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13221,
                  "nodeType": "EmitStatement",
                  "src": "6522:29:31"
                }
              ]
            },
            "documentation": null,
            "id": 13223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetMarginRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13178,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13223,
                  "src": "6079:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13177,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "6079:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13180,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 13223,
                  "src": "6116:25:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13179,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "6116:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6069:78:31"
            },
            "returnParameters": {
              "id": 13182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6167:0:31"
            },
            "scope": 13596,
            "src": "6041:517:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13269,
              "nodeType": "Block",
              "src": "6697:408:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13233,
                            "name": "spread",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13227,
                            "src": "6733:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                              "typeString": "struct Decimal.D256 memory"
                            }
                          },
                          "id": 13234,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "6733:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13235,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13225,
                              "src": "6749:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                "typeString": "struct Storage.State storage pointer"
                              }
                            },
                            "id": 13236,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "riskLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18946,
                            "src": "6749:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RiskLimits_$18920_storage",
                              "typeString": "struct Storage.RiskLimits storage ref"
                            }
                          },
                          "id": 13237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "liquidationSpreadMax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18911,
                          "src": "6749:37:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "6733:53:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13239,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "6800:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53707265616420746f6f2068696768",
                        "id": 13240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6818:17:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8cfbe7ddd2c203e310d7f7408f1f8dadfdbb31bf0759a10ab43fcfe9b9acdac",
                          "typeString": "literal_string \"Spread too high\""
                        },
                        "value": "Spread too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8cfbe7ddd2c203e310d7f7408f1f8dadfdbb31bf0759a10ab43fcfe9b9acdac",
                          "typeString": "literal_string \"Spread too high\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13230,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "6707:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "6707:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6707:138:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13242,
                  "nodeType": "ExpressionStatement",
                  "src": "6707:138:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13246,
                            "name": "spread",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13227,
                            "src": "6881:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                              "typeString": "struct Decimal.D256 memory"
                            }
                          },
                          "id": 13247,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "6881:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 13248,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13225,
                                "src": "6896:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                  "typeString": "struct Storage.State storage pointer"
                                }
                              },
                              "id": 13249,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "riskParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18944,
                              "src": "6896:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RiskParams_$18907_storage",
                                "typeString": "struct Storage.RiskParams storage ref"
                              }
                            },
                            "id": 13250,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "marginRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18900,
                            "src": "6896:28:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_storage",
                              "typeString": "struct Decimal.D256 storage ref"
                            }
                          },
                          "id": 13251,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "6896:34:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6881:49:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13253,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "6944:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5370726561642063616e6e6f74206265203e3d20726174696f",
                        "id": 13254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6962:27:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dedb0136cb33a52e3dbc4c7418335c2535b3ada24d36517f389ee36a9346ad99",
                          "typeString": "literal_string \"Spread cannot be >= ratio\""
                        },
                        "value": "Spread cannot be >= ratio"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dedb0136cb33a52e3dbc4c7418335c2535b3ada24d36517f389ee36a9346ad99",
                          "typeString": "literal_string \"Spread cannot be >= ratio\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13243,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "6855:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "6855:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6855:144:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13256,
                  "nodeType": "ExpressionStatement",
                  "src": "6855:144:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13257,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13225,
                          "src": "7009:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                            "typeString": "struct Storage.State storage pointer"
                          }
                        },
                        "id": 13260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "riskParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18944,
                        "src": "7009:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RiskParams_$18907_storage",
                          "typeString": "struct Storage.RiskParams storage ref"
                        }
                      },
                      "id": 13261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "liquidationSpread",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18902,
                      "src": "7009:34:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_storage",
                        "typeString": "struct Decimal.D256 storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13262,
                      "name": "spread",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13227,
                      "src": "7046:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                        "typeString": "struct Decimal.D256 memory"
                      }
                    },
                    "src": "7009:43:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage",
                      "typeString": "struct Decimal.D256 storage ref"
                    }
                  },
                  "id": 13264,
                  "nodeType": "ExpressionStatement",
                  "src": "7009:43:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13266,
                        "name": "spread",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13227,
                        "src": "7091:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13265,
                      "name": "LogSetLiquidationSpread",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12847,
                      "src": "7067:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7067:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13268,
                  "nodeType": "EmitStatement",
                  "src": "7062:36:31"
                }
              ]
            },
            "documentation": null,
            "id": 13270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetLiquidationSpread",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13225,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13270,
                  "src": "6608:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13224,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "6608:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13227,
                  "name": "spread",
                  "nodeType": "VariableDeclaration",
                  "scope": 13270,
                  "src": "6645:26:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13226,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "6645:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6598:79:31"
            },
            "returnParameters": {
              "id": 13229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6697:0:31"
            },
            "scope": 13596,
            "src": "6564:541:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13302,
              "nodeType": "Block",
              "src": "7245:255:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13280,
                            "name": "earningsRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13274,
                            "src": "7281:12:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                              "typeString": "struct Decimal.D256 memory"
                            }
                          },
                          "id": 13281,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "7281:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13282,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13272,
                              "src": "7303:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                "typeString": "struct Storage.State storage pointer"
                              }
                            },
                            "id": 13283,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "riskLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18946,
                            "src": "7303:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RiskLimits_$18920_storage",
                              "typeString": "struct Storage.RiskLimits storage ref"
                            }
                          },
                          "id": 13284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "earningsRateMax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18913,
                          "src": "7303:32:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "7281:54:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13286,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "7349:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5261746520746f6f2068696768",
                        "id": 13287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7367:15:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7239863884fd78e1fcc1bb23093789e3e4a6fc4746a33bac7fd8ca038fba5641",
                          "typeString": "literal_string \"Rate too high\""
                        },
                        "value": "Rate too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7239863884fd78e1fcc1bb23093789e3e4a6fc4746a33bac7fd8ca038fba5641",
                          "typeString": "literal_string \"Rate too high\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13277,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "7255:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "7255:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7255:137:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13289,
                  "nodeType": "ExpressionStatement",
                  "src": "7255:137:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13290,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13272,
                          "src": "7402:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                            "typeString": "struct Storage.State storage pointer"
                          }
                        },
                        "id": 13293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "riskParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18944,
                        "src": "7402:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RiskParams_$18907_storage",
                          "typeString": "struct Storage.RiskParams storage ref"
                        }
                      },
                      "id": 13294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "earningsRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18904,
                      "src": "7402:29:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_storage",
                        "typeString": "struct Decimal.D256 storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13295,
                      "name": "earningsRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13274,
                      "src": "7434:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                        "typeString": "struct Decimal.D256 memory"
                      }
                    },
                    "src": "7402:44:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage",
                      "typeString": "struct Decimal.D256 storage ref"
                    }
                  },
                  "id": 13297,
                  "nodeType": "ExpressionStatement",
                  "src": "7402:44:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13299,
                        "name": "earningsRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13274,
                        "src": "7480:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13298,
                      "name": "LogSetEarningsRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12851,
                      "src": "7461:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7461:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13301,
                  "nodeType": "EmitStatement",
                  "src": "7456:37:31"
                }
              ]
            },
            "documentation": null,
            "id": 13303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetEarningsRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13272,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13303,
                  "src": "7150:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13271,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "7150:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13274,
                  "name": "earningsRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 13303,
                  "src": "7187:32:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13273,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "7187:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7140:85:31"
            },
            "returnParameters": {
              "id": 13276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7245:0:31"
            },
            "scope": 13596,
            "src": "7111:389:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13335,
              "nodeType": "Block",
              "src": "7650:280:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13313,
                            "name": "minBorrowedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13307,
                            "src": "7686:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Value_$18136_memory_ptr",
                              "typeString": "struct Monetary.Value memory"
                            }
                          },
                          "id": 13314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18135,
                          "src": "7686:22:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13315,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13305,
                              "src": "7712:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                "typeString": "struct Storage.State storage pointer"
                              }
                            },
                            "id": 13316,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "riskLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18946,
                            "src": "7712:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RiskLimits_$18920_storage",
                              "typeString": "struct Storage.RiskLimits storage ref"
                            }
                          },
                          "id": 13317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minBorrowedValueMax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18919,
                          "src": "7712:36:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "7686:62:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13319,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "7762:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "56616c756520746f6f2068696768",
                        "id": 13320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7780:16:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                          "typeString": "literal_string \"Value too high\""
                        },
                        "value": "Value too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                          "typeString": "literal_string \"Value too high\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13310,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "7660:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "7660:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7660:146:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13322,
                  "nodeType": "ExpressionStatement",
                  "src": "7660:146:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13323,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13305,
                          "src": "7816:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                            "typeString": "struct Storage.State storage pointer"
                          }
                        },
                        "id": 13326,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "riskParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18944,
                        "src": "7816:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RiskParams_$18907_storage",
                          "typeString": "struct Storage.RiskParams storage ref"
                        }
                      },
                      "id": 13327,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minBorrowedValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18906,
                      "src": "7816:33:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Value_$18136_storage",
                        "typeString": "struct Monetary.Value storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13328,
                      "name": "minBorrowedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13307,
                      "src": "7852:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Value_$18136_memory_ptr",
                        "typeString": "struct Monetary.Value memory"
                      }
                    },
                    "src": "7816:52:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Value_$18136_storage",
                      "typeString": "struct Monetary.Value storage ref"
                    }
                  },
                  "id": 13330,
                  "nodeType": "ExpressionStatement",
                  "src": "7816:52:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13332,
                        "name": "minBorrowedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13307,
                        "src": "7906:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Value_$18136_memory_ptr",
                          "typeString": "struct Monetary.Value memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Value_$18136_memory_ptr",
                          "typeString": "struct Monetary.Value memory"
                        }
                      ],
                      "id": 13331,
                      "name": "LogSetMinBorrowedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12855,
                      "src": "7883:22:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Value_$18136_memory_ptr_$returns$__$",
                        "typeString": "function (struct Monetary.Value memory)"
                      }
                    },
                    "id": 13333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7883:40:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13334,
                  "nodeType": "EmitStatement",
                  "src": "7878:45:31"
                }
              ]
            },
            "documentation": null,
            "id": 13336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetMinBorrowedValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13305,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13336,
                  "src": "7549:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13304,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "7549:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13307,
                  "name": "minBorrowedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 13336,
                  "src": "7586:38:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Value_$18136_memory_ptr",
                    "typeString": "struct Monetary.Value"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13306,
                    "name": "Monetary.Value",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18136,
                    "src": "7586:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Value_$18136_storage_ptr",
                      "typeString": "struct Monetary.Value"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7539:91:31"
            },
            "returnParameters": {
              "id": 13309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7650:0:31"
            },
            "scope": 13596,
            "src": "7506:424:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13358,
              "nodeType": "Block",
              "src": "8139:115:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13345,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13338,
                          "src": "8149:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                            "typeString": "struct Storage.State storage pointer"
                          }
                        },
                        "id": 13348,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "globalOperators",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18942,
                        "src": "8149:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13349,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13347,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13340,
                        "src": "8171:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8149:31:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13350,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13342,
                      "src": "8183:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8149:42:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13352,
                  "nodeType": "ExpressionStatement",
                  "src": "8149:42:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13354,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13340,
                        "src": "8228:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13355,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13342,
                        "src": "8238:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13353,
                      "name": "LogSetGlobalOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12861,
                      "src": "8207:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 13356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8207:40:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13357,
                  "nodeType": "EmitStatement",
                  "src": "8202:45:31"
                }
              ]
            },
            "documentation": null,
            "id": 13359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerSetGlobalOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13338,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13359,
                  "src": "8037:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13337,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "8037:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13340,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 13359,
                  "src": "8074:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8074:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13342,
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 13359,
                  "src": "8100:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13341,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8100:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8027:92:31"
            },
            "returnParameters": {
              "id": 13344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8139:0:31"
            },
            "scope": 13596,
            "src": "7996:258:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13406,
              "nodeType": "Block",
              "src": "8460:378:31",
              "statements": [
                {
                  "assignments": [
                    13369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13369,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 13406,
                      "src": "8522:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13368,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8522:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13375,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13370,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13361,
                          "src": "8538:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                            "typeString": "struct Storage.State storage pointer"
                          }
                        },
                        "id": 13371,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "markets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18926,
                        "src": "8538:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                          "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                        }
                      },
                      "id": 13373,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13372,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13363,
                        "src": "8552:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8538:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$18898_storage",
                        "typeString": "struct Storage.Market storage ref"
                      }
                    },
                    "id": 13374,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18883,
                    "src": "8538:29:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8522:45:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 13381,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13369,
                                "src": "8625:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 13379,
                                "name": "priceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13365,
                                "src": "8604:11:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                                  "typeString": "contract IPriceOracle"
                                }
                              },
                              "id": 13380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15874,
                              "src": "8604:20:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Price_$18133_memory_ptr_$",
                                "typeString": "function (address) view external returns (struct Monetary.Price memory)"
                              }
                            },
                            "id": 13382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8604:27:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Price_$18133_memory_ptr",
                              "typeString": "struct Monetary.Price memory"
                            }
                          },
                          "id": 13383,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18132,
                          "src": "8604:33:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 13384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8641:1:31",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8604:38:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13386,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "8656:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206f7261636c65207072696365",
                        "id": 13387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8674:22:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265",
                          "typeString": "literal_string \"Invalid oracle price\""
                        },
                        "value": "Invalid oracle price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b378524dde2c7c3f396f7d9c2e181f68f1bf2cb21a1d3c52e9c9a92f2c874265",
                          "typeString": "literal_string \"Invalid oracle price\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13376,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "8578:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "8578:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8578:128:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13389,
                  "nodeType": "ExpressionStatement",
                  "src": "8578:128:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13390,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13361,
                            "src": "8717:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                              "typeString": "struct Storage.State storage pointer"
                            }
                          },
                          "id": 13393,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18926,
                          "src": "8717:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 13394,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13392,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13363,
                          "src": "8731:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8717:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$18898_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 13395,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "priceOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18889,
                      "src": "8717:35:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                        "typeString": "contract IPriceOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13396,
                      "name": "priceOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13365,
                      "src": "8755:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                        "typeString": "contract IPriceOracle"
                      }
                    },
                    "src": "8717:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                      "typeString": "contract IPriceOracle"
                    }
                  },
                  "id": 13398,
                  "nodeType": "ExpressionStatement",
                  "src": "8717:49:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13400,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13363,
                        "src": "8800:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13402,
                            "name": "priceOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13365,
                            "src": "8818:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                              "typeString": "contract IPriceOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                              "typeString": "contract IPriceOracle"
                            }
                          ],
                          "id": 13401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8810:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 13403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8810:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13399,
                      "name": "LogSetPriceOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12821,
                      "src": "8782:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 13404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8782:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13405,
                  "nodeType": "EmitStatement",
                  "src": "8777:54:31"
                }
              ]
            },
            "documentation": null,
            "id": 13407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setPriceOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13361,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13407,
                  "src": "8346:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13360,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "8346:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13363,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13407,
                  "src": "8383:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8383:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13365,
                  "name": "priceOracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 13407,
                  "src": "8409:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                    "typeString": "contract IPriceOracle"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13364,
                    "name": "IPriceOracle",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15875,
                    "src": "8409:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceOracle_$15875",
                      "typeString": "contract IPriceOracle"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8336:103:31"
            },
            "returnParameters": {
              "id": 13367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8460:0:31"
            },
            "scope": 13596,
            "src": "8312:526:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 13448,
              "nodeType": "Block",
              "src": "9001:322:31",
              "statements": [
                {
                  "assignments": [
                    13417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13417,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 13448,
                      "src": "9081:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13416,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9081:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13423,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13418,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13409,
                          "src": "9097:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                            "typeString": "struct Storage.State storage pointer"
                          }
                        },
                        "id": 13419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "markets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18926,
                        "src": "9097:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                          "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                        }
                      },
                      "id": 13421,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13420,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13411,
                        "src": "9111:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9097:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$18898_storage",
                        "typeString": "struct Storage.Market storage ref"
                      }
                    },
                    "id": 13422,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18883,
                    "src": "9097:29:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9081:45:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13427,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13417,
                        "src": "9167:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9174:1:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9177:1:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13424,
                        "name": "interestSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13413,
                        "src": "9136:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                          "typeString": "contract IInterestSetter"
                        }
                      },
                      "id": 13426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterestRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15856,
                      "src": "9136:30:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$_Rate_$17654_memory_ptr_$",
                        "typeString": "function (address,uint256,uint256) view external returns (struct Interest.Rate memory)"
                      }
                    },
                    "id": 13430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9136:43:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rate_$17654_memory_ptr",
                      "typeString": "struct Interest.Rate memory"
                    }
                  },
                  "id": 13431,
                  "nodeType": "ExpressionStatement",
                  "src": "9136:43:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13432,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13409,
                            "src": "9190:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                              "typeString": "struct Storage.State storage pointer"
                            }
                          },
                          "id": 13435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18926,
                          "src": "9190:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 13436,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13434,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13411,
                          "src": "9204:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9190:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$18898_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 13437,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "interestSetter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18891,
                      "src": "9190:38:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                        "typeString": "contract IInterestSetter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13438,
                      "name": "interestSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13413,
                      "src": "9231:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                        "typeString": "contract IInterestSetter"
                      }
                    },
                    "src": "9190:55:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                      "typeString": "contract IInterestSetter"
                    }
                  },
                  "id": 13440,
                  "nodeType": "ExpressionStatement",
                  "src": "9190:55:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13442,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13411,
                        "src": "9282:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13444,
                            "name": "interestSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13413,
                            "src": "9300:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                              "typeString": "contract IInterestSetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                              "typeString": "contract IInterestSetter"
                            }
                          ],
                          "id": 13443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9292:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 13445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9292:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13441,
                      "name": "LogSetInterestSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12827,
                      "src": "9261:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 13446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9261:55:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13447,
                  "nodeType": "EmitStatement",
                  "src": "9256:60:31"
                }
              ]
            },
            "documentation": null,
            "id": 13449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setInterestSetter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13409,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13449,
                  "src": "8881:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13408,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "8881:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13411,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13449,
                  "src": "8918:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8918:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13413,
                  "name": "interestSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 13449,
                  "src": "8944:30:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                    "typeString": "contract IInterestSetter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13412,
                    "name": "IInterestSetter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15857,
                    "src": "8944:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInterestSetter_$15857",
                      "typeString": "contract IInterestSetter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8871:109:31"
            },
            "returnParameters": {
              "id": 13415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9001:0:31"
            },
            "scope": 13596,
            "src": "8844:479:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 13485,
              "nodeType": "Block",
              "src": "9488:289:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13461,
                            "name": "marginPremium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13455,
                            "src": "9524:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                              "typeString": "struct Decimal.D256 memory"
                            }
                          },
                          "id": 13462,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "9524:19:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13463,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13451,
                              "src": "9547:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                "typeString": "struct Storage.State storage pointer"
                              }
                            },
                            "id": 13464,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "riskLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18946,
                            "src": "9547:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RiskLimits_$18920_storage",
                              "typeString": "struct Storage.RiskLimits storage ref"
                            }
                          },
                          "id": 13465,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marginPremiumMax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18915,
                          "src": "9547:33:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "9524:56:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13467,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "9594:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d617267696e207072656d69756d20746f6f2068696768",
                        "id": 13468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9612:25:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bb8cd903cf0e5f9edbcc0eaec5686d956850ea08141803ab44ec7bc766ee9eb",
                          "typeString": "literal_string \"Margin premium too high\""
                        },
                        "value": "Margin premium too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bb8cd903cf0e5f9edbcc0eaec5686d956850ea08141803ab44ec7bc766ee9eb",
                          "typeString": "literal_string \"Margin premium too high\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13458,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "9498:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "9498:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9498:149:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13470,
                  "nodeType": "ExpressionStatement",
                  "src": "9498:149:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13471,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13451,
                            "src": "9657:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                              "typeString": "struct Storage.State storage pointer"
                            }
                          },
                          "id": 13474,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18926,
                          "src": "9657:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 13475,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13473,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13453,
                          "src": "9671:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9657:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$18898_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 13476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "marginPremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18893,
                      "src": "9657:37:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_storage",
                        "typeString": "struct Decimal.D256 storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13477,
                      "name": "marginPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13455,
                      "src": "9697:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                        "typeString": "struct Decimal.D256 memory"
                      }
                    },
                    "src": "9657:53:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage",
                      "typeString": "struct Decimal.D256 storage ref"
                    }
                  },
                  "id": 13479,
                  "nodeType": "ExpressionStatement",
                  "src": "9657:53:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13481,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13453,
                        "src": "9746:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13482,
                        "name": "marginPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13455,
                        "src": "9756:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13480,
                      "name": "LogSetMarginPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12833,
                      "src": "9726:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9726:44:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13484,
                  "nodeType": "EmitStatement",
                  "src": "9721:49:31"
                }
              ]
            },
            "documentation": null,
            "id": 13486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setMarginPremium",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13451,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13486,
                  "src": "9365:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13450,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "9365:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13453,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13486,
                  "src": "9402:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9402:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13455,
                  "name": "marginPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 13486,
                  "src": "9428:33:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13454,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "9428:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9355:112:31"
            },
            "returnParameters": {
              "id": 13457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9488:0:31"
            },
            "scope": 13596,
            "src": "9329:448:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 13522,
              "nodeType": "Block",
              "src": "9942:289:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13498,
                            "name": "spreadPremium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13492,
                            "src": "9978:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                              "typeString": "struct Decimal.D256 memory"
                            }
                          },
                          "id": 13499,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16660,
                          "src": "9978:19:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13500,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13488,
                              "src": "10001:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                "typeString": "struct Storage.State storage pointer"
                              }
                            },
                            "id": 13501,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "riskLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18946,
                            "src": "10001:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RiskLimits_$18920_storage",
                              "typeString": "struct Storage.RiskLimits storage ref"
                            }
                          },
                          "id": 13502,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "spreadPremiumMax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18917,
                          "src": "10001:33:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "9978:56:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13504,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "10048:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537072656164207072656d69756d20746f6f2068696768",
                        "id": 13505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10066:25:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_973220e11bf34d56bfcbd63043d4fbfcb6fe864cca21f6e2a5ef17801337466d",
                          "typeString": "literal_string \"Spread premium too high\""
                        },
                        "value": "Spread premium too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_973220e11bf34d56bfcbd63043d4fbfcb6fe864cca21f6e2a5ef17801337466d",
                          "typeString": "literal_string \"Spread premium too high\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13495,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "9952:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "9952:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9952:149:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13507,
                  "nodeType": "ExpressionStatement",
                  "src": "9952:149:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13508,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13488,
                            "src": "10111:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                              "typeString": "struct Storage.State storage pointer"
                            }
                          },
                          "id": 13511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "markets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18926,
                          "src": "10111:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                            "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                          }
                        },
                        "id": 13512,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13510,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13490,
                          "src": "10125:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10111:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$18898_storage",
                          "typeString": "struct Storage.Market storage ref"
                        }
                      },
                      "id": 13513,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "spreadPremium",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18895,
                      "src": "10111:37:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_storage",
                        "typeString": "struct Decimal.D256 storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13514,
                      "name": "spreadPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13492,
                      "src": "10151:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                        "typeString": "struct Decimal.D256 memory"
                      }
                    },
                    "src": "10111:53:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage",
                      "typeString": "struct Decimal.D256 storage ref"
                    }
                  },
                  "id": 13516,
                  "nodeType": "ExpressionStatement",
                  "src": "10111:53:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13518,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13490,
                        "src": "10200:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13519,
                        "name": "spreadPremium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13492,
                        "src": "10210:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                          "typeString": "struct Decimal.D256 memory"
                        }
                      ],
                      "id": 13517,
                      "name": "LogSetSpreadPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12839,
                      "src": "10180:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_D256_$16661_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct Decimal.D256 memory)"
                      }
                    },
                    "id": 13520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10180:44:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13521,
                  "nodeType": "EmitStatement",
                  "src": "10175:49:31"
                }
              ]
            },
            "documentation": null,
            "id": 13523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSpreadPremium",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13488,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13523,
                  "src": "9819:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13487,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "9819:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13490,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13523,
                  "src": "9856:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9856:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13492,
                  "name": "spreadPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 13523,
                  "src": "9882:33:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_D256_$16661_memory_ptr",
                    "typeString": "struct Decimal.D256"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13491,
                    "name": "Decimal.D256",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16661,
                    "src": "9882:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_D256_$16661_storage_ptr",
                      "typeString": "struct Decimal.D256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9809:112:31"
            },
            "returnParameters": {
              "id": 13494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9942:0:31"
            },
            "scope": 13596,
            "src": "9783:448:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 13574,
              "nodeType": "Block",
              "src": "10362:384:31",
              "statements": [
                {
                  "assignments": [
                    13531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13531,
                      "name": "numMarkets",
                      "nodeType": "VariableDeclaration",
                      "scope": 13574,
                      "src": "10372:18:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13530,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10372:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13534,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 13532,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13525,
                      "src": "10393:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                        "typeString": "struct Storage.State storage pointer"
                      }
                    },
                    "id": 13533,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "numMarkets",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18922,
                    "src": "10393:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10372:37:31"
                },
                {
                  "assignments": [
                    13536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13536,
                      "name": "marketExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 13574,
                      "src": "10420:17:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 13535,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10420:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13538,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 13537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10440:5:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10420:25:31"
                },
                {
                  "body": {
                    "id": 13563,
                    "nodeType": "Block",
                    "src": "10497:136:31",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 13555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 13549,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13525,
                                  "src": "10515:5:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                                    "typeString": "struct Storage.State storage pointer"
                                  }
                                },
                                "id": 13550,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "markets",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18926,
                                "src": "10515:13:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Market_$18898_storage_$",
                                  "typeString": "mapping(uint256 => struct Storage.Market storage ref)"
                                }
                              },
                              "id": 13552,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 13551,
                                "name": "m",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13540,
                                "src": "10529:1:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10515:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Market_$18898_storage",
                                "typeString": "struct Storage.Market storage ref"
                              }
                            },
                            "id": 13553,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18883,
                            "src": "10515:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 13554,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13527,
                            "src": "10541:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10515:31:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 13562,
                        "nodeType": "IfStatement",
                        "src": "10511:112:31",
                        "trueBody": {
                          "id": 13561,
                          "nodeType": "Block",
                          "src": "10548:75:31",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 13558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 13556,
                                  "name": "marketExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13536,
                                  "src": "10566:12:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 13557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10581:4:31",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "10566:19:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 13559,
                              "nodeType": "ExpressionStatement",
                              "src": "10566:19:31"
                            },
                            {
                              "id": 13560,
                              "nodeType": "Break",
                              "src": "10603:5:31"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13543,
                      "name": "m",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13540,
                      "src": "10476:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 13544,
                      "name": "numMarkets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13531,
                      "src": "10480:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10476:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13564,
                  "initializationExpression": {
                    "assignments": [
                      13540
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13540,
                        "name": "m",
                        "nodeType": "VariableDeclaration",
                        "scope": 13564,
                        "src": "10461:9:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10461:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 13542,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10473:1:31",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10461:13:31"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 13547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10492:3:31",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 13546,
                        "name": "m",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13540,
                        "src": "10492:1:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13548,
                    "nodeType": "ExpressionStatement",
                    "src": "10492:3:31"
                  },
                  "nodeType": "ForStatement",
                  "src": "10456:177:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10669:13:31",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 13568,
                          "name": "marketExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13536,
                          "src": "10670:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13570,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "10696:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b657420657869737473",
                        "id": 13571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10714:15:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d34539bb0696c661cd97fc7bcf8e161469a11090ce0456f3b1449a1180896cf",
                          "typeString": "literal_string \"Market exists\""
                        },
                        "value": "Market exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d34539bb0696c661cd97fc7bcf8e161469a11090ce0456f3b1449a1180896cf",
                          "typeString": "literal_string \"Market exists\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13565,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "10643:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18193,
                      "src": "10643:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32) pure"
                      }
                    },
                    "id": 13572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10643:96:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13573,
                  "nodeType": "ExpressionStatement",
                  "src": "10643:96:31"
                }
              ]
            },
            "documentation": null,
            "id": 13575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNoMarket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13525,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13575,
                  "src": "10272:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13524,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "10272:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13527,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13575,
                  "src": "10309:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10309:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10262:66:31"
            },
            "returnParameters": {
              "id": 13529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10362:0:31"
            },
            "scope": 13596,
            "src": "10237:509:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 13594,
              "nodeType": "Block",
              "src": "10881:146:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13585,
                          "name": "marketId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13579,
                          "src": "10917:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13586,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13577,
                            "src": "10928:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                              "typeString": "struct Storage.State storage pointer"
                            }
                          },
                          "id": 13587,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numMarkets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18922,
                          "src": "10928:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10917:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13589,
                        "name": "FILE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "10958:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574204f4f42",
                        "id": 13590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10976:12:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_717b3d4911341a5272a361785911af488409587a7add833e578f901496978792",
                          "typeString": "literal_string \"Market OOB\""
                        },
                        "value": "Market OOB"
                      },
                      {
                        "argumentTypes": null,
                        "id": 13591,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13579,
                        "src": "11002:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_717b3d4911341a5272a361785911af488409587a7add833e578f901496978792",
                          "typeString": "literal_string \"Market OOB\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13582,
                        "name": "Require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18831,
                        "src": "10891:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Require_$18831_$",
                          "typeString": "type(library Require)"
                        }
                      },
                      "id": 13584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "that",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18229,
                      "src": "10891:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,bytes32,bytes32,uint256) pure"
                      }
                    },
                    "id": 13592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10891:129:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13593,
                  "nodeType": "ExpressionStatement",
                  "src": "10891:129:31"
                }
              ]
            },
            "documentation": null,
            "id": 13595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateMarketId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13577,
                  "name": "state",
                  "nodeType": "VariableDeclaration",
                  "scope": 13595,
                  "src": "10788:27:31",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                    "typeString": "struct Storage.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13576,
                    "name": "Storage.State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18947,
                    "src": "10788:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$18947_storage_ptr",
                      "typeString": "struct Storage.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13579,
                  "name": "marketId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13595,
                  "src": "10825:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10825:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10778:69:31"
            },
            "returnParameters": {
              "id": 13581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10881:0:31"
            },
            "scope": 13596,
            "src": "10752:275:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 13597,
        "src": "1217:9812:31"
      }
    ],
    "src": "603:10427:31"
  },
  "bytecode": "611c8c610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100d95760003560e01c80638854ab3e11610096578063b25328e011610070578063b25328e014610200578063dd32998a14610236578063e80f802414610256578063f9cacc4c14610276576100d9565b80638854ab3e146101a05780638c5dabd1146101c0578063aa92e348146101e0576100d9565b80630f44e6bc146100de57806310c87b0614610100578063311401d01461012057806348d064841461014057806354dd3516146101605780637335079b14610180575b600080fd5b8180156100ea57600080fd5b506100fe6100f936600461180f565b610296565b005b81801561010c57600080fd5b506100fe61011b36600461187b565b61036f565b81801561012c57600080fd5b506100fe61013b36600461180f565b6103d7565b81801561014c57600080fd5b506100fe61015b366004611788565b610462565b81801561016c57600080fd5b506100fe61017b36600461180f565b6105a2565b81801561018c57600080fd5b506100fe61019b3660046118f0565b610668565b8180156101ac57600080fd5b506100fe6101bb3660046118f0565b610682565b8180156101cc57600080fd5b506100fe6101db3660046118ad565b610697565b8180156101ec57600080fd5b506100fe6101fb3660046118ad565b6106ac565b81801561020c57600080fd5b5061022061021b366004611849565b6106c1565b60405161022d9190611b47565b60405180910390f35b81801561024257600080fd5b506102206102513660046116f8565b6107dd565b81801561026257600080fd5b506100fe610271366004611745565b610861565b81801561028257600080fd5b506100fe61029136600461180f565b6108b9565b600982015481516102ea91600160401b900467ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f53707265616420746f6f20686967680000000000000000000000000000000000610943565b6005820154815161032c9111600160ba1b6810591b5a5b925b5c1b027f5370726561642063616e6e6f74206265203e3d20726174696f00000000000000610943565b805160068301556040517f9f7e4a6848b17eb13974d54a526bd85f5762577a23c3095ea6fd888d429e834b90610363908390611b39565b60405180910390a15050565b61037983836109a7565b600082815260018401602052604090819020600701805460ff1916831515179055517fec669433aa0b3212a238c30115dbf73736739faf98a33c293ecad3daad1b37f6906103ca9084908490611b70565b60405180910390a1505050565b6009820154815161042b91600160801b900467ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f5261746520746f6f206869676800000000000000000000000000000000000000610943565b805160078301556040517fea691dd294c7882aadc1bebc2ffb81b91afb6be606dbf15d627c073889c7243690610363908390611b39565b61046c86866109da565b85546001808201885560008281529088016020526040902080546001600160a01b0319166001600160a01b0388161790556104a5610a5f565b600082815260018901602090815260409182902083516002909101805492850151948401516bffffffffffffffffffffffff199093166001600160601b039283161777ffffffffffffffffffffffff0000000000000000000000001916600160601b929095169190910293909317600160c01b63ffffffff021916600160c01b63ffffffff9092169190910217909155517f8cf904fdff707692d4bd95366b93d7302a97b4bf64f6716fd00b046ecbf82a46906105659083908990611b55565b60405180910390a1610578878287610a9a565b610583878286610bd9565b61058e878285610ccf565b610599878284610d6d565b50505050505050565b600982015481516105ef9167ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f526174696f20746f6f2068696768000000000000000000000000000000000000610943565b600682015481516106319110600160ba1b6810591b5a5b925b5c1b027f526174696f2063616e6e6f74206265203c3d2073707265616400000000000000610943565b805160058301556040517f253f176964e18a501db01a67272483db404e4e473e8afd1d255eeb0e96eb2e1390610363908390611b39565b61067283836109a7565b61067d838383610ccf565b505050565b61068c83836109a7565b61067d838383610d6d565b6106a183836109a7565b61067d838383610a9a565b6106b683836109a7565b61067d838383610bd9565b60006106cd84846109a7565b6106d561160a565b6106e5858563ffffffff610e0416565b905061072a6106f382610ecc565b15600160ba1b6810591b5a5b925b5c1b027f4e65676174697665206578636573730000000000000000000000000000000000610943565b600061073c868663ffffffff610eea16565b905060006107596001600160a01b0383163063ffffffff610f0916565b9050808360200151111561076f57602083018190525b6020830151610790906001600160a01b03841690879063ffffffff610f8b16565b7fa5df3527e4451a18e4b8a5e3308e1d1f1962062aeafe061c48bbb29f172a39c88284602001516040516107c5929190611b0d565b60405180910390a150506020015190505b9392505050565b60006107e984846109da565b60006108046001600160a01b0385163063ffffffff610f0916565b90506108206001600160a01b038516848363ffffffff610f8b16565b7fa5df3527e4451a18e4b8a5e3308e1d1f1962062aeafe061c48bbb29f172a39c88482604051610851929190611b0d565b60405180910390a1949350505050565b6001600160a01b038216600090815260048401602052604090819020805460ff1916831515179055517feaeee7699e70e6b31ac89ec999ef6936b97ac1e364f0e1fcf584772372caa0d3906103ca9084908490611aca565b600a820154815161090c91600160401b90046001600160801b03161015600160ba1b6810591b5a5b925b5c1b027f56616c756520746f6f2068696768000000000000000000000000000000000000610943565b805160088301556040517ffdcde9342dcfa3a8817b7566b25fed913d2c6eddb65575d40e14681934fae97190610363908390611b39565b8261067d576109518261104a565b600160f51b6101d1026109638361104a565b60405160200161097593929190611a2d565b60408051601f1981840301815290829052600160e51b62461bcd02825261099e91600401611b28565b60405180910390fd5b81546109d6908210600160ba1b6810591b5a5b925b5c1b02600160b11b6926b0b935b2ba1027a7a102846110d2565b5050565b81546000805b82811015610a1d5760008181526001860160205260409020546001600160a01b0385811691161415610a155760019150610a1d565b6001016109e0565b50610a598115600160ba1b6810591b5a5b925b5c1b027f4d61726b65742065786973747300000000000000000000000000000000000000610943565b50505050565b610a67611621565b60408051606081018252670de0b6b3a76400008082526020820152908101610a8d611121565b63ffffffff169052905090565b600082815260018401602052604090819020549051600160e01b6341976e090281526001600160a01b0391821691610b6d91908416906341976e0990610ae4908590600401611abc565b60206040518083038186803b158015610afc57600080fd5b505afa158015610b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b3491908101906116da565b511515600160ba1b6810591b5a5b925b5c1b027f496e76616c6964206f7261636c65207072696365000000000000000000000000610943565b60008381526001850160205260409081902060030180546001600160a01b0319166001600160a01b038516179055517f6585928691672490b717a51fe425f4494b34c6b5cb8335c5dc1e70115bd2663090610bcb9085908590611b55565b60405180910390a150505050565b6000828152600184016020526040808220549051600160e01b63e8177dcf0281526001600160a01b03918216929184169163e8177dcf91610c209185918190600401611ae5565b60206040518083038186803b158015610c3857600080fd5b505afa158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c7091908101906116da565b5060008381526001850160205260409081902060040180546001600160a01b0319166001600160a01b038516179055517faa2217332f2505521d63c728f59a8692c1c8c952a0c5d578e4142bb88cefb06390610bcb9085908590611b55565b60098301548151610d2391600160c01b900467ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f4d617267696e207072656d69756d20746f6f2068696768000000000000000000610943565b6000828152600184016020526040908190208251600590910155517f19ecb621bc945075c47008c9deaf25107a3343ecfe752608915a9d1da35e9e7c906103ca9084908490611b7e565b600a8301548151610dba9167ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f537072656164207072656d69756d20746f6f2068696768000000000000000000610943565b6000828152600184016020526040908190208251600690910155517f8214bd57e079f2f3e3e5c52bf78db5fb85926c866aec322ba024db710365fc35906103ca9084908490611b7e565b610e0c61160a565b610e14611621565b610e24848463ffffffff61113116565b9050610e2e61160a565b610e3e858563ffffffff61119216565b90506000610e52868663ffffffff610eea16565b9050610e5c61160a565b6040518060400160405280600115158152602001610e7a8430610f09565b90529050610e8661160a565b610e8e61160a565b610e9885876111dc565b9092509050610ebd82610eb1858463ffffffff61127216565b9063ffffffff61127216565b96505050505050505b92915050565b8051600090158015610ee2575060008260200151115b90505b919050565b600090815260019190910160205260409020546001600160a01b031690565b604051600160e01b6370a082310281526000906001600160a01b038416906370a0823190610f3b908590600401611abc565b60206040518083038186803b158015610f5357600080fd5b505afa158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107d69190810190611933565b801580610fa057506001600160a01b03821630145b15610faa5761067d565b604051600160e01b63a9059cbb0281526001600160a01b0384169063a9059cbb90610fdb9085908590600401611b0d565b600060405180830381600087803b158015610ff557600080fd5b505af1158015611009573d6000803e3d6000fd5b5050505061067d61101861128c565b600160d91b642a37b5b2b7027f5472616e73666572206661696c65640000000000000000000000000000000000610943565b6060808260405160200161105e9190611a18565b60408051601f19818403018152919052905060205b80156110bb5781516000199091019082908290811061108e57fe5b01602001516001600160f81b031960f891821c90911b16156110b65760010181529050610ee5565b611073565b505060408051600081526020810190915292915050565b83610a59576110e08361104a565b600160f51b6101d1026110f28461104a565b600160f21b61080f02611104856112c0565b604051610975959493929190600160f91b601f0290602001611a5e565b600061112c42611380565b905090565b611139611621565b506000908152600191909101602090815260409182902082516060810184526002909101546001600160601b038082168352600160601b82041692820192909252600160c01b90910463ffffffff169181019190915290565b61119a61160a565b506000818152600180840160209081526040928390208351808501909452909101546001600160801b038082168452600160801b909104169082015292915050565b6111e461160a565b6111ec61160a565b6111f461160a565b5060408051808201909152600181526020858101516001600160801b03169082015261121e61160a565b50604080518082019091526000815285516001600160801b0316602082015261124561160a565b61124f83876113c0565b905061125961160a565b61126383886113c0565b91989197509095505050505050565b61127a61160a565b6107d6836112878461145e565b611485565b6000803d80156112a357602081146112ac576112b8565b600191506112b8565b60206000803e60005191505b501515905090565b6060816112e857506040805180820190915260018152600160fc1b6003026020820152610ee5565b8160005b811561130057600101600a820491506112ec565b6060816040519080825280601f01601f19166020018201604052801561132d576020820181803883390190505b508593509050815b80156113775760001901600a840660300160f81b82828151811061135557fe5b60200101906001600160f81b031916908160001a905350600a84049350611335565b50949350505050565b600081610ee263ffffffff82168214600160e31b6309ac2e8d027f556e73616665206361737420746f2075696e7433320000000000000000000000610943565b6113c861160a565b602083015183516001600160801b0390911690156114265760408051808201909152600181526020848101519082019061141b9084906001600160601b0316670de0b6b3a764000063ffffffff61151716565b815250915050610ec6565b60408051808201909152600081528351602082019061141b9084906001600160601b0316670de0b6b3a764000063ffffffff61154116565b61146661160a565b5060408051808201909152815115815260208083015190820152919050565b61148d61160a565b61149561160a565b82518451151590151514156114c857835115158152602080850151908401516114be919061159a565b60208201526107d6565b82602001518460200151106114f157835115158152602080850151908401516114be91906115ac565b8251151581526020808401519085015161150b91906115ac565b60208201529392505050565b60006115398261152d868663ffffffff6115c116565b9063ffffffff6115e816565b949350505050565b600083158061154e575082155b156115655761155e6000836115e8565b90506107d6565b611539600161158e8461152d836115828a8a63ffffffff6115c116565b9063ffffffff6115ac16565b9063ffffffff61159a16565b6000828201838110156107d657600080fd5b6000828211156115bb57600080fd5b50900390565b6000826115d057506000610ec6565b828202828482816115dd57fe5b04146107d657600080fd5b60008082116115f657600080fd5b600082848161160157fe5b04949350505050565b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b60006107d68235611bcd565b60006107d68235611bd8565b60006107d68235611c06565b60006020828403121561167757600080fd5b6116816020611b99565b9050600061168f84846116c2565b82525092915050565b6000602082840312156116aa57600080fd5b6116b46020611b99565b9050600061168f84846116ce565b60006107d68235611bf7565b60006107d68251611bf7565b6000602082840312156116ec57600080fd5b60006115398484611698565b60008060006060848603121561170d57600080fd5b600061171986866116c2565b935050602061172a86828701611641565b925050604061173b86828701611641565b9150509250925092565b60008060006060848603121561175a57600080fd5b600061176686866116c2565b935050602061177786828701611641565b925050604061173b8682870161164d565b60008060008060008060c087890312156117a157600080fd5b60006117ad89896116c2565b96505060206117be89828a01611641565b95505060406117cf89828a01611659565b94505060606117e089828a01611659565b93505060806117f189828a01611665565b92505060a061180289828a01611665565b9150509295509295509295565b6000806040838503121561182257600080fd5b600061182e85856116c2565b925050602061183f85828601611665565b9150509250929050565b60008060006060848603121561185e57600080fd5b600061186a86866116c2565b935050602061172a868287016116c2565b60008060006060848603121561189057600080fd5b600061189c86866116c2565b9350506020611777868287016116c2565b6000806000606084860312156118c257600080fd5b60006118ce86866116c2565b93505060206118df868287016116c2565b925050604061173b86828701611659565b60008060006060848603121561190557600080fd5b600061191186866116c2565b9350506020611922868287016116c2565b925050604061173b86828701611665565b60006020828403121561194557600080fd5b600061153984846116ce565b61195a81611bcd565b82525050565b61195a81611bd8565b61195a61197582611bdd565b611bf7565b61195a61197582611bea565b61195a61197582611bf7565b600061199d82611bc0565b6119a78185610ee5565b93506119b7818560208601611c1c565b9290920192915050565b61195a81611c11565b60006119d582611bc0565b6119df8185611bc4565b93506119ef818560208601611c1c565b6119f881611c48565b9093019392505050565b80516020830190610a5984825b61195a81611bf7565b6000611a248284611986565b50602001919050565b6000611a398286611992565b9150611a45828561197a565b600282019150611a558284611992565b95945050505050565b6000611a6a8289611992565b9150611a76828861197a565b600282019150611a868287611992565b9150611a92828661197a565b600282019150611aa28285611992565b9150611aae8284611969565b506001019695505050505050565b60208101610ec68284611951565b60408101611ad88285611951565b6107d66020830184611960565b60608101611af38286611951565b611b0060208301856119c1565b61153960408301846119c1565b60408101611b1b8285611951565b6107d66020830184611a0f565b602080825281016107d681846119ca565b60208101610ec68284611a02565b60208101610ec68284611a0f565b60408101611b638285611a0f565b6107d66020830184611951565b60408101611ad88285611a0f565b60408101611b8c8285611a0f565b6107d66020830184611a02565b60405181810167ffffffffffffffff81118282101715611bb857600080fd5b604052919050565b5190565b90815260200190565b6000610ee282611bfa565b151590565b6001600160f81b03191690565b6001600160f01b03191690565b90565b6001600160a01b031690565b6000610ee282611bcd565b6000610ee282611bf7565b60005b83811015611c37578181015183820152602001611c1f565b83811115610a595750506000910152565b601f01601f19169056fea265627a7a72305820d8a052dc6ee61f3efa586e2882c8c1650eb6f889027fe27acd7f5a9010d5a8f86c6578706572696d656e74616cf50037",
  "bytecodeSha1": "c2b83473b6210a6ed183e0b0eb54bcd83fd0e552",
  "compiler": {
    "evm_version": "petersburg",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.7+commit.6da8b019"
  },
  "contractName": "AdminImpl",
  "coverageMap": {
    "branches": {
      "31": {
        "AdminImpl._requireNoMarket": {
          "110": [
            10515,
            10546,
            false
          ]
        },
        "AdminImpl.ownerWithdrawExcessTokens": {
          "109": [
            3093,
            3124,
            false
          ]
        }
      },
      "35": {},
      "37": {},
      "38": {},
      "41": {},
      "42": {},
      "45": {
        "Interest.parToWei": {
          "111": [
            4062,
            4072,
            false
          ]
        }
      },
      "46": {
        "Math.getPartialRoundUp": {
          "112": [
            1619,
            1630,
            true
          ],
          "113": [
            1634,
            1648,
            false
          ]
        }
      },
      "48": {
        "Require.stringify": {
          "117": [
            7456,
            7466,
            false
          ]
        },
        "Require.stringifyTruncated": {
          "115": [
            6959,
            6973,
            false
          ]
        },
        "Require.that": {
          "114": [
            1427,
            1431,
            false
          ],
          "116": [
            1885,
            1889,
            false
          ]
        }
      },
      "49": {},
      "50": {},
      "51": {
        "Token.transfer": {
          "123": [
            2208,
            2219,
            true
          ],
          "124": [
            2223,
            2242,
            false
          ]
        }
      },
      "52": {
        "Types.add": {
          "125": [
            4438,
            4454,
            false
          ],
          "126": [
            4584,
            4602,
            false
          ]
        }
      },
      "75": {
        "SafeMath.add": {
          "118": [
            1543,
            1549,
            true
          ]
        },
        "SafeMath.div": {
          "122": [
            929,
            934,
            true
          ]
        },
        "SafeMath.mul": {
          "120": [
            527,
            533,
            false
          ],
          "121": [
            613,
            623,
            true
          ]
        },
        "SafeMath.sub": {
          "119": [
            1290,
            1296,
            true
          ]
        }
      }
    },
    "statements": {
      "31": {
        "AdminImpl._requireNoMarket": {
          "48": [
            10566,
            10585
          ],
          "49": [
            10603,
            10608
          ],
          "50": [
            10492,
            10495
          ],
          "51": [
            10643,
            10739
          ]
        },
        "AdminImpl._setInterestSetter": {
          "56": [
            9136,
            9179
          ],
          "57": [
            9190,
            9245
          ],
          "58": [
            9256,
            9316
          ]
        },
        "AdminImpl._setMarginPremium": {
          "59": [
            9498,
            9647
          ],
          "60": [
            9657,
            9710
          ],
          "61": [
            9721,
            9770
          ]
        },
        "AdminImpl._setPriceOracle": {
          "53": [
            8578,
            8706
          ],
          "54": [
            8717,
            8766
          ],
          "55": [
            8777,
            8831
          ]
        },
        "AdminImpl._setSpreadPremium": {
          "62": [
            9952,
            10101
          ],
          "63": [
            10111,
            10164
          ],
          "64": [
            10175,
            10224
          ]
        },
        "AdminImpl._validateMarketId": {
          "47": [
            10891,
            11020
          ]
        },
        "AdminImpl.ownerAddMarket": {
          "10": [
            4087,
            4117
          ],
          "11": [
            4174,
            4192
          ],
          "12": [
            4202,
            4239
          ],
          "13": [
            4249,
            4300
          ],
          "14": [
            4311,
            4345
          ],
          "15": [
            4356,
            4401
          ],
          "16": [
            4411,
            4462
          ],
          "17": [
            4472,
            4521
          ],
          "18": [
            4531,
            4580
          ]
        },
        "AdminImpl.ownerSetEarningsRate": {
          "7": [
            7255,
            7392
          ],
          "8": [
            7402,
            7446
          ],
          "9": [
            7456,
            7493
          ]
        },
        "AdminImpl.ownerSetGlobalOperator": {
          "41": [
            8149,
            8191
          ],
          "42": [
            8202,
            8247
          ]
        },
        "AdminImpl.ownerSetInterestSetter": {
          "29": [
            5328,
            5362
          ],
          "30": [
            5372,
            5423
          ]
        },
        "AdminImpl.ownerSetIsClosing": {
          "4": [
            4742,
            4776
          ],
          "5": [
            4786,
            4831
          ],
          "6": [
            4841,
            4882
          ]
        },
        "AdminImpl.ownerSetLiquidationSpread": {
          "0": [
            6707,
            6845
          ],
          "1": [
            6855,
            6999
          ],
          "2": [
            7009,
            7052
          ],
          "3": [
            7062,
            7098
          ]
        },
        "AdminImpl.ownerSetMarginPremium": {
          "23": [
            5608,
            5642
          ],
          "24": [
            5652,
            5701
          ]
        },
        "AdminImpl.ownerSetMarginRatio": {
          "19": [
            6177,
            6307
          ],
          "20": [
            6317,
            6466
          ],
          "21": [
            6476,
            6512
          ],
          "22": [
            6522,
            6551
          ]
        },
        "AdminImpl.ownerSetMinBorrowedValue": {
          "43": [
            7660,
            7806
          ],
          "44": [
            7816,
            7868
          ],
          "45": [
            7878,
            7923
          ]
        },
        "AdminImpl.ownerSetPriceOracle": {
          "27": [
            5056,
            5090
          ],
          "28": [
            5100,
            5145
          ]
        },
        "AdminImpl.ownerSetSpreadPremium": {
          "25": [
            5886,
            5920
          ],
          "26": [
            5930,
            5979
          ]
        },
        "AdminImpl.ownerWithdrawExcessTokens": {
          "31": [
            2737,
            2771
          ],
          "32": [
            2855,
            2963
          ],
          "33": [
            3140,
            3171
          ],
          "34": [
            3192,
            3234
          ],
          "35": [
            3245,
            3297
          ],
          "36": [
            3308,
            3330
          ]
        },
        "AdminImpl.ownerWithdrawUnsupportedTokens": {
          "37": [
            3531,
            3561
          ],
          "38": [
            3630,
            3664
          ],
          "39": [
            3675,
            3719
          ],
          "40": [
            3730,
            3744
          ]
        }
      },
      "35": {},
      "37": {},
      "38": {},
      "41": {},
      "42": {},
      "45": {
        "Interest.newIndex": {
          "52": [
            3628,
            3748
          ]
        },
        "Interest.parToWei": {
          "91": [
            4088,
            4214
          ],
          "92": [
            4245,
            4379
          ]
        },
        "Interest.totalParToWei": {
          "79": [
            5712,
            5741
          ]
        }
      },
      "46": {
        "Math.getPartial": {
          "101": [
            1293,
            1338
          ]
        },
        "Math.getPartialRoundUp": {
          "102": [
            1720,
            1755
          ],
          "103": [
            1775,
            1834
          ]
        },
        "Math.to32": {
          "90": [
            2597,
            2704
          ]
        }
      },
      "48": {
        "Require.stringify": {
          "82": [
            7482,
            7492
          ],
          "83": [
            7632,
            7640
          ],
          "84": [
            7654,
            7661
          ],
          "85": [
            7838,
            7847
          ],
          "86": [
            8035,
            8038
          ],
          "87": [
            8092,
            8136
          ],
          "88": [
            8196,
            8203
          ],
          "89": [
            8224,
            8235
          ]
        },
        "Require.stringifyTruncated": {
          "72": [
            6861,
            6864
          ],
          "73": [
            7220,
            7233
          ],
          "74": [
            7298,
            7317
          ]
        },
        "Require.that": {
          "46": [
            1447,
            1702
          ],
          "75": [
            1905,
            2269
          ]
        }
      },
      "49": {
        "Storage.getIndex": {
          "77": [
            4820,
            4856
          ]
        },
        "Storage.getNumExcessTokens": {
          "65": [
            5600,
            5647
          ]
        },
        "Storage.getToken": {
          "67": [
            4374,
            4410
          ]
        },
        "Storage.getTotalPar": {
          "78": [
            4597,
            4636
          ]
        }
      },
      "50": {
        "Time.currentTime": {
          "76": [
            1001,
            1034
          ]
        }
      },
      "51": {
        "Token.balanceOf": {
          "68": [
            1321,
            1358
          ]
        },
        "Token.checkSuccess": {
          "81": [
            3894,
            3917
          ]
        },
        "Token.transfer": {
          "69": [
            2258,
            2265
          ],
          "70": [
            2285,
            2319
          ],
          "71": [
            2330,
            2429
          ]
        }
      },
      "52": {
        "Types.add": {
          "94": [
            4470,
            4490
          ],
          "95": [
            4504,
            4549
          ],
          "96": [
            4622,
            4642
          ],
          "97": [
            4660,
            4705
          ],
          "98": [
            4744,
            4764
          ],
          "99": [
            4782,
            4827
          ],
          "100": [
            4861,
            4874
          ]
        },
        "Types.isNegative": {
          "66": [
            5525,
            5554
          ]
        },
        "Types.negative": {
          "93": [
            5320,
            5397
          ]
        },
        "Types.sub": {
          "80": [
            4232,
            4258
          ]
        }
      },
      "75": {
        "SafeMath.add": {
          "104": [
            1535,
            1550
          ]
        },
        "SafeMath.div": {
          "108": [
            921,
            935
          ]
        },
        "SafeMath.mul": {
          "106": [
            549,
            557
          ],
          "107": [
            605,
            624
          ]
        },
        "SafeMath.sub": {
          "105": [
            1282,
            1297
          ]
        }
      }
    }
  },
  "dependencies": [
    "Cache",
    "Decimal",
    "IErc20",
    "IInterestSetter",
    "IPriceOracle",
    "Interest",
    "Math",
    "Require",
    "SafeMath",
    "Storage",
    "Time",
    "Token",
    "Types"
  ],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600436106100d95760003560e01c80638854ab3e11610096578063b25328e011610070578063b25328e014610200578063dd32998a14610236578063e80f802414610256578063f9cacc4c14610276576100d9565b80638854ab3e146101a05780638c5dabd1146101c0578063aa92e348146101e0576100d9565b80630f44e6bc146100de57806310c87b0614610100578063311401d01461012057806348d064841461014057806354dd3516146101605780637335079b14610180575b600080fd5b8180156100ea57600080fd5b506100fe6100f936600461180f565b610296565b005b81801561010c57600080fd5b506100fe61011b36600461187b565b61036f565b81801561012c57600080fd5b506100fe61013b36600461180f565b6103d7565b81801561014c57600080fd5b506100fe61015b366004611788565b610462565b81801561016c57600080fd5b506100fe61017b36600461180f565b6105a2565b81801561018c57600080fd5b506100fe61019b3660046118f0565b610668565b8180156101ac57600080fd5b506100fe6101bb3660046118f0565b610682565b8180156101cc57600080fd5b506100fe6101db3660046118ad565b610697565b8180156101ec57600080fd5b506100fe6101fb3660046118ad565b6106ac565b81801561020c57600080fd5b5061022061021b366004611849565b6106c1565b60405161022d9190611b47565b60405180910390f35b81801561024257600080fd5b506102206102513660046116f8565b6107dd565b81801561026257600080fd5b506100fe610271366004611745565b610861565b81801561028257600080fd5b506100fe61029136600461180f565b6108b9565b600982015481516102ea91600160401b900467ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f53707265616420746f6f20686967680000000000000000000000000000000000610943565b6005820154815161032c9111600160ba1b6810591b5a5b925b5c1b027f5370726561642063616e6e6f74206265203e3d20726174696f00000000000000610943565b805160068301556040517f9f7e4a6848b17eb13974d54a526bd85f5762577a23c3095ea6fd888d429e834b90610363908390611b39565b60405180910390a15050565b61037983836109a7565b600082815260018401602052604090819020600701805460ff1916831515179055517fec669433aa0b3212a238c30115dbf73736739faf98a33c293ecad3daad1b37f6906103ca9084908490611b70565b60405180910390a1505050565b6009820154815161042b91600160801b900467ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f5261746520746f6f206869676800000000000000000000000000000000000000610943565b805160078301556040517fea691dd294c7882aadc1bebc2ffb81b91afb6be606dbf15d627c073889c7243690610363908390611b39565b61046c86866109da565b85546001808201885560008281529088016020526040902080546001600160a01b0319166001600160a01b0388161790556104a5610a5f565b600082815260018901602090815260409182902083516002909101805492850151948401516bffffffffffffffffffffffff199093166001600160601b039283161777ffffffffffffffffffffffff0000000000000000000000001916600160601b929095169190910293909317600160c01b63ffffffff021916600160c01b63ffffffff9092169190910217909155517f8cf904fdff707692d4bd95366b93d7302a97b4bf64f6716fd00b046ecbf82a46906105659083908990611b55565b60405180910390a1610578878287610a9a565b610583878286610bd9565b61058e878285610ccf565b610599878284610d6d565b50505050505050565b600982015481516105ef9167ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f526174696f20746f6f2068696768000000000000000000000000000000000000610943565b600682015481516106319110600160ba1b6810591b5a5b925b5c1b027f526174696f2063616e6e6f74206265203c3d2073707265616400000000000000610943565b805160058301556040517f253f176964e18a501db01a67272483db404e4e473e8afd1d255eeb0e96eb2e1390610363908390611b39565b61067283836109a7565b61067d838383610ccf565b505050565b61068c83836109a7565b61067d838383610d6d565b6106a183836109a7565b61067d838383610a9a565b6106b683836109a7565b61067d838383610bd9565b60006106cd84846109a7565b6106d561160a565b6106e5858563ffffffff610e0416565b905061072a6106f382610ecc565b15600160ba1b6810591b5a5b925b5c1b027f4e65676174697665206578636573730000000000000000000000000000000000610943565b600061073c868663ffffffff610eea16565b905060006107596001600160a01b0383163063ffffffff610f0916565b9050808360200151111561076f57602083018190525b6020830151610790906001600160a01b03841690879063ffffffff610f8b16565b7fa5df3527e4451a18e4b8a5e3308e1d1f1962062aeafe061c48bbb29f172a39c88284602001516040516107c5929190611b0d565b60405180910390a150506020015190505b9392505050565b60006107e984846109da565b60006108046001600160a01b0385163063ffffffff610f0916565b90506108206001600160a01b038516848363ffffffff610f8b16565b7fa5df3527e4451a18e4b8a5e3308e1d1f1962062aeafe061c48bbb29f172a39c88482604051610851929190611b0d565b60405180910390a1949350505050565b6001600160a01b038216600090815260048401602052604090819020805460ff1916831515179055517feaeee7699e70e6b31ac89ec999ef6936b97ac1e364f0e1fcf584772372caa0d3906103ca9084908490611aca565b600a820154815161090c91600160401b90046001600160801b03161015600160ba1b6810591b5a5b925b5c1b027f56616c756520746f6f2068696768000000000000000000000000000000000000610943565b805160088301556040517ffdcde9342dcfa3a8817b7566b25fed913d2c6eddb65575d40e14681934fae97190610363908390611b39565b8261067d576109518261104a565b600160f51b6101d1026109638361104a565b60405160200161097593929190611a2d565b60408051601f1981840301815290829052600160e51b62461bcd02825261099e91600401611b28565b60405180910390fd5b81546109d6908210600160ba1b6810591b5a5b925b5c1b02600160b11b6926b0b935b2ba1027a7a102846110d2565b5050565b81546000805b82811015610a1d5760008181526001860160205260409020546001600160a01b0385811691161415610a155760019150610a1d565b6001016109e0565b50610a598115600160ba1b6810591b5a5b925b5c1b027f4d61726b65742065786973747300000000000000000000000000000000000000610943565b50505050565b610a67611621565b60408051606081018252670de0b6b3a76400008082526020820152908101610a8d611121565b63ffffffff169052905090565b600082815260018401602052604090819020549051600160e01b6341976e090281526001600160a01b0391821691610b6d91908416906341976e0990610ae4908590600401611abc565b60206040518083038186803b158015610afc57600080fd5b505afa158015610b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b3491908101906116da565b511515600160ba1b6810591b5a5b925b5c1b027f496e76616c6964206f7261636c65207072696365000000000000000000000000610943565b60008381526001850160205260409081902060030180546001600160a01b0319166001600160a01b038516179055517f6585928691672490b717a51fe425f4494b34c6b5cb8335c5dc1e70115bd2663090610bcb9085908590611b55565b60405180910390a150505050565b6000828152600184016020526040808220549051600160e01b63e8177dcf0281526001600160a01b03918216929184169163e8177dcf91610c209185918190600401611ae5565b60206040518083038186803b158015610c3857600080fd5b505afa158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c7091908101906116da565b5060008381526001850160205260409081902060040180546001600160a01b0319166001600160a01b038516179055517faa2217332f2505521d63c728f59a8692c1c8c952a0c5d578e4142bb88cefb06390610bcb9085908590611b55565b60098301548151610d2391600160c01b900467ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f4d617267696e207072656d69756d20746f6f2068696768000000000000000000610943565b6000828152600184016020526040908190208251600590910155517f19ecb621bc945075c47008c9deaf25107a3343ecfe752608915a9d1da35e9e7c906103ca9084908490611b7e565b600a8301548151610dba9167ffffffffffffffff161015600160ba1b6810591b5a5b925b5c1b027f537072656164207072656d69756d20746f6f2068696768000000000000000000610943565b6000828152600184016020526040908190208251600690910155517f8214bd57e079f2f3e3e5c52bf78db5fb85926c866aec322ba024db710365fc35906103ca9084908490611b7e565b610e0c61160a565b610e14611621565b610e24848463ffffffff61113116565b9050610e2e61160a565b610e3e858563ffffffff61119216565b90506000610e52868663ffffffff610eea16565b9050610e5c61160a565b6040518060400160405280600115158152602001610e7a8430610f09565b90529050610e8661160a565b610e8e61160a565b610e9885876111dc565b9092509050610ebd82610eb1858463ffffffff61127216565b9063ffffffff61127216565b96505050505050505b92915050565b8051600090158015610ee2575060008260200151115b90505b919050565b600090815260019190910160205260409020546001600160a01b031690565b604051600160e01b6370a082310281526000906001600160a01b038416906370a0823190610f3b908590600401611abc565b60206040518083038186803b158015610f5357600080fd5b505afa158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107d69190810190611933565b801580610fa057506001600160a01b03821630145b15610faa5761067d565b604051600160e01b63a9059cbb0281526001600160a01b0384169063a9059cbb90610fdb9085908590600401611b0d565b600060405180830381600087803b158015610ff557600080fd5b505af1158015611009573d6000803e3d6000fd5b5050505061067d61101861128c565b600160d91b642a37b5b2b7027f5472616e73666572206661696c65640000000000000000000000000000000000610943565b6060808260405160200161105e9190611a18565b60408051601f19818403018152919052905060205b80156110bb5781516000199091019082908290811061108e57fe5b01602001516001600160f81b031960f891821c90911b16156110b65760010181529050610ee5565b611073565b505060408051600081526020810190915292915050565b83610a59576110e08361104a565b600160f51b6101d1026110f28461104a565b600160f21b61080f02611104856112c0565b604051610975959493929190600160f91b601f0290602001611a5e565b600061112c42611380565b905090565b611139611621565b506000908152600191909101602090815260409182902082516060810184526002909101546001600160601b038082168352600160601b82041692820192909252600160c01b90910463ffffffff169181019190915290565b61119a61160a565b506000818152600180840160209081526040928390208351808501909452909101546001600160801b038082168452600160801b909104169082015292915050565b6111e461160a565b6111ec61160a565b6111f461160a565b5060408051808201909152600181526020858101516001600160801b03169082015261121e61160a565b50604080518082019091526000815285516001600160801b0316602082015261124561160a565b61124f83876113c0565b905061125961160a565b61126383886113c0565b91989197509095505050505050565b61127a61160a565b6107d6836112878461145e565b611485565b6000803d80156112a357602081146112ac576112b8565b600191506112b8565b60206000803e60005191505b501515905090565b6060816112e857506040805180820190915260018152600160fc1b6003026020820152610ee5565b8160005b811561130057600101600a820491506112ec565b6060816040519080825280601f01601f19166020018201604052801561132d576020820181803883390190505b508593509050815b80156113775760001901600a840660300160f81b82828151811061135557fe5b60200101906001600160f81b031916908160001a905350600a84049350611335565b50949350505050565b600081610ee263ffffffff82168214600160e31b6309ac2e8d027f556e73616665206361737420746f2075696e7433320000000000000000000000610943565b6113c861160a565b602083015183516001600160801b0390911690156114265760408051808201909152600181526020848101519082019061141b9084906001600160601b0316670de0b6b3a764000063ffffffff61151716565b815250915050610ec6565b60408051808201909152600081528351602082019061141b9084906001600160601b0316670de0b6b3a764000063ffffffff61154116565b61146661160a565b5060408051808201909152815115815260208083015190820152919050565b61148d61160a565b61149561160a565b82518451151590151514156114c857835115158152602080850151908401516114be919061159a565b60208201526107d6565b82602001518460200151106114f157835115158152602080850151908401516114be91906115ac565b8251151581526020808401519085015161150b91906115ac565b60208201529392505050565b60006115398261152d868663ffffffff6115c116565b9063ffffffff6115e816565b949350505050565b600083158061154e575082155b156115655761155e6000836115e8565b90506107d6565b611539600161158e8461152d836115828a8a63ffffffff6115c116565b9063ffffffff6115ac16565b9063ffffffff61159a16565b6000828201838110156107d657600080fd5b6000828211156115bb57600080fd5b50900390565b6000826115d057506000610ec6565b828202828482816115dd57fe5b04146107d657600080fd5b60008082116115f657600080fd5b600082848161160157fe5b04949350505050565b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b60006107d68235611bcd565b60006107d68235611bd8565b60006107d68235611c06565b60006020828403121561167757600080fd5b6116816020611b99565b9050600061168f84846116c2565b82525092915050565b6000602082840312156116aa57600080fd5b6116b46020611b99565b9050600061168f84846116ce565b60006107d68235611bf7565b60006107d68251611bf7565b6000602082840312156116ec57600080fd5b60006115398484611698565b60008060006060848603121561170d57600080fd5b600061171986866116c2565b935050602061172a86828701611641565b925050604061173b86828701611641565b9150509250925092565b60008060006060848603121561175a57600080fd5b600061176686866116c2565b935050602061177786828701611641565b925050604061173b8682870161164d565b60008060008060008060c087890312156117a157600080fd5b60006117ad89896116c2565b96505060206117be89828a01611641565b95505060406117cf89828a01611659565b94505060606117e089828a01611659565b93505060806117f189828a01611665565b92505060a061180289828a01611665565b9150509295509295509295565b6000806040838503121561182257600080fd5b600061182e85856116c2565b925050602061183f85828601611665565b9150509250929050565b60008060006060848603121561185e57600080fd5b600061186a86866116c2565b935050602061172a868287016116c2565b60008060006060848603121561189057600080fd5b600061189c86866116c2565b9350506020611777868287016116c2565b6000806000606084860312156118c257600080fd5b60006118ce86866116c2565b93505060206118df868287016116c2565b925050604061173b86828701611659565b60008060006060848603121561190557600080fd5b600061191186866116c2565b9350506020611922868287016116c2565b925050604061173b86828701611665565b60006020828403121561194557600080fd5b600061153984846116ce565b61195a81611bcd565b82525050565b61195a81611bd8565b61195a61197582611bdd565b611bf7565b61195a61197582611bea565b61195a61197582611bf7565b600061199d82611bc0565b6119a78185610ee5565b93506119b7818560208601611c1c565b9290920192915050565b61195a81611c11565b60006119d582611bc0565b6119df8185611bc4565b93506119ef818560208601611c1c565b6119f881611c48565b9093019392505050565b80516020830190610a5984825b61195a81611bf7565b6000611a248284611986565b50602001919050565b6000611a398286611992565b9150611a45828561197a565b600282019150611a558284611992565b95945050505050565b6000611a6a8289611992565b9150611a76828861197a565b600282019150611a868287611992565b9150611a92828661197a565b600282019150611aa28285611992565b9150611aae8284611969565b506001019695505050505050565b60208101610ec68284611951565b60408101611ad88285611951565b6107d66020830184611960565b60608101611af38286611951565b611b0060208301856119c1565b61153960408301846119c1565b60408101611b1b8285611951565b6107d66020830184611a0f565b602080825281016107d681846119ca565b60208101610ec68284611a02565b60208101610ec68284611a0f565b60408101611b638285611a0f565b6107d66020830184611951565b60408101611ad88285611a0f565b60408101611b8c8285611a0f565b6107d66020830184611a02565b60405181810167ffffffffffffffff81118282101715611bb857600080fd5b604052919050565b5190565b90815260200190565b6000610ee282611bfa565b151590565b6001600160f81b03191690565b6001600160f01b03191690565b90565b6001600160a01b031690565b6000610ee282611bcd565b6000610ee282611bf7565b60005b83811015611c37578181015183820152602001611c1f565b83811115610a595750506000910152565b601f01601f19169056fea265627a7a72305820d8a052dc6ee61f3efa586e2882c8c1650eb6f889027fe27acd7f5a9010d5a8f86c6578706572696d656e74616cf50037",
  "deployedSourceMap": "1217:9812:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6564:541;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6564:541:31;;;;;;;;:::i;:::-;;4593:296;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4593:296:31;;;;;;;;:::i;7111:389::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7111:389:31;;;;;;;;:::i;3808:779::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3808:779:31;;;;;;;;:::i;6041:517::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6041:517:31;;;;;;;;:::i;5436:272::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5436:272:31;;;;;;;;:::i;5714:::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5714:272:31;;;;;;;;:::i;4895:257::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4895:257:31;;;;;;;;:::i;5158:272::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5158:272:31;;;;;;;;:::i;2551:786::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2551:786:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3343:408;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3343:408:31;;;;;;;;:::i;7996:258::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7996:258:31;;;;;;;;:::i;7506:424::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7506:424:31;;;;;;;;:::i;6564:541::-;6749:16;;;:37;6733:12;;6707:138;;-1:-1:-1;;;6749:37:31;;;;-1:-1:-1;6733:53:31;-1:-1:-1;;;;;6707:138:31;:12;:138::i;:::-;6896:16;;;:34;6881:12;;6855:144;;-1:-1:-1;;;;;;6855:144:31;:12;:144::i;:::-;7009:43;;:34;;;:43;7067:31;;;;;;7046:6;;7067:31;;;;;;;;;;6564:541;;:::o;4593:296::-;4742:34;4760:5;4767:8;4742:17;:34::i;:::-;4786:23;;;;:13;;;:23;;;;;;;:33;;:45;;-1:-1:-1;;4786:45:31;;;;;;;4846:36;;;;;4786:23;;:45;;4846:36;;;;;;;;;;4593:296;;;:::o;7111:389::-;7303:16;;;:32;7281:18;;7255:137;;-1:-1:-1;;;7303:32:31;;;;-1:-1:-1;7281:54:31;-1:-1:-1;;;;;7255:137:31;:12;:137::i;:::-;7402:44;;:29;;;:44;7461:32;;;;;;7434:12;;7461:32;;3808:779;4087:30;4104:5;4111;4087:16;:30::i;:::-;4147:16;;4174:18;;;;;;-1:-1:-1;4202:23:31;;;:13;;;:23;;;;;:37;;-1:-1:-1;;;;;;4202:37:31;-1:-1:-1;;;;;4202:37:31;;;;;4281:19;:17;:19::i;:::-;4249:23;;;;:13;;;:23;;;;;;;;;:51;;:29;;;;:51;;;;;;;;;;-1:-1:-1;;4249:51:31;;;-1:-1:-1;;;;;4249:51:31;;;;-1:-1:-1;;4249:51:31;-1:-1:-1;;;4249:51:31;;;;;;;;;;;;-1:-1:-1;;;;;;4249:51:31;-1:-1:-1;;;4249:51:31;;;;;;;;;;;;4316:29;;;;;4249:23;;4339:5;;4316:29;;;;;;;;;;4356:45;4372:5;4379:8;4389:11;4356:15;:45::i;:::-;4411:51;4430:5;4437:8;4447:14;4411:18;:51::i;:::-;4472:49;4490:5;4497:8;4507:13;4472:17;:49::i;:::-;4531;4549:5;4556:8;4566:13;4531:17;:49::i;:::-;3808:779;;;;;;;:::o;6041:517::-;6218:16;;;:31;6203:11;;6177:130;;6218:31;;-1:-1:-1;6203:46:31;-1:-1:-1;;;;;6177:130:31;:12;:130::i;:::-;6357:34;;;:40;6343:11;;6317:149;;-1:-1:-1;;;;;;6317:149:31;:12;:149::i;:::-;6476:36;;:16;;;:36;6527:24;;;;;;6507:5;;6527:24;;5436:272;5608:34;5626:5;5633:8;5608:17;:34::i;:::-;5652:49;5670:5;5677:8;5687:13;5652:17;:49::i;:::-;5436:272;;;:::o;5714:::-;5886:34;5904:5;5911:8;5886:17;:34::i;:::-;5930:49;5948:5;5955:8;5965:13;5930:17;:49::i;4895:257::-;5056:34;5074:5;5081:8;5056:17;:34::i;:::-;5100:45;5116:5;5123:8;5133:11;5100:15;:45::i;5158:272::-;5328:34;5346:5;5353:8;5328:17;:34::i;:::-;5372:51;5391:5;5398:8;5408:14;5372:18;:51::i;2551:786::-;2714:7;2737:34;2755:5;2762:8;2737:17;:34::i;:::-;2781:26;;:::i;:::-;2810:34;:5;2835:8;2810:34;:24;:34;:::i;:::-;2781:63;;2855:108;2882:22;:9;:20;:22::i;:::-;2881:23;-1:-1:-1;;;;;2855:108:31;:12;:108::i;:::-;2974:13;2990:24;:5;3005:8;2990:24;:14;:24;:::i;:::-;2974:40;-1:-1:-1;3025:21:31;3049:30;-1:-1:-1;;;;;3049:15:31;;3073:4;3049:30;:15;:30;:::i;:::-;3025:54;;3111:13;3093:9;:15;;;:31;3089:93;;;3140:15;;;:31;;;3089:93;3218:15;;;;3192:42;;-1:-1:-1;;;;;3192:14:31;;;3207:9;;3192:42;:14;:42;:::i;:::-;3250:47;3274:5;3281:9;:15;;;3250:47;;;;;;;;;;;;;;;;-1:-1:-1;;3315:15:31;;;;-1:-1:-1;2551:786:31;;;;;;:::o;3343:408::-;3508:7;3531:30;3548:5;3555;3531:16;:30::i;:::-;3572:15;3590:30;-1:-1:-1;;;;;3590:15:31;;3614:4;3590:30;:15;:30;:::i;:::-;3572:48;-1:-1:-1;3630:34:31;-1:-1:-1;;;;;3630:14:31;;3645:9;3572:48;3630:34;:14;:34;:::i;:::-;3680:39;3704:5;3711:7;3680:39;;;;;;;;;;;;;;;;3737:7;3343:408;-1:-1:-1;;;;3343:408:31:o;7996:258::-;-1:-1:-1;;;;;8149:31:31;;;;;;:21;;;:31;;;;;;;:42;;-1:-1:-1;;8149:42:31;;;;;;;8207:40;;;;;8149:31;;:42;;8207:40;;7506:424;7712:36;;;;7686:22;;7660:146;;-1:-1:-1;;;7712:36:31;;-1:-1:-1;;;;;7712:36:31;-1:-1:-1;7686:62:31;-1:-1:-1;;;;;7660:146:31;:12;:146::i;:::-;7816:52;;:33;;;:52;7883:40;;;;;;7852:16;;7883:40;;1293:426:48;1427:4;1422:291;;1541:24;1560:4;1541:18;:24::i;:::-;-1:-1:-1;;;;;1622:26:48;1641:6;1622:18;:26::i;:::-;1499:171;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;1499:171:48;;;;-1:-1:-1;;;;;1447:255:48;;;;;;;;;;;;;;;;10752:275:31;10928:16;;10891:129;;10917:27;;-1:-1:-1;;;;;;;;;;10917:8:31;10891:12;:129::i;:::-;10752:275;;:::o;10237:509::-;10393:16;;10372:18;;10456:177;10480:10;10476:1;:14;10456:177;;;10515:16;;;;:13;;;:16;;;;;:22;-1:-1:-1;;;;;10515:31:31;;;:22;;:31;10511:112;;;10581:4;10566:19;;10603:5;;10511:112;10492:3;;10456:177;;;;10643:96;10670:12;10669:13;-1:-1:-1;;;;;10643:96:31;:12;:96::i;:::-;10237:509;;;;:::o;3533:222:45:-;3600:12;;:::i;:::-;3635:113;;;;;;;;1197:6;3635:113;;;;;;;;;;3719:18;:16;:18::i;:::-;3635:113;;;;3628:120;-1:-1:-1;3533:222:45;:::o;8312:526:31:-;8522:13;8538:23;;;:13;;;:23;;;;;;;:29;8604:27;;-1:-1:-1;;;;;8604:27:31;;-1:-1:-1;;;;;8538:29:31;;;;8578:128;;8604:20;;;;;;:27;;8538:29;;8604:27;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8604:27:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8604:27:31;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8604:27:31;;;;;;;;;:33;:38;;-1:-1:-1;;;;;8578:128:31;:12;:128::i;:::-;8717:23;;;;:13;;;:23;;;;;;;:35;;:49;;-1:-1:-1;;;;;;8717:49:31;-1:-1:-1;;;;;8717:49:31;;;;;8782;;;;;8717:23;;:49;;8782;;;;;;;;;;8312:526;;;;:::o;8844:479::-;9081:13;9097:23;;;:13;;;:23;;;;;;:29;9136:43;;-1:-1:-1;;;;;9136:43:31;;-1:-1:-1;;;;;9097:29:31;;;;9136:30;;;;;;:43;;9097:29;;9081:13;;9136:43;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9136:43:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9136:43:31;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9136:43:31;;;;;;;;;-1:-1:-1;9190:23:31;;;;:13;;;:23;;;;;;;:38;;:55;;-1:-1:-1;;;;;;9190:55:31;-1:-1:-1;;;;;9190:55:31;;;;;9261;;;;;9190:23;;:55;;9261;;9329:448;9547:16;;;:33;9524:19;;9498:149;;-1:-1:-1;;;9547:33:31;;;;-1:-1:-1;9524:56:31;-1:-1:-1;;;;;9498:149:31;:12;:149::i;:::-;9657:23;;;;:13;;;:23;;;;;;;:53;;:37;;;;:53;9726:44;;;;;9671:8;;9697:13;;9726:44;;9783:448;10001:33;;;;9978:19;;9952:149;;10001:33;;-1:-1:-1;9978:56:31;-1:-1:-1;;;;;9952:149:31;:12;:149::i;:::-;10111:23;;;;:13;;;:23;;;;;;;:53;;:37;;;;:53;10180:44;;;;;10125:8;;10151:13;;10180:44;;4869:785:49;5013:16;;:::i;:::-;5045:27;;:::i;:::-;5075:24;:5;5090:8;5075:24;:14;:24;:::i;:::-;5045:54;;5109:30;;:::i;:::-;5142:27;:5;5160:8;5142:27;:17;:27;:::i;:::-;5109:60;-1:-1:-1;5180:13:49;5196:24;:5;5211:8;5196:24;:14;:24;:::i;:::-;5180:40;;5231:27;;:::i;:::-;5261:103;;;;;;;;5291:4;5261:103;;;;;;5316:37;5332:5;5347:4;5316:15;:37::i;:::-;5261:103;;5231:133;-1:-1:-1;5389:26:49;;:::i;:::-;5429;;:::i;:::-;5468:39;5491:8;5501:5;5468:22;:39::i;:::-;5375:132;;-1:-1:-1;5375:132:49;-1:-1:-1;5607:40:49;5375:132;5607:25;:10;5375:132;5607:25;:14;:25;:::i;:::-;:29;:40;:29;:40;:::i;:::-;5600:47;;;;;;;;4869:785;;;;;:::o;5410:151:52:-;5533:6;;5505:4;;5532:7;:22;;;;;5553:1;5543;:7;;;:11;5532:22;5525:29;;5410:151;;;;:::o;4217:200:49:-;4351:7;4381:23;;;:13;;;;;:23;;;;;:29;-1:-1:-1;;;;;4381:29:49;;4217:200::o;1180:185:51:-;1328:30;;-1:-1:-1;;;;;1328:30:51;;1298:7;;-1:-1:-1;;;;;1328:23:51;;;;;:30;;1352:5;;1328:30;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1328:30:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1328:30:51;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1328:30:51;;;;;;;;2082:354;2208:11;;;:34;;-1:-1:-1;;;;;;2223:19:51;;2237:4;2223:19;2208:34;2204:71;;;2258:7;;2204:71;2285:34;;-1:-1:-1;;;;;2285:34:51;;-1:-1:-1;;;;;2285:22:51;;;;;:34;;2308:2;;2312:6;;2285:34;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2285:34:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2285:34:51;;;;2330:99;2356:14;:12;:14::i;:::-;-1:-1:-1;;;;;2330:99:51;:12;:99::i;6358:966:48:-;6461:12;6536:19;6575:5;6558:23;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;6558:23:48;;;;-1:-1:-1;49:4;6687:571:48;6708:5;;6687:571;;6959:9;;-1:-1:-1;;6861:3:48;;;;6959:6;;6861:3;;6959:9;;;;;;;;;;-1:-1:-1;;;;;;6959:9:48;;;;;;;:14;;6955:293;;7014:1;7010:5;7140:22;;7147:6;-1:-1:-1;7220:13:48;;6955:293;6687:571;;;-1:-1:-1;;7305:12:48;;;7315:1;7305:12;;;;;;;;;7298:19;-1:-1:-1;;6358:966:48:o;1725:561::-;1885:4;1880:400;;1999:24;2018:4;1999:18;:24::i;:::-;-1:-1:-1;;;;;2080:26:48;2099:6;2080:18;:26::i;:::-;-1:-1:-1;;;;;2164:19:48;2174:8;2164:9;:19::i;:::-;1957:280;;;;;;;;;-1:-1:-1;;;;;2209:6:48;1957:280;;;;909:132:50;979:6;1008:26;1018:15;1008:9;:26::i;:::-;1001:33;;909:132;:::o;4649:214:49:-;4783:21;;:::i;:::-;-1:-1:-1;4827:23:49;;;;:13;;;;;:23;;;;;;;;;4820:36;;;;;;;4827:29;;;;4820:36;-1:-1:-1;;;;;4820:36:49;;;;;-1:-1:-1;;;4820:36:49;;;;;;;;;;-1:-1:-1;;;4820:36:49;;;;;;;;;;;;;4649:214::o;4423:220::-;4560:21;;:::i;:::-;-1:-1:-1;4604:23:49;;;;:13;;;;:23;;;;;;;;;4597:39;;;;;;;;4604:32;;;4597:39;-1:-1:-1;;;;;4597:39:49;;;;;-1:-1:-1;;;4597:39:49;;;;;;;;4423:220;;;;:::o;5147:601:45:-;5291:16;;:::i;:::-;5309;;:::i;:::-;5341:26;;:::i;:::-;-1:-1:-1;5370:81:45;;;;;;;;;5400:4;5370:81;;;5425:15;;;;-1:-1:-1;;;;;5370:81:45;;;;;5461:26;;:::i;:::-;-1:-1:-1;5490:82:45;;;;;;;;;-1:-1:-1;5490:82:45;;5546:15;;-1:-1:-1;;;;;5490:82:45;;;;;5582:26;;:::i;:::-;5611;5620:9;5631:5;5611:8;:26::i;:::-;5582:55;;5647:26;;:::i;:::-;5676;5685:9;5696:5;5676:8;:26::i;:::-;5720:9;;;;-1:-1:-1;5147:601:45;;-1:-1:-1;;;;;;5147:601:45:o;4096:169:52:-;4206:10;;:::i;:::-;4239:19;4243:1;4246:11;4255:1;4246:8;:11::i;:::-;4239:3;:19::i;3068:856:51:-;3143:4;;3364:14;3441:57;;;;3569:4;3564:220;;;;3357:517;;3441:57;3483:1;3468:16;;3441:57;;3564:220;3669:4;3664:3;3659;3644:30;3766:3;3760:10;3745:25;;3357:517;-1:-1:-1;3901:16:51;;;-1:-1:-1;3068:856:51;:::o;7330:912:48:-;7424:12;7456:10;7452:51;;-1:-1:-1;7482:10:48;;;;;;;;;;;;-1:-1:-1;;;;;7482:10:48;;;;;;7452:51;7564:5;7552:9;7603:69;7610:6;;7603:69;;7632:8;;7659:2;7654:7;;;;7603:69;;;7713:17;7743:6;7733:17;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;7733:17:48;87:34:-1;135:17;;-1:-1;7733:17:48;-1:-1:-1;7842:5:48;;-1:-1:-1;7713:37:48;-1:-1:-1;7874:6:48;7857:357;7882:5;;7857:357;;-1:-1:-1;;8035:3:48;8131:2;8127:1;:6;901:2;8113:21;8102:34;;8092:4;8097:1;8092:7;;;;;;;;;;;:44;-1:-1:-1;;;;;8092:44:48;;;;;;;;-1:-1:-1;8201:2:48;8196:7;;;;7857:357;;;-1:-1:-1;8231:4:48;7330:912;-1:-1:-1;;;;7330:912:48:o;2444:290:46:-;2535:6;2580;2597:107;2623:16;;;;;-1:-1:-1;;;;;2597:107:46;:12;:107::i;3844:552:45:-;3975:16;;:::i;:::-;4036:11;;;;4062:10;;-1:-1:-1;;;;;4028:20:45;;;;4058:332;;;4095:119;;;;;;;;;4129:4;4095:119;;;4180:12;;;;4095:119;;;;4158:41;;:10;;-1:-1:-1;;;;;4158:41:45;1197:6;4158:41;:21;:41;:::i;:::-;4095:119;;;4088:126;;;;;4058:332;4252:127;;;;;;;;;-1:-1:-1;4252:127:45;;4345:12;;4252:127;;;;4316:48;;:10;;-1:-1:-1;;;;;4316:48:45;1197:6;4316:48;:28;:48;:::i;5201:203:52:-;5294:10;;:::i;:::-;-1:-1:-1;5327:70:52;;;;;;;;;5352:6;;5351:7;5327:70;;;5379:7;;;;5327:70;;;;5201:203;;;:::o;4271:610::-;4381:10;;:::i;:::-;4407:17;;:::i;:::-;4448:6;;4438;;:16;;;;;;4434:418;;;4484:6;;4470:20;;;;4532:7;;;;;4541;;;;4519:30;;4532:7;4519:12;:30::i;:::-;4504:12;;;:45;4434:418;;;4595:1;:7;;;4584:1;:7;;;:18;4580:262;;4636:6;;4622:20;;;;4688:7;;;;;4697;;;;4675:30;;4688:7;4675:12;:30::i;4580:262::-;4758:6;;4744:20;;;;4810:7;;;;;4819;;;;4797:30;;4810:7;4797:12;:30::i;:::-;4782:12;;;:45;4868:6;4271:610;-1:-1:-1;;;4271:610:52:o;1117:228:46:-;1270:7;1300:38;1326:11;1300:21;:6;1311:9;1300:21;:10;:21;:::i;:::-;:25;:38;:25;:38;:::i;:::-;1293:45;1117:228;-1:-1:-1;;;;1117:228:46:o;1432:409::-;1592:7;1619:11;;;:29;;-1:-1:-1;1634:14:46;;1619:29;1615:151;;;1727:28;1740:1;1743:11;1727:12;:28::i;:::-;1720:35;;;;1615:151;1782:52;1832:1;1782:45;1815:11;1782:28;1832:1;1782:21;:6;1793:9;1782:21;:10;:21;:::i;:::-;:25;:28;:25;:28;:::i;:45::-;:49;:52;:49;:52;:::i;1431:145:75:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:75;;;1205:145::o;229:421::-;287:7;527:6;523:45;;-1:-1:-1;556:1:75;549:8;;523:45;590:5;;;594:1;590;:5;:1;613:5;;;;;:10;605:19;;;;;778:296;836:7;933:1;929;:5;921:14;;;;;;945:9;961:1;957;:5;;;;;;;778:296;-1:-1:-1;;;;778:296:75:o;1217:9812:31:-;;;;;;;;;;-1:-1:-1;1217:9812:31;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1217:9812:31;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;130:112;;194:43;229:6;216:20;194:43;;249:168;;341:71;404:6;391:20;341:71;;619:321;;731:4;719:9;714:3;710:19;706:30;703:2;;;749:1;746;739:12;703:2;767:20;782:4;767:20;;;758:29;-1:-1;838:1;869:49;914:3;894:9;869:49;;;845:74;;-1:-1;856:5;697:243;-1:-1;;697:243;975:344;;1099:4;1087:9;1082:3;1078:19;1074:30;1071:2;;;1117:1;1114;1107:12;1071:2;1135:20;1150:4;1135:20;;;1126:29;-1:-1;1206:1;1237:60;1293:3;1273:9;1237:60;;1703:168;;1795:71;1858:6;1845:20;1795:71;;2360:122;;2438:39;2469:6;2463:13;2438:39;;2489:311;;2628:2;2616:9;2607:7;2603:23;2599:32;2596:2;;;2644:1;2641;2634:12;2596:2;2679:1;2696:88;2776:7;2756:9;2696:88;;3123:541;;;;3286:2;3274:9;3265:7;3261:23;3257:32;3254:2;;;3302:1;3299;3292:12;3254:2;3337:1;3354:78;3424:7;3404:9;3354:78;;;3344:88;;3316:122;3469:2;3487:53;3532:7;3523:6;3512:9;3508:22;3487:53;;;3477:63;;3448:98;3577:2;3595:53;3640:7;3631:6;3620:9;3616:22;3595:53;;;3585:63;;3556:98;3248:416;;;;;;3671:535;;;;3831:2;3819:9;3810:7;3806:23;3802:32;3799:2;;;3847:1;3844;3837:12;3799:2;3882:1;3899:78;3969:7;3949:9;3899:78;;;3889:88;;3861:122;4014:2;4032:53;4077:7;4068:6;4057:9;4053:22;4032:53;;;4022:63;;3993:98;4122:2;4140:50;4182:7;4173:6;4162:9;4158:22;4140:50;;4213:1105;;;;;;;4520:3;4508:9;4499:7;4495:23;4491:33;4488:2;;;4537:1;4534;4527:12;4488:2;4572:1;4589:78;4659:7;4639:9;4589:78;;;4579:88;;4551:122;4704:2;4722:53;4767:7;4758:6;4747:9;4743:22;4722:53;;;4712:63;;4683:98;4812:2;4830:75;4897:7;4888:6;4877:9;4873:22;4830:75;;;4820:85;;4791:120;4942:2;4960:78;5030:7;5021:6;5010:9;5006:22;4960:78;;;4950:88;;4921:123;5075:3;5094:76;5162:7;5153:6;5142:9;5138:22;5094:76;;;5084:86;;5054:122;5207:3;5226:76;5294:7;5285:6;5274:9;5270:22;5226:76;;;5216:86;;5186:122;4482:836;;;;;;;;;5325:462;;;5494:2;5482:9;5473:7;5469:23;5465:32;5462:2;;;5510:1;5507;5500:12;5462:2;5545:1;5562:78;5632:7;5612:9;5562:78;;;5552:88;;5524:122;5677:2;5695:76;5763:7;5754:6;5743:9;5739:22;5695:76;;;5685:86;;5656:121;5456:331;;;;;;6265:541;;;;6428:2;6416:9;6407:7;6403:23;6399:32;6396:2;;;6444:1;6441;6434:12;6396:2;6479:1;6496:78;6566:7;6546:9;6496:78;;;6486:88;;6458:122;6611:2;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;;6813:535;;;;6973:2;6961:9;6952:7;6948:23;6944:32;6941:2;;;6989:1;6986;6979:12;6941:2;7024:1;7041:78;7111:7;7091:9;7041:78;;;7031:88;;7003:122;7156:2;7174:53;7219:7;7210:6;7199:9;7195:22;7174:53;;7355:591;;;;7543:2;7531:9;7522:7;7518:23;7514:32;7511:2;;;7559:1;7556;7549:12;7511:2;7594:1;7611:78;7681:7;7661:9;7611:78;;;7601:88;;7573:122;7726:2;7744:53;7789:7;7780:6;7769:9;7765:22;7744:53;;;7734:63;;7705:98;7834:2;7852:78;7922:7;7913:6;7902:9;7898:22;7852:78;;8545:587;;;;8731:2;8719:9;8710:7;8706:23;8702:32;8699:2;;;8747:1;8744;8737:12;8699:2;8782:1;8799:78;8869:7;8849:9;8799:78;;;8789:88;;8761:122;8914:2;8932:53;8977:7;8968:6;8957:9;8953:22;8932:53;;;8922:63;;8893:98;9022:2;9040:76;9108:7;9099:6;9088:9;9084:22;9040:76;;9139:263;;9254:2;9242:9;9233:7;9229:23;9225:32;9222:2;;;9270:1;9267;9260:12;9222:2;9305:1;9322:64;9378:7;9358:9;9322:64;;9409:120;9492:31;9517:5;9492:31;;;9487:3;9480:44;9474:55;;;9536:111;9613:28;9635:5;9613:28;;9654:155;9753:50;9772:30;9796:5;9772:30;;;9753:50;;9816:155;9915:50;9934:30;9958:5;9934:30;;9978:159;10079:52;10099:31;10124:5;10099:31;;10144:356;;10272:38;10304:5;10272:38;;;10322:88;10403:6;10398:3;10322:88;;;10315:95;;10415:52;10460:6;10455:3;10448:4;10441:5;10437:16;10415:52;;;10479:16;;;;;10252:248;-1:-1;;10252:248;10507:142;10598:45;10637:5;10598:45;;10656:347;;10768:39;10801:5;10768:39;;;10819:71;10883:6;10878:3;10819:71;;;10812:78;;10895:52;10940:6;10935:3;10928:4;10921:5;10917:16;10895:52;;;10968:29;10990:6;10968:29;;;10959:39;;;;10748:255;-1:-1;;;10748:255;11059:315;11264:22;;11198:4;11189:14;;;11292:61;11193:3;11264:22;11758:110;11831:31;11856:5;11831:31;;12137:244;;12256:75;12327:3;12318:6;12256:75;;;-1:-1;12353:2;12344:12;;12244:137;-1:-1;12244:137;12388:553;;12604:93;12693:3;12684:6;12604:93;;;12597:100;;12708:73;12777:3;12768:6;12708:73;;;12803:1;12798:3;12794:11;12787:18;;12823:93;12912:3;12903:6;12823:93;;;12816:100;12585:356;-1:-1;;;;;12585:356;12948:978;;13262:93;13351:3;13342:6;13262:93;;;13255:100;;13366:73;13435:3;13426:6;13366:73;;;13461:1;13456:3;13452:11;13445:18;;13481:93;13570:3;13561:6;13481:93;;;13474:100;;13585:73;13654:3;13645:6;13585:73;;;13680:1;13675:3;13671:11;13664:18;;13700:93;13789:3;13780:6;13700:93;;;13693:100;;13804:73;13873:3;13864:6;13804:73;;;-1:-1;13899:1;13890:11;;13243:683;-1:-1;;;;;;13243:683;13933:213;14051:2;14036:18;;14065:71;14040:9;14109:6;14065:71;;14153:312;14293:2;14278:18;;14307:71;14282:9;14351:6;14307:71;;;14389:66;14451:2;14440:9;14436:18;14427:6;14389:66;;14472:467;14662:2;14647:18;;14676:71;14651:9;14720:6;14676:71;;;14758:80;14834:2;14823:9;14819:18;14810:6;14758:80;;;14849;14925:2;14914:9;14910:18;14901:6;14849:80;;14946:324;15092:2;15077:18;;15106:71;15081:9;15150:6;15106:71;;;15188:72;15256:2;15245:9;15241:18;15232:6;15188:72;;15277:301;15415:2;15429:47;;;15400:18;;15490:78;15400:18;15554:6;15490:78;;15585:305;15749:2;15734:18;;15763:117;15738:9;15853:6;15763:117;;16213:229;16339:2;16324:18;;16353:79;16328:9;16405:6;16353:79;;16449:324;16595:2;16580:18;;16609:71;16584:9;16653:6;16609:71;;;16691:72;16759:2;16748:9;16744:18;16735:6;16691:72;;16780:312;16920:2;16905:18;;16934:71;16909:9;16978:6;16934:71;;17099:416;17291:2;17276:18;;17305:71;17280:9;17349:6;17305:71;;;17387:118;17501:2;17490:9;17486:18;17477:6;17387:118;;17522:256;17584:2;17578:9;17610:17;;;17685:18;17670:34;;17706:22;;;17667:62;17664:2;;;17742:1;17739;17732:12;17664:2;17758;17751:22;17562:216;;-1:-1;17562:216;17785:91;17859:12;;17843:33;18136:163;18239:19;;;18288:4;18279:14;;18232:67;18307:105;;18376:31;18401:5;18376:31;;18419:92;18492:13;18485:21;;18468:43;18518:151;-1:-1;;;;;;18586:78;;18569:100;18676:151;-1:-1;;;;;;18744:78;;18727:100;18834:79;18903:5;18886:27;18920:128;-1:-1;;;;;18989:54;;18972:76;19352:130;;19446:31;19471:5;19446:31;;19955:123;;20042:31;20067:5;20042:31;;20086:268;20151:1;20158:101;20172:6;20169:1;20166:13;20158:101;;;20239:11;;;20233:18;20220:11;;;20213:39;20194:2;20187:10;20158:101;;;20274:6;20271:1;20268:13;20265:2;;;-1:-1;;20339:1;20321:16;;20314:27;20135:219;20603:97;20691:2;20671:14;-1:-1;;20667:28;;20651:49",
  "language": "Solidity",
  "natspec": {
    "author": "dYdX * Administrative functions to keep the protocol updated",
    "methods": {},
    "title": "AdminImpl"
  },
  "offset": [
    1217,
    11029
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8854AB3E GT PUSH2 0x96 JUMPI DUP1 PUSH4 0xB25328E0 GT PUSH2 0x70 JUMPI DUP1 PUSH4 0xB25328E0 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xDD32998A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xE80F8024 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xF9CACC4C EQ PUSH2 0x276 JUMPI PUSH2 0xD9 JUMP JUMPDEST DUP1 PUSH4 0x8854AB3E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8C5DABD1 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xAA92E348 EQ PUSH2 0x1E0 JUMPI PUSH2 0xD9 JUMP JUMPDEST DUP1 PUSH4 0xF44E6BC EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x10C87B06 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x311401D0 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x48D06484 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x54DD3516 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x7335079B EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x187B JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x18AD JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x18AD JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1745 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SLOAD DUP2 MLOAD PUSH2 0x2EA SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x53707265616420746F6F20686967680000000000000000000000000000000000 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD DUP2 MLOAD PUSH2 0x32C SWAP2 GT PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x5370726561642063616E6E6F74206265203E3D20726174696F00000000000000 PUSH2 0x943 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH32 0x9F7E4A6848B17EB13974D54A526BD85F5762577A23C3095EA6FD888D429E834B SWAP1 PUSH2 0x363 SWAP1 DUP4 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x379 DUP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0xEC669433AA0B3212A238C30115DBF73736739FAF98A33C293ECAD3DAAD1B37F6 SWAP1 PUSH2 0x3CA SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SLOAD DUP2 MLOAD PUSH2 0x42B SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x5261746520746F6F206869676800000000000000000000000000000000000000 PUSH2 0x943 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH32 0xEA691DD294C7882AADC1BEBC2FFB81B91AFB6BE606DBF15D627C073889C72436 SWAP1 PUSH2 0x363 SWAP1 DUP4 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x46C DUP7 DUP7 PUSH2 0x9DA JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP9 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE SWAP1 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE PUSH2 0x4A5 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP3 DUP6 ADD MLOAD SWAP5 DUP5 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND OR PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 NOT AND PUSH1 0x1 PUSH1 0x60 SHL SWAP3 SWAP1 SWAP6 AND SWAP2 SWAP1 SWAP2 MUL SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0xC0 SHL PUSH4 0xFFFFFFFF MUL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x8CF904FDFF707692D4BD95366B93D7302A97B4BF64F6716FD00B046ECBF82A46 SWAP1 PUSH2 0x565 SWAP1 DUP4 SWAP1 DUP10 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x578 DUP8 DUP3 DUP8 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x583 DUP8 DUP3 DUP7 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x58E DUP8 DUP3 DUP6 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x599 DUP8 DUP3 DUP5 PUSH2 0xD6D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SLOAD DUP2 MLOAD PUSH2 0x5EF SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x526174696F20746F6F2068696768000000000000000000000000000000000000 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SLOAD DUP2 MLOAD PUSH2 0x631 SWAP2 LT PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x526174696F2063616E6E6F74206265203C3D2073707265616400000000000000 PUSH2 0x943 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH32 0x253F176964E18A501DB01A67272483DB404E4E473E8AFD1D255EEB0E96EB2E13 SWAP1 PUSH2 0x363 SWAP1 DUP4 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x672 DUP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x67D DUP4 DUP4 DUP4 PUSH2 0xCCF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x68C DUP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x67D DUP4 DUP4 DUP4 PUSH2 0xD6D JUMP JUMPDEST PUSH2 0x6A1 DUP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x67D DUP4 DUP4 DUP4 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x6B6 DUP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x67D DUP4 DUP4 DUP4 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CD DUP5 DUP5 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x6D5 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x6E5 DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xE04 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x72A PUSH2 0x6F3 DUP3 PUSH2 0xECC JUMP JUMPDEST ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x4E65676174697665206578636573730000000000000000000000000000000000 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73C DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xEEA AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x759 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS PUSH4 0xFFFFFFFF PUSH2 0xF09 AND JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x76F JUMPI PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x790 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP8 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xF8B AND JUMP JUMPDEST PUSH32 0xA5DF3527E4451A18E4B8A5E3308E1D1F1962062AEAFE061C48BBB29F172A39C8 DUP3 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7C5 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x20 ADD MLOAD SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E9 DUP5 DUP5 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x804 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADDRESS PUSH4 0xFFFFFFFF PUSH2 0xF09 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x820 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xF8B AND JUMP JUMPDEST PUSH32 0xA5DF3527E4451A18E4B8A5E3308E1D1F1962062AEAFE061C48BBB29F172A39C8 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x851 SWAP3 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0xEAEEE7699E70E6B31AC89EC999EF6936B97AC1E364F0E1FCF584772372CAA0D3 SWAP1 PUSH2 0x3CA SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0xA DUP3 ADD SLOAD DUP2 MLOAD PUSH2 0x90C SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x56616C756520746F6F2068696768000000000000000000000000000000000000 PUSH2 0x943 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH32 0xFDCDE9342DCFA3A8817B7566B25FED913D2C6EDDB65575D40E14681934FAE971 SWAP1 PUSH2 0x363 SWAP1 DUP4 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST DUP3 PUSH2 0x67D JUMPI PUSH2 0x951 DUP3 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF5 SHL PUSH2 0x1D1 MUL PUSH2 0x963 DUP4 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x975 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP3 MSTORE PUSH2 0x99E SWAP2 PUSH1 0x4 ADD PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH2 0x9D6 SWAP1 DUP3 LT PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH1 0x1 PUSH1 0xB1 SHL PUSH10 0x26B0B935B2BA1027A7A1 MUL DUP5 PUSH2 0x10D2 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA1D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xA15 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9E0 JUMP JUMPDEST POP PUSH2 0xA59 DUP2 ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x4D61726B65742065786973747300000000000000000000000000000000000000 PUSH2 0x943 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA67 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH2 0xA8D PUSH2 0x1121 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0x41976E09 MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH2 0xB6D SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x41976E09 SWAP1 PUSH2 0xAE4 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xB34 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x16DA JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x496E76616C6964206F7261636C65207072696365000000000000000000000000 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE MLOAD PUSH32 0x6585928691672490B717A51FE425F4494B34C6B5CB8335C5DC1E70115BD26630 SWAP1 PUSH2 0xBCB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xE8177DCF MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 DUP5 AND SWAP2 PUSH4 0xE8177DCF SWAP2 PUSH2 0xC20 SWAP2 DUP6 SWAP2 DUP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC70 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x16DA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE MLOAD PUSH32 0xAA2217332F2505521D63C728F59A8692C1C8C952A0C5D578E4142BB88CEFB063 SWAP1 PUSH2 0xBCB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x9 DUP4 ADD SLOAD DUP2 MLOAD PUSH2 0xD23 SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x4D617267696E207072656D69756D20746F6F2068696768000000000000000000 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH32 0x19ECB621BC945075C47008C9DEAF25107A3343ECFE752608915A9D1DA35E9E7C SWAP1 PUSH2 0x3CA SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0xA DUP4 ADD SLOAD DUP2 MLOAD PUSH2 0xDBA SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH1 0x1 PUSH1 0xBA SHL PUSH9 0x10591B5A5B925B5C1B MUL PUSH32 0x537072656164207072656D69756D20746F6F2068696768000000000000000000 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH32 0x8214BD57E079F2F3E3E5C52BF78DB5FB85926C866AEC322BA024DB710365FC35 SWAP1 PUSH2 0x3CA SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xE0C PUSH2 0x160A JUMP JUMPDEST PUSH2 0xE14 PUSH2 0x1621 JUMP JUMPDEST PUSH2 0xE24 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1131 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE2E PUSH2 0x160A JUMP JUMPDEST PUSH2 0xE3E DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1192 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE52 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xEEA AND JUMP JUMPDEST SWAP1 POP PUSH2 0xE5C PUSH2 0x160A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE7A DUP5 ADDRESS PUSH2 0xF09 JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP PUSH2 0xE86 PUSH2 0x160A JUMP JUMPDEST PUSH2 0xE8E PUSH2 0x160A JUMP JUMPDEST PUSH2 0xE98 DUP6 DUP8 PUSH2 0x11DC JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xEBD DUP3 PUSH2 0xEB1 DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1272 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1272 AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 ISZERO DUP1 ISZERO PUSH2 0xEE2 JUMPI POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD GT JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0x70A08231 MUL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xF3B SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x7D6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1933 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0xFA0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0xFAA JUMPI PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xA9059CBB MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xFDB SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1009 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x67D PUSH2 0x1018 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD9 SHL PUSH5 0x2A37B5B2B7 MUL PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH2 0x943 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP1 POP PUSH1 0x20 JUMPDEST DUP1 ISZERO PUSH2 0x10BB JUMPI DUP2 MLOAD PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x108E JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF8 SWAP2 DUP3 SHR SWAP1 SWAP2 SHL AND ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x1 ADD DUP2 MSTORE SWAP1 POP PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x1073 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 PUSH2 0xA59 JUMPI PUSH2 0x10E0 DUP4 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF5 SHL PUSH2 0x1D1 MUL PUSH2 0x10F2 DUP5 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF2 SHL PUSH2 0x80F MUL PUSH2 0x1104 DUP6 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x975 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xF9 SHL PUSH1 0x1F MUL SWAP1 PUSH1 0x20 ADD PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112C TIMESTAMP PUSH2 0x1380 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1139 PUSH2 0x1621 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP3 DIV AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x119A PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11E4 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x11EC PUSH2 0x160A JUMP JUMPDEST PUSH2 0x11F4 PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH2 0x121E PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1245 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x124F DUP4 DUP8 PUSH2 0x13C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1259 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x1263 DUP4 DUP9 PUSH2 0x13C0 JUMP JUMPDEST SWAP2 SWAP9 SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x127A PUSH2 0x160A JUMP JUMPDEST PUSH2 0x7D6 DUP4 PUSH2 0x1287 DUP5 PUSH2 0x145E JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x0 DUP1 RETURNDATASIZE DUP1 ISZERO PUSH2 0x12A3 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x12AC JUMPI PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD SWAP2 POP JUMPDEST POP ISZERO ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x12E8 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x1 PUSH1 0xFC SHL PUSH1 0x3 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xEE5 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1300 JUMPI PUSH1 0x1 ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x132D JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP DUP6 SWAP4 POP SWAP1 POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x1377 JUMPI PUSH1 0x0 NOT ADD PUSH1 0xA DUP5 MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1355 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP5 DIV SWAP4 POP PUSH2 0x1335 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xEE2 PUSH4 0xFFFFFFFF DUP3 AND DUP3 EQ PUSH1 0x1 PUSH1 0xE3 SHL PUSH4 0x9AC2E8D MUL PUSH32 0x556E73616665206361737420746F2075696E7433320000000000000000000000 PUSH2 0x943 JUMP JUMPDEST PUSH2 0x13C8 PUSH2 0x160A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 ISZERO PUSH2 0x1426 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP3 ADD SWAP1 PUSH2 0x141B SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH8 0xDE0B6B3A7640000 PUSH4 0xFFFFFFFF PUSH2 0x1517 AND JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP POP PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 MLOAD PUSH1 0x20 DUP3 ADD SWAP1 PUSH2 0x141B SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH8 0xDE0B6B3A7640000 PUSH4 0xFFFFFFFF PUSH2 0x1541 AND JUMP JUMPDEST PUSH2 0x1466 PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148D PUSH2 0x160A JUMP JUMPDEST PUSH2 0x1495 PUSH2 0x160A JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD ISZERO ISZERO SWAP1 ISZERO ISZERO EQ ISZERO PUSH2 0x14C8 JUMPI DUP4 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7D6 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD LT PUSH2 0x14F1 JUMPI DUP4 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x15AC JUMP JUMPDEST DUP3 MLOAD ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 DUP6 ADD MLOAD PUSH2 0x150B SWAP2 SWAP1 PUSH2 0x15AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 DUP3 PUSH2 0x152D DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x15C1 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15E8 AND JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x154E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x1565 JUMPI PUSH2 0x155E PUSH1 0x0 DUP4 PUSH2 0x15E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x1539 PUSH1 0x1 PUSH2 0x158E DUP5 PUSH2 0x152D DUP4 PUSH2 0x1582 DUP11 DUP11 PUSH4 0xFFFFFFFF PUSH2 0x15C1 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15AC AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x159A AND JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15D0 JUMPI POP PUSH1 0x0 PUSH2 0xEC6 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x15DD JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x15F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x1601 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D6 DUP3 CALLDATALOAD PUSH2 0x1BCD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D6 DUP3 CALLDATALOAD PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D6 DUP3 CALLDATALOAD PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1681 PUSH1 0x20 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x168F DUP5 DUP5 PUSH2 0x16C2 JUMP JUMPDEST DUP3 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B4 PUSH1 0x20 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x168F DUP5 DUP5 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D6 DUP3 CALLDATALOAD PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D6 DUP3 MLOAD PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1539 DUP5 DUP5 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP7 DUP7 PUSH2 0x16C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x172A DUP7 DUP3 DUP8 ADD PUSH2 0x1641 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x173B DUP7 DUP3 DUP8 ADD PUSH2 0x1641 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x175A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1766 DUP7 DUP7 PUSH2 0x16C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1777 DUP7 DUP3 DUP8 ADD PUSH2 0x1641 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x173B DUP7 DUP3 DUP8 ADD PUSH2 0x164D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17AD DUP10 DUP10 PUSH2 0x16C2 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x17BE DUP10 DUP3 DUP11 ADD PUSH2 0x1641 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x17CF DUP10 DUP3 DUP11 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x17E0 DUP10 DUP3 DUP11 ADD PUSH2 0x1659 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x17F1 DUP10 DUP3 DUP11 ADD PUSH2 0x1665 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x1802 DUP10 DUP3 DUP11 ADD PUSH2 0x1665 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x182E DUP6 DUP6 PUSH2 0x16C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x183F DUP6 DUP3 DUP7 ADD PUSH2 0x1665 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x185E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x186A DUP7 DUP7 PUSH2 0x16C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x172A DUP7 DUP3 DUP8 ADD PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x189C DUP7 DUP7 PUSH2 0x16C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1777 DUP7 DUP3 DUP8 ADD PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18CE DUP7 DUP7 PUSH2 0x16C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18DF DUP7 DUP3 DUP8 ADD PUSH2 0x16C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x173B DUP7 DUP3 DUP8 ADD PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1911 DUP7 DUP7 PUSH2 0x16C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1922 DUP7 DUP3 DUP8 ADD PUSH2 0x16C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x173B DUP7 DUP3 DUP8 ADD PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1539 DUP5 DUP5 PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x195A DUP2 PUSH2 0x1BCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x195A DUP2 PUSH2 0x1BD8 JUMP JUMPDEST PUSH2 0x195A PUSH2 0x1975 DUP3 PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x195A PUSH2 0x1975 DUP3 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x195A PUSH2 0x1975 DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199D DUP3 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x19A7 DUP2 DUP6 PUSH2 0xEE5 JUMP JUMPDEST SWAP4 POP PUSH2 0x19B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1C JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x195A DUP2 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D5 DUP3 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x19DF DUP2 DUP6 PUSH2 0x1BC4 JUMP JUMPDEST SWAP4 POP PUSH2 0x19EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1C JUMP JUMPDEST PUSH2 0x19F8 DUP2 PUSH2 0x1C48 JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xA59 DUP5 DUP3 JUMPDEST PUSH2 0x195A DUP2 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A24 DUP3 DUP5 PUSH2 0x1986 JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A39 DUP3 DUP7 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A45 DUP3 DUP6 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x1A55 DUP3 DUP5 PUSH2 0x1992 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A DUP3 DUP10 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A76 DUP3 DUP9 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x1A86 DUP3 DUP8 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A92 DUP3 DUP7 PUSH2 0x197A JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x1AA2 DUP3 DUP6 PUSH2 0x1992 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAE DUP3 DUP5 PUSH2 0x1969 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xEC6 DUP3 DUP5 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1AD8 DUP3 DUP6 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x7D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x1AF3 DUP3 DUP7 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x1B00 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x1539 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1B1B DUP3 DUP6 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x7D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x7D6 DUP2 DUP5 PUSH2 0x19CA JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xEC6 DUP3 DUP5 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xEC6 DUP3 DUP5 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1B63 DUP3 DUP6 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x7D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1AD8 DUP3 DUP6 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x1B8C DUP3 DUP6 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x7D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE2 DUP3 PUSH2 0x1BFA JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE2 DUP3 PUSH2 0x1BCD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE2 DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C37 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C1F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA59 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xd8 LOG0 MSTORE 0xdc PUSH15 0xE61F3EFA586E2882C8C1650EB6F889 MUL PUSH32 0xE27ACD7F5A9010D5A8F86C6578706572696D656E74616CF50037000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH20",
      "path": "31",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "ADDRESS",
      "path": "31"
    },
    "22": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "23": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "28": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "30": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "31": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "LT",
      "path": "31"
    },
    "32": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xD9"
    },
    "35": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "36": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "38": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "CALLDATALOAD",
      "path": "31"
    },
    "39": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "SHR",
      "path": "31"
    },
    "42": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "43": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x8854AB3E"
    },
    "48": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "GT",
      "path": "31"
    },
    "49": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x96"
    },
    "52": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "53": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "54": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xB25328E0"
    },
    "59": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "GT",
      "path": "31"
    },
    "60": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x70"
    },
    "63": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "64": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "65": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xB25328E0"
    },
    "70": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "71": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x200"
    },
    "74": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "75": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "76": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xDD32998A"
    },
    "81": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "82": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x236"
    },
    "85": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "86": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "87": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xE80F8024"
    },
    "92": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "93": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x256"
    },
    "96": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "97": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "98": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xF9CACC4C"
    },
    "103": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "104": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x276"
    },
    "107": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "108": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xD9"
    },
    "111": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMP",
      "path": "31"
    },
    "112": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "113": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "114": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x8854AB3E"
    },
    "119": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "120": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1A0"
    },
    "123": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "124": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "125": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x8C5DABD1"
    },
    "130": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "131": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1C0"
    },
    "134": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "135": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "136": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xAA92E348"
    },
    "141": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "142": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1E0"
    },
    "145": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "146": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xD9"
    },
    "149": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMP",
      "path": "31"
    },
    "150": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "151": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "152": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xF44E6BC"
    },
    "157": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "158": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xDE"
    },
    "161": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "162": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "163": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x10C87B06"
    },
    "168": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "169": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x100"
    },
    "172": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "173": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "174": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x311401D0"
    },
    "179": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "180": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x120"
    },
    "183": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "184": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "185": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x48D06484"
    },
    "190": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "191": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x140"
    },
    "194": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "195": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "196": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x54DD3516"
    },
    "201": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "202": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x160"
    },
    "205": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "206": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "207": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x7335079B"
    },
    "212": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "EQ",
      "path": "31"
    },
    "213": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x180"
    },
    "216": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "217": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "218": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "221": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1217,
        11029
      ],
      "op": "REVERT",
      "path": "31"
    },
    "222": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "223": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "DUP2",
      "path": "31"
    },
    "224": {
      "op": "DUP1"
    },
    "225": {
      "op": "ISZERO"
    },
    "226": {
      "op": "PUSH2",
      "value": "0xEA"
    },
    "229": {
      "op": "JUMPI"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "232": {
      "op": "DUP1"
    },
    "233": {
      "op": "REVERT"
    },
    "234": {
      "op": "JUMPDEST"
    },
    "235": {
      "op": "POP"
    },
    "236": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "239": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xF9"
    },
    "242": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "243": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "245": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x180F"
    },
    "248": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "JUMP",
      "path": "31"
    },
    "249": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "250": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x296"
    },
    "253": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "jump": "i",
      "offset": [
        6564,
        7105
      ],
      "op": "JUMP",
      "path": "31"
    },
    "254": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "255": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "STOP",
      "path": "31"
    },
    "256": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "257": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "DUP2",
      "path": "31"
    },
    "258": {
      "op": "DUP1"
    },
    "259": {
      "op": "ISZERO"
    },
    "260": {
      "op": "PUSH2",
      "value": "0x10C"
    },
    "263": {
      "op": "JUMPI"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "266": {
      "op": "DUP1"
    },
    "267": {
      "op": "REVERT"
    },
    "268": {
      "op": "JUMPDEST"
    },
    "269": {
      "op": "POP"
    },
    "270": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "273": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x11B"
    },
    "276": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "277": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "279": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x187B"
    },
    "282": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "JUMP",
      "path": "31"
    },
    "283": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "284": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x36F"
    },
    "287": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "jump": "i",
      "offset": [
        4593,
        4889
      ],
      "op": "JUMP",
      "path": "31"
    },
    "288": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "289": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "DUP2",
      "path": "31"
    },
    "290": {
      "op": "DUP1"
    },
    "291": {
      "op": "ISZERO"
    },
    "292": {
      "op": "PUSH2",
      "value": "0x12C"
    },
    "295": {
      "op": "JUMPI"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "298": {
      "op": "DUP1"
    },
    "299": {
      "op": "REVERT"
    },
    "300": {
      "op": "JUMPDEST"
    },
    "301": {
      "op": "POP"
    },
    "302": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "305": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x13B"
    },
    "308": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "309": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "311": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x180F"
    },
    "314": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "JUMP",
      "path": "31"
    },
    "315": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "316": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3D7"
    },
    "319": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "jump": "i",
      "offset": [
        7111,
        7500
      ],
      "op": "JUMP",
      "path": "31"
    },
    "320": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "321": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "DUP2",
      "path": "31"
    },
    "322": {
      "op": "DUP1"
    },
    "323": {
      "op": "ISZERO"
    },
    "324": {
      "op": "PUSH2",
      "value": "0x14C"
    },
    "327": {
      "op": "JUMPI"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "330": {
      "op": "DUP1"
    },
    "331": {
      "op": "REVERT"
    },
    "332": {
      "op": "JUMPDEST"
    },
    "333": {
      "op": "POP"
    },
    "334": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "337": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x15B"
    },
    "340": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "341": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "343": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1788"
    },
    "346": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "JUMP",
      "path": "31"
    },
    "347": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "348": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x462"
    },
    "351": {
      "fn": "AdminImpl.ownerAddMarket",
      "jump": "i",
      "offset": [
        3808,
        4587
      ],
      "op": "JUMP",
      "path": "31"
    },
    "352": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "353": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "DUP2",
      "path": "31"
    },
    "354": {
      "op": "DUP1"
    },
    "355": {
      "op": "ISZERO"
    },
    "356": {
      "op": "PUSH2",
      "value": "0x16C"
    },
    "359": {
      "op": "JUMPI"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "362": {
      "op": "DUP1"
    },
    "363": {
      "op": "REVERT"
    },
    "364": {
      "op": "JUMPDEST"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "369": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x17B"
    },
    "372": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "373": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "375": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x180F"
    },
    "378": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "JUMP",
      "path": "31"
    },
    "379": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "380": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x5A2"
    },
    "383": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "jump": "i",
      "offset": [
        6041,
        6558
      ],
      "op": "JUMP",
      "path": "31"
    },
    "384": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "385": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "DUP2",
      "path": "31"
    },
    "386": {
      "op": "DUP1"
    },
    "387": {
      "op": "ISZERO"
    },
    "388": {
      "op": "PUSH2",
      "value": "0x18C"
    },
    "391": {
      "op": "JUMPI"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "394": {
      "op": "DUP1"
    },
    "395": {
      "op": "REVERT"
    },
    "396": {
      "op": "JUMPDEST"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "401": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x19B"
    },
    "404": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "405": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "407": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x18F0"
    },
    "410": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "JUMP",
      "path": "31"
    },
    "411": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "412": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x668"
    },
    "415": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "jump": "i",
      "offset": [
        5436,
        5708
      ],
      "op": "JUMP",
      "path": "31"
    },
    "416": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "417": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "DUP2",
      "path": "31"
    },
    "418": {
      "op": "DUP1"
    },
    "419": {
      "op": "ISZERO"
    },
    "420": {
      "op": "PUSH2",
      "value": "0x1AC"
    },
    "423": {
      "op": "JUMPI"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "426": {
      "op": "DUP1"
    },
    "427": {
      "op": "REVERT"
    },
    "428": {
      "op": "JUMPDEST"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "433": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1BB"
    },
    "436": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "437": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "439": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x18F0"
    },
    "442": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "JUMP",
      "path": "31"
    },
    "443": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "444": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x682"
    },
    "447": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "jump": "i",
      "offset": [
        5714,
        5986
      ],
      "op": "JUMP",
      "path": "31"
    },
    "448": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "449": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "DUP2",
      "path": "31"
    },
    "450": {
      "op": "DUP1"
    },
    "451": {
      "op": "ISZERO"
    },
    "452": {
      "op": "PUSH2",
      "value": "0x1CC"
    },
    "455": {
      "op": "JUMPI"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "458": {
      "op": "DUP1"
    },
    "459": {
      "op": "REVERT"
    },
    "460": {
      "op": "JUMPDEST"
    },
    "461": {
      "op": "POP"
    },
    "462": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "465": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1DB"
    },
    "468": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "469": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "471": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x18AD"
    },
    "474": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "JUMP",
      "path": "31"
    },
    "475": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "476": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x697"
    },
    "479": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "jump": "i",
      "offset": [
        4895,
        5152
      ],
      "op": "JUMP",
      "path": "31"
    },
    "480": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "481": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "DUP2",
      "path": "31"
    },
    "482": {
      "op": "DUP1"
    },
    "483": {
      "op": "ISZERO"
    },
    "484": {
      "op": "PUSH2",
      "value": "0x1EC"
    },
    "487": {
      "op": "JUMPI"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "490": {
      "op": "DUP1"
    },
    "491": {
      "op": "REVERT"
    },
    "492": {
      "op": "JUMPDEST"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "497": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1FB"
    },
    "500": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "501": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "503": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x18AD"
    },
    "506": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "JUMP",
      "path": "31"
    },
    "507": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "508": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x6AC"
    },
    "511": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "jump": "i",
      "offset": [
        5158,
        5430
      ],
      "op": "JUMP",
      "path": "31"
    },
    "512": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "513": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "DUP2",
      "path": "31"
    },
    "514": {
      "op": "DUP1"
    },
    "515": {
      "op": "ISZERO"
    },
    "516": {
      "op": "PUSH2",
      "value": "0x20C"
    },
    "519": {
      "op": "JUMPI"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "522": {
      "op": "DUP1"
    },
    "523": {
      "op": "REVERT"
    },
    "524": {
      "op": "JUMPDEST"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x220"
    },
    "529": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x21B"
    },
    "532": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "533": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "535": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1849"
    },
    "538": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMP",
      "path": "31"
    },
    "539": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "540": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x6C1"
    },
    "543": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMP",
      "path": "31"
    },
    "544": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "545": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "547": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "548": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x22D"
    },
    "551": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "552": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "553": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B47"
    },
    "556": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMP",
      "path": "31"
    },
    "557": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "558": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "560": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "561": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "DUP1",
      "path": "31"
    },
    "562": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "563": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "SUB",
      "path": "31"
    },
    "564": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "565": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "RETURN",
      "path": "31"
    },
    "566": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "567": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "DUP2",
      "path": "31"
    },
    "568": {
      "op": "DUP1"
    },
    "569": {
      "op": "ISZERO"
    },
    "570": {
      "op": "PUSH2",
      "value": "0x242"
    },
    "573": {
      "op": "JUMPI"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "576": {
      "op": "DUP1"
    },
    "577": {
      "op": "REVERT"
    },
    "578": {
      "op": "JUMPDEST"
    },
    "579": {
      "op": "POP"
    },
    "580": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x220"
    },
    "583": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x251"
    },
    "586": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "587": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "589": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x16F8"
    },
    "592": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "JUMP",
      "path": "31"
    },
    "593": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "594": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x7DD"
    },
    "597": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "jump": "i",
      "offset": [
        3343,
        3751
      ],
      "op": "JUMP",
      "path": "31"
    },
    "598": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "599": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "DUP2",
      "path": "31"
    },
    "600": {
      "op": "DUP1"
    },
    "601": {
      "op": "ISZERO"
    },
    "602": {
      "op": "PUSH2",
      "value": "0x262"
    },
    "605": {
      "op": "JUMPI"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "608": {
      "op": "DUP1"
    },
    "609": {
      "op": "REVERT"
    },
    "610": {
      "op": "JUMPDEST"
    },
    "611": {
      "op": "POP"
    },
    "612": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "615": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x271"
    },
    "618": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "619": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "621": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1745"
    },
    "624": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "JUMP",
      "path": "31"
    },
    "625": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "626": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x861"
    },
    "629": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "jump": "i",
      "offset": [
        7996,
        8254
      ],
      "op": "JUMP",
      "path": "31"
    },
    "630": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "631": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "DUP2",
      "path": "31"
    },
    "632": {
      "op": "DUP1"
    },
    "633": {
      "op": "ISZERO"
    },
    "634": {
      "op": "PUSH2",
      "value": "0x282"
    },
    "637": {
      "op": "JUMPI"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "640": {
      "op": "DUP1"
    },
    "641": {
      "op": "REVERT"
    },
    "642": {
      "op": "JUMPDEST"
    },
    "643": {
      "op": "POP"
    },
    "644": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xFE"
    },
    "647": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x291"
    },
    "650": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "651": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "653": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x180F"
    },
    "656": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "JUMP",
      "path": "31"
    },
    "657": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "658": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x8B9"
    },
    "661": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "jump": "i",
      "offset": [
        7506,
        7930
      ],
      "op": "JUMP",
      "path": "31"
    },
    "662": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "663": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6749,
        6765
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 0,
      "value": "0x9"
    },
    "665": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6749,
        6765
      ],
      "op": "DUP3",
      "path": "31"
    },
    "666": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6749,
        6765
      ],
      "op": "ADD",
      "path": "31"
    },
    "667": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6749,
        6786
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "668": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6733,
        6745
      ],
      "op": "DUP2",
      "path": "31"
    },
    "669": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6733,
        6745
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "670": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6707,
        6845
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2EA"
    },
    "673": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6707,
        6845
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "678": {
      "op": "SHL"
    },
    "679": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6749,
        6786
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "680": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6749,
        6786
      ],
      "op": "DIV",
      "path": "31"
    },
    "681": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6749,
        6786
      ],
      "op": "PUSH8",
      "path": "31",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "690": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6749,
        6786
      ],
      "op": "AND",
      "path": "31"
    },
    "691": {
      "op": "LT"
    },
    "692": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6733,
        6786
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "708": {
      "op": "MUL"
    },
    "709": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6707,
        6845
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x53707265616420746F6F20686967680000000000000000000000000000000000"
    },
    "742": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6707,
        6719
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "745": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "jump": "i",
      "offset": [
        6707,
        6845
      ],
      "op": "JUMP",
      "path": "31"
    },
    "746": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6707,
        6845
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "747": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6896,
        6912
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 1,
      "value": "0x5"
    },
    "749": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6896,
        6912
      ],
      "op": "DUP3",
      "path": "31"
    },
    "750": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6896,
        6912
      ],
      "op": "ADD",
      "path": "31"
    },
    "751": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6896,
        6930
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "752": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6881,
        6893
      ],
      "op": "DUP2",
      "path": "31"
    },
    "753": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6881,
        6893
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "754": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6855,
        6999
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x32C"
    },
    "757": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6855,
        6999
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "758": {
      "op": "GT"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "774": {
      "op": "MUL"
    },
    "775": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6855,
        6999
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x5370726561642063616E6E6F74206265203E3D20726174696F00000000000000"
    },
    "808": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6855,
        6867
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "811": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "jump": "i",
      "offset": [
        6855,
        6999
      ],
      "op": "JUMP",
      "path": "31"
    },
    "812": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6855,
        6999
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "813": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7009,
        7052
      ],
      "op": "DUP1",
      "path": "31",
      "statement": 2
    },
    "814": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7009,
        7052
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "815": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7009,
        7043
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x6"
    },
    "817": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7009,
        7043
      ],
      "op": "DUP4",
      "path": "31"
    },
    "818": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7009,
        7043
      ],
      "op": "ADD",
      "path": "31"
    },
    "819": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7009,
        7052
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "820": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 3,
      "value": "0x40"
    },
    "822": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "823": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x9F7E4A6848B17EB13974D54A526BD85F5762577A23C3095EA6FD888D429E834B"
    },
    "856": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "857": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x363"
    },
    "860": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "861": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7046,
        7052
      ],
      "op": "DUP4",
      "path": "31"
    },
    "862": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7046,
        7052
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "863": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B39"
    },
    "866": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "JUMP",
      "path": "31"
    },
    "867": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "868": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "870": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "871": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "DUP1",
      "path": "31"
    },
    "872": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "873": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "SUB",
      "path": "31"
    },
    "874": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "875": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        7067,
        7098
      ],
      "op": "LOG1",
      "path": "31"
    },
    "876": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "POP",
      "path": "31"
    },
    "877": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "offset": [
        6564,
        7105
      ],
      "op": "POP",
      "path": "31"
    },
    "878": {
      "fn": "AdminImpl.ownerSetLiquidationSpread",
      "jump": "o",
      "offset": [
        6564,
        7105
      ],
      "op": "JUMP",
      "path": "31"
    },
    "879": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "880": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4742,
        4776
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 4,
      "value": "0x379"
    },
    "883": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4760,
        4765
      ],
      "op": "DUP4",
      "path": "31"
    },
    "884": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4767,
        4775
      ],
      "op": "DUP4",
      "path": "31"
    },
    "885": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4742,
        4759
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9A7"
    },
    "888": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "jump": "i",
      "offset": [
        4742,
        4776
      ],
      "op": "JUMP",
      "path": "31"
    },
    "889": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4742,
        4776
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "890": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 5,
      "value": "0x0"
    },
    "892": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "DUP3",
      "path": "31"
    },
    "893": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "DUP2",
      "path": "31"
    },
    "894": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "895": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4799
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "897": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4799
      ],
      "op": "DUP5",
      "path": "31"
    },
    "898": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4799
      ],
      "op": "ADD",
      "path": "31"
    },
    "899": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "901": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "902": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "904": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "905": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "DUP2",
      "path": "31"
    },
    "906": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "907": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "908": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4819
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x7"
    },
    "910": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4819
      ],
      "op": "ADD",
      "path": "31"
    },
    "911": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "DUP1",
      "path": "31"
    },
    "912": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "913": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "915": {
      "op": "NOT"
    },
    "916": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "AND",
      "path": "31"
    },
    "917": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "DUP4",
      "path": "31"
    },
    "918": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "919": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "920": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "OR",
      "path": "31"
    },
    "921": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "922": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "923": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "MLOAD",
      "path": "31",
      "statement": 6
    },
    "924": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0xEC669433AA0B3212A238C30115DBF73736739FAF98A33C293ECAD3DAAD1B37F6"
    },
    "957": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "958": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3CA"
    },
    "961": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "962": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "DUP5",
      "path": "31"
    },
    "963": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4809
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "964": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "DUP5",
      "path": "31"
    },
    "965": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4786,
        4831
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "966": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B70"
    },
    "969": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "JUMP",
      "path": "31"
    },
    "970": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "971": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "973": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "974": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "DUP1",
      "path": "31"
    },
    "975": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "976": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "SUB",
      "path": "31"
    },
    "977": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "978": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4846,
        4882
      ],
      "op": "LOG1",
      "path": "31"
    },
    "979": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "POP",
      "path": "31"
    },
    "980": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "POP",
      "path": "31"
    },
    "981": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "offset": [
        4593,
        4889
      ],
      "op": "POP",
      "path": "31"
    },
    "982": {
      "fn": "AdminImpl.ownerSetIsClosing",
      "jump": "o",
      "offset": [
        4593,
        4889
      ],
      "op": "JUMP",
      "path": "31"
    },
    "983": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7111,
        7500
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "984": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7303,
        7319
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 7,
      "value": "0x9"
    },
    "986": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7303,
        7319
      ],
      "op": "DUP3",
      "path": "31"
    },
    "987": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7303,
        7319
      ],
      "op": "ADD",
      "path": "31"
    },
    "988": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7303,
        7335
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "989": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7281,
        7299
      ],
      "op": "DUP2",
      "path": "31"
    },
    "990": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7281,
        7299
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "991": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7255,
        7392
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x42B"
    },
    "994": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7255,
        7392
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7303,
        7335
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1001": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7303,
        7335
      ],
      "op": "DIV",
      "path": "31"
    },
    "1002": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7303,
        7335
      ],
      "op": "PUSH8",
      "path": "31",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1011": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7303,
        7335
      ],
      "op": "AND",
      "path": "31"
    },
    "1012": {
      "op": "LT"
    },
    "1013": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7281,
        7335
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "1029": {
      "op": "MUL"
    },
    "1030": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7255,
        7392
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x5261746520746F6F206869676800000000000000000000000000000000000000"
    },
    "1063": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7255,
        7267
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "1066": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "jump": "i",
      "offset": [
        7255,
        7392
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1067": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7255,
        7392
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1068": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7402,
        7446
      ],
      "op": "DUP1",
      "path": "31",
      "statement": 8
    },
    "1069": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7402,
        7446
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1070": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7402,
        7431
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x7"
    },
    "1072": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7402,
        7431
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1073": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7402,
        7431
      ],
      "op": "ADD",
      "path": "31"
    },
    "1074": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7402,
        7446
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "1075": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7461,
        7493
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 9,
      "value": "0x40"
    },
    "1077": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7461,
        7493
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1078": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7461,
        7493
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0xEA691DD294C7882AADC1BEBC2FFB81B91AFB6BE606DBF15D627C073889C72436"
    },
    "1111": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7461,
        7493
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1112": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7461,
        7493
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x363"
    },
    "1115": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7461,
        7493
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1116": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7434,
        7446
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1117": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7434,
        7446
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1118": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7461,
        7493
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B39"
    },
    "1121": {
      "fn": "AdminImpl.ownerSetEarningsRate",
      "offset": [
        7461,
        7493
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1122": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1123": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4087,
        4117
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 10,
      "value": "0x46C"
    },
    "1126": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4104,
        4109
      ],
      "op": "DUP7",
      "path": "31"
    },
    "1127": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4111,
        4116
      ],
      "op": "DUP7",
      "path": "31"
    },
    "1128": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4087,
        4103
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9DA"
    },
    "1131": {
      "fn": "AdminImpl.ownerAddMarket",
      "jump": "i",
      "offset": [
        4087,
        4117
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1132": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4087,
        4117
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1133": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4147,
        4163
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1134": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4147,
        4163
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1135": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4174,
        4192
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 11,
      "value": "0x1"
    },
    "1137": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4174,
        4192
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1138": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4174,
        4192
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1139": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4174,
        4192
      ],
      "op": "ADD",
      "path": "31"
    },
    "1140": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4174,
        4192
      ],
      "op": "DUP9",
      "path": "31"
    },
    "1141": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4174,
        4192
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1144": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4225
      ],
      "op": "DUP3",
      "path": "31",
      "statement": 12
    },
    "1145": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4225
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1146": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4225
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1147": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4215
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1148": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4215
      ],
      "op": "DUP9",
      "path": "31"
    },
    "1149": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4215
      ],
      "op": "ADD",
      "path": "31"
    },
    "1150": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4225
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1152": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4225
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1153": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4225
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1155": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4225
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1156": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4225
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1157": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4239
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1158": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4239
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1165": {
      "op": "SHL"
    },
    "1166": {
      "op": "SUB"
    },
    "1167": {
      "op": "NOT"
    },
    "1168": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4239
      ],
      "op": "AND",
      "path": "31"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4239
      ],
      "op": "DUP9",
      "path": "31"
    },
    "1178": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4239
      ],
      "op": "AND",
      "path": "31"
    },
    "1179": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4239
      ],
      "op": "OR",
      "path": "31"
    },
    "1180": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4239
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1181": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4202,
        4239
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "1182": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4281,
        4300
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 13,
      "value": "0x4A5"
    },
    "1185": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4281,
        4298
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA5F"
    },
    "1188": {
      "fn": "AdminImpl.ownerAddMarket",
      "jump": "i",
      "offset": [
        4281,
        4300
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1189": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4281,
        4300
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1190": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1192": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1193": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1194": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1195": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4262
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "1197": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4262
      ],
      "op": "DUP10",
      "path": "31"
    },
    "1198": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4262
      ],
      "op": "ADD",
      "path": "31"
    },
    "1199": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1201": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1202": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1203": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1204": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1206": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1207": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1208": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1209": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1210": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1211": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1212": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4278
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "1214": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4278
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1215": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4278
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1216": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4278
      ],
      "op": "ADD",
      "path": "31"
    },
    "1217": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1218": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1219": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1220": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1221": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "ADD",
      "path": "31"
    },
    "1222": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1223": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP5",
      "path": "31"
    },
    "1224": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1225": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "ADD",
      "path": "31"
    },
    "1226": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1227": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1240": {
      "op": "NOT"
    },
    "1241": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1242": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "1243": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "AND",
      "path": "31"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1250": {
      "op": "SHL"
    },
    "1251": {
      "op": "SUB"
    },
    "1252": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1253": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1254": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "AND",
      "path": "31"
    },
    "1255": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "OR",
      "path": "31"
    },
    "1256": {
      "op": "PUSH24",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
    },
    "1281": {
      "op": "NOT"
    },
    "1282": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "AND",
      "path": "31"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1287": {
      "op": "SHL"
    },
    "1288": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1289": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1290": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP6",
      "path": "31"
    },
    "1291": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "AND",
      "path": "31"
    },
    "1292": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1293": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1294": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1295": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "MUL",
      "path": "31"
    },
    "1296": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "1297": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1298": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "1299": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "OR",
      "path": "31"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1304": {
      "op": "SHL"
    },
    "1305": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1310": {
      "op": "MUL"
    },
    "1311": {
      "op": "NOT"
    },
    "1312": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "AND",
      "path": "31"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xFFFFFFFF"
    },
    "1323": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1324": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1325": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "AND",
      "path": "31"
    },
    "1326": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1327": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1328": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1329": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "MUL",
      "path": "31"
    },
    "1330": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "OR",
      "path": "31"
    },
    "1331": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1332": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1333": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4300
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "1334": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "MLOAD",
      "path": "31",
      "statement": 14
    },
    "1335": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x8CF904FDFF707692D4BD95366B93D7302A97B4BF64F6716FD00B046ECBF82A46"
    },
    "1368": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1369": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x565"
    },
    "1372": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1373": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1374": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4249,
        4272
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1375": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4339,
        4344
      ],
      "op": "DUP10",
      "path": "31"
    },
    "1376": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4339,
        4344
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1377": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B55"
    },
    "1380": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1381": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1382": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1384": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1385": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1386": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1387": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "SUB",
      "path": "31"
    },
    "1388": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1389": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4316,
        4345
      ],
      "op": "LOG1",
      "path": "31"
    },
    "1390": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4356,
        4401
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 15,
      "value": "0x578"
    },
    "1393": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4372,
        4377
      ],
      "op": "DUP8",
      "path": "31"
    },
    "1394": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4379,
        4387
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1395": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4389,
        4400
      ],
      "op": "DUP8",
      "path": "31"
    },
    "1396": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4356,
        4371
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA9A"
    },
    "1399": {
      "fn": "AdminImpl.ownerAddMarket",
      "jump": "i",
      "offset": [
        4356,
        4401
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1400": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4356,
        4401
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1401": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4411,
        4462
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 16,
      "value": "0x583"
    },
    "1404": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4430,
        4435
      ],
      "op": "DUP8",
      "path": "31"
    },
    "1405": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4437,
        4445
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1406": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4447,
        4461
      ],
      "op": "DUP7",
      "path": "31"
    },
    "1407": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4411,
        4429
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xBD9"
    },
    "1410": {
      "fn": "AdminImpl.ownerAddMarket",
      "jump": "i",
      "offset": [
        4411,
        4462
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1411": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4411,
        4462
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1412": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4472,
        4521
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 17,
      "value": "0x58E"
    },
    "1415": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4490,
        4495
      ],
      "op": "DUP8",
      "path": "31"
    },
    "1416": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4497,
        4505
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1417": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4507,
        4520
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1418": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4472,
        4489
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xCCF"
    },
    "1421": {
      "fn": "AdminImpl.ownerAddMarket",
      "jump": "i",
      "offset": [
        4472,
        4521
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1422": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4472,
        4521
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1423": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4531,
        4580
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 18,
      "value": "0x599"
    },
    "1426": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4549,
        4554
      ],
      "op": "DUP8",
      "path": "31"
    },
    "1427": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4556,
        4564
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1428": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4566,
        4579
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1429": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4531,
        4548
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xD6D"
    },
    "1432": {
      "fn": "AdminImpl.ownerAddMarket",
      "jump": "i",
      "offset": [
        4531,
        4580
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1433": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        4531,
        4580
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1434": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "POP",
      "path": "31"
    },
    "1435": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "POP",
      "path": "31"
    },
    "1436": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "POP",
      "path": "31"
    },
    "1437": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "POP",
      "path": "31"
    },
    "1438": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "POP",
      "path": "31"
    },
    "1439": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "POP",
      "path": "31"
    },
    "1440": {
      "fn": "AdminImpl.ownerAddMarket",
      "offset": [
        3808,
        4587
      ],
      "op": "POP",
      "path": "31"
    },
    "1441": {
      "fn": "AdminImpl.ownerAddMarket",
      "jump": "o",
      "offset": [
        3808,
        4587
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1442": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6041,
        6558
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1443": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6218,
        6234
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 19,
      "value": "0x9"
    },
    "1445": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6218,
        6234
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1446": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6218,
        6234
      ],
      "op": "ADD",
      "path": "31"
    },
    "1447": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6218,
        6249
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1448": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6203,
        6214
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1449": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6203,
        6214
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1450": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6177,
        6307
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x5EF"
    },
    "1453": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6177,
        6307
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1454": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6218,
        6249
      ],
      "op": "PUSH8",
      "path": "31",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1463": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6218,
        6249
      ],
      "op": "AND",
      "path": "31"
    },
    "1464": {
      "op": "LT"
    },
    "1465": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6203,
        6249
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1470": {
      "op": "SHL"
    },
    "1471": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "1481": {
      "op": "MUL"
    },
    "1482": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6177,
        6307
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x526174696F20746F6F2068696768000000000000000000000000000000000000"
    },
    "1515": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6177,
        6189
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "1518": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "jump": "i",
      "offset": [
        6177,
        6307
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1519": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6177,
        6307
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1520": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6357,
        6391
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 20,
      "value": "0x6"
    },
    "1522": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6357,
        6391
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1523": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6357,
        6391
      ],
      "op": "ADD",
      "path": "31"
    },
    "1524": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6357,
        6397
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1525": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6343,
        6354
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1526": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6343,
        6354
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1527": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6317,
        6466
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x631"
    },
    "1530": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6317,
        6466
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1531": {
      "op": "LT"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "1547": {
      "op": "MUL"
    },
    "1548": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6317,
        6466
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x526174696F2063616E6E6F74206265203C3D2073707265616400000000000000"
    },
    "1581": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6317,
        6329
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "1584": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "jump": "i",
      "offset": [
        6317,
        6466
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1585": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6317,
        6466
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1586": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6476,
        6512
      ],
      "op": "DUP1",
      "path": "31",
      "statement": 21
    },
    "1587": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6476,
        6512
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1588": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6476,
        6492
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x5"
    },
    "1590": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6476,
        6492
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1591": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6476,
        6492
      ],
      "op": "ADD",
      "path": "31"
    },
    "1592": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6476,
        6512
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "1593": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6527,
        6551
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 22,
      "value": "0x40"
    },
    "1595": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6527,
        6551
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1596": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6527,
        6551
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x253F176964E18A501DB01A67272483DB404E4E473E8AFD1D255EEB0E96EB2E13"
    },
    "1629": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6527,
        6551
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1630": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6527,
        6551
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x363"
    },
    "1633": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6527,
        6551
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1634": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6507,
        6512
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1635": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6507,
        6512
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1636": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6527,
        6551
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B39"
    },
    "1639": {
      "fn": "AdminImpl.ownerSetMarginRatio",
      "offset": [
        6527,
        6551
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1640": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1641": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5608,
        5642
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 23,
      "value": "0x672"
    },
    "1644": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5626,
        5631
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1645": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5633,
        5641
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1646": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5608,
        5625
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9A7"
    },
    "1649": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "jump": "i",
      "offset": [
        5608,
        5642
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1650": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5608,
        5642
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1651": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5652,
        5701
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 24,
      "value": "0x67D"
    },
    "1654": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5670,
        5675
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1655": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5677,
        5685
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1656": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5687,
        5700
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1657": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5652,
        5669
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xCCF"
    },
    "1660": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "jump": "i",
      "offset": [
        5652,
        5701
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1661": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5652,
        5701
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1662": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "POP",
      "path": "31"
    },
    "1663": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "POP",
      "path": "31"
    },
    "1664": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "offset": [
        5436,
        5708
      ],
      "op": "POP",
      "path": "31"
    },
    "1665": {
      "fn": "AdminImpl.ownerSetMarginPremium",
      "jump": "o",
      "offset": [
        5436,
        5708
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1666": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5714,
        5986
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1667": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5886,
        5920
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 25,
      "value": "0x68C"
    },
    "1670": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5904,
        5909
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1671": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5911,
        5919
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1672": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5886,
        5903
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9A7"
    },
    "1675": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "jump": "i",
      "offset": [
        5886,
        5920
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1676": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5886,
        5920
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1677": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5930,
        5979
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 26,
      "value": "0x67D"
    },
    "1680": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5948,
        5953
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1681": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5955,
        5963
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1682": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5965,
        5978
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1683": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "offset": [
        5930,
        5947
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xD6D"
    },
    "1686": {
      "fn": "AdminImpl.ownerSetSpreadPremium",
      "jump": "i",
      "offset": [
        5930,
        5979
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1687": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        4895,
        5152
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1688": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5056,
        5090
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 27,
      "value": "0x6A1"
    },
    "1691": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5074,
        5079
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1692": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5081,
        5089
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1693": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5056,
        5073
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9A7"
    },
    "1696": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "jump": "i",
      "offset": [
        5056,
        5090
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1697": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5056,
        5090
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1698": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5100,
        5145
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 28,
      "value": "0x67D"
    },
    "1701": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5116,
        5121
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1702": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5123,
        5131
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1703": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5133,
        5144
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1704": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "offset": [
        5100,
        5115
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA9A"
    },
    "1707": {
      "fn": "AdminImpl.ownerSetPriceOracle",
      "jump": "i",
      "offset": [
        5100,
        5145
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1708": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5158,
        5430
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1709": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5328,
        5362
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 29,
      "value": "0x6B6"
    },
    "1712": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5346,
        5351
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1713": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5353,
        5361
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1714": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5328,
        5345
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9A7"
    },
    "1717": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "jump": "i",
      "offset": [
        5328,
        5362
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1718": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5328,
        5362
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1719": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5372,
        5423
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 30,
      "value": "0x67D"
    },
    "1722": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5391,
        5396
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1723": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5398,
        5406
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1724": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5408,
        5422
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1725": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "offset": [
        5372,
        5390
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xBD9"
    },
    "1728": {
      "fn": "AdminImpl.ownerSetInterestSetter",
      "jump": "i",
      "offset": [
        5372,
        5423
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1729": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1730": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2714,
        2721
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1732": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2737,
        2771
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 31,
      "value": "0x6CD"
    },
    "1735": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2755,
        2760
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1736": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2762,
        2770
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1737": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2737,
        2754
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9A7"
    },
    "1740": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        2737,
        2771
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1741": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2737,
        2771
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1742": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2781,
        2807
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x6D5"
    },
    "1745": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2781,
        2807
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x160A"
    },
    "1748": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        2781,
        2807
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1749": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2781,
        2807
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1750": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2810,
        2844
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x6E5"
    },
    "1753": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2810,
        2815
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1754": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2835,
        2843
      ],
      "op": "DUP6",
      "path": "31"
    },
    "1755": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2810,
        2844
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xFFFFFFFF"
    },
    "1760": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2810,
        2834
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xE04"
    },
    "1763": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2810,
        2844
      ],
      "op": "AND",
      "path": "31"
    },
    "1764": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        2810,
        2844
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1765": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2810,
        2844
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1766": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2781,
        2844
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1767": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2781,
        2844
      ],
      "op": "POP",
      "path": "31"
    },
    "1768": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2855,
        2963
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 32,
      "value": "0x72A"
    },
    "1771": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2882,
        2904
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x6F3"
    },
    "1774": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2882,
        2891
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1775": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2882,
        2902
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xECC"
    },
    "1778": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        2882,
        2904
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1779": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2882,
        2904
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1780": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2881,
        2904
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1785": {
      "op": "SHL"
    },
    "1786": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "1796": {
      "op": "MUL"
    },
    "1797": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2855,
        2963
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x4E65676174697665206578636573730000000000000000000000000000000000"
    },
    "1830": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2855,
        2867
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "1833": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        2855,
        2963
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1834": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2855,
        2963
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1835": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2974,
        2987
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1837": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2990,
        3014
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x73C"
    },
    "1840": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2990,
        2995
      ],
      "op": "DUP7",
      "path": "31"
    },
    "1841": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3005,
        3013
      ],
      "op": "DUP7",
      "path": "31"
    },
    "1842": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2990,
        3014
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xFFFFFFFF"
    },
    "1847": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2990,
        3004
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xEEA"
    },
    "1850": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2990,
        3014
      ],
      "op": "AND",
      "path": "31"
    },
    "1851": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        2990,
        3014
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1852": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2990,
        3014
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1853": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2974,
        3014
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1854": {
      "op": "POP"
    },
    "1855": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3025,
        3046
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1857": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3049,
        3079
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x759"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "op": "SUB"
    },
    "1868": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3049,
        3064
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1869": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3049,
        3064
      ],
      "op": "AND",
      "path": "31"
    },
    "1870": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3073,
        3077
      ],
      "op": "ADDRESS",
      "path": "31"
    },
    "1871": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3049,
        3079
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xFFFFFFFF"
    },
    "1876": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3049,
        3064
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xF09"
    },
    "1879": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3049,
        3079
      ],
      "op": "AND",
      "path": "31"
    },
    "1880": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        3049,
        3079
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1881": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3049,
        3079
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1882": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3025,
        3079
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1883": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3025,
        3079
      ],
      "op": "POP",
      "path": "31"
    },
    "1884": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3111,
        3124
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1885": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3093,
        3102
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1886": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3093,
        3108
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1888": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3093,
        3108
      ],
      "op": "ADD",
      "path": "31"
    },
    "1889": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3093,
        3108
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1890": {
      "branch": 109,
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3093,
        3124
      ],
      "op": "GT",
      "path": "31"
    },
    "1891": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3089,
        3182
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "1892": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3089,
        3182
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x76F"
    },
    "1895": {
      "branch": 109,
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3089,
        3182
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1896": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3140,
        3155
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 33,
      "value": "0x20"
    },
    "1898": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3140,
        3155
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1899": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3140,
        3155
      ],
      "op": "ADD",
      "path": "31"
    },
    "1900": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3140,
        3171
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1901": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3140,
        3171
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1902": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3140,
        3171
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1903": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3089,
        3182
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1904": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3218,
        3233
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 34,
      "value": "0x20"
    },
    "1906": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3218,
        3233
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1907": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3218,
        3233
      ],
      "op": "ADD",
      "path": "31"
    },
    "1908": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3218,
        3233
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1909": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3234
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x790"
    },
    "1912": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3234
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "SUB"
    },
    "1921": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3206
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1922": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3206
      ],
      "op": "AND",
      "path": "31"
    },
    "1923": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3206
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1924": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3207,
        3216
      ],
      "op": "DUP8",
      "path": "31"
    },
    "1925": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3207,
        3216
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1926": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3234
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xFFFFFFFF"
    },
    "1931": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3206
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xF8B"
    },
    "1934": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3234
      ],
      "op": "AND",
      "path": "31"
    },
    "1935": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "i",
      "offset": [
        3192,
        3234
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1936": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3192,
        3234
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1937": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "PUSH32",
      "path": "31",
      "statement": 35,
      "value": "0xA5DF3527E4451A18E4B8A5E3308E1D1F1962062AEAFE061C48BBB29F172A39C8"
    },
    "1970": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3274,
        3279
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1971": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3281,
        3290
      ],
      "op": "DUP5",
      "path": "31"
    },
    "1972": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3281,
        3296
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1974": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3281,
        3296
      ],
      "op": "ADD",
      "path": "31"
    },
    "1975": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3281,
        3296
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1976": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1978": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1979": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x7C5"
    },
    "1982": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1983": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1984": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1985": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B0D"
    },
    "1988": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1989": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1990": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1992": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1993": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1994": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1995": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "SUB",
      "path": "31"
    },
    "1996": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1997": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3250,
        3297
      ],
      "op": "LOG1",
      "path": "31"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "op": "POP"
    },
    "2000": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3315,
        3330
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 36,
      "value": "0x20"
    },
    "2002": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3315,
        3330
      ],
      "op": "ADD",
      "path": "31"
    },
    "2003": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3315,
        3330
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2004": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        3315,
        3330
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2005": {
      "op": "POP"
    },
    "2006": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2007": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "2008": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "2009": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "POP",
      "path": "31"
    },
    "2010": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "POP",
      "path": "31"
    },
    "2011": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "offset": [
        2551,
        3337
      ],
      "op": "POP",
      "path": "31"
    },
    "2012": {
      "fn": "AdminImpl.ownerWithdrawExcessTokens",
      "jump": "o",
      "offset": [
        2551,
        3337
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2013": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2014": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3508,
        3515
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2016": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3531,
        3561
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 37,
      "value": "0x7E9"
    },
    "2019": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3548,
        3553
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2020": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3555,
        3560
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2021": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3531,
        3547
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9DA"
    },
    "2024": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "jump": "i",
      "offset": [
        3531,
        3561
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2025": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3531,
        3561
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2026": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3572,
        3587
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2028": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3590,
        3620
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x804"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2037": {
      "op": "SHL"
    },
    "2038": {
      "op": "SUB"
    },
    "2039": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3590,
        3605
      ],
      "op": "DUP6",
      "path": "31"
    },
    "2040": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3590,
        3605
      ],
      "op": "AND",
      "path": "31"
    },
    "2041": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3614,
        3618
      ],
      "op": "ADDRESS",
      "path": "31"
    },
    "2042": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3590,
        3620
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xFFFFFFFF"
    },
    "2047": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3590,
        3605
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xF09"
    },
    "2050": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3590,
        3620
      ],
      "op": "AND",
      "path": "31"
    },
    "2051": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "jump": "i",
      "offset": [
        3590,
        3620
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2052": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3590,
        3620
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2053": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3572,
        3620
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2054": {
      "op": "POP"
    },
    "2055": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3630,
        3664
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 38,
      "value": "0x820"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "op": "SUB"
    },
    "2066": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3630,
        3644
      ],
      "op": "DUP6",
      "path": "31"
    },
    "2067": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3630,
        3644
      ],
      "op": "AND",
      "path": "31"
    },
    "2068": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3645,
        3654
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2069": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3572,
        3620
      ],
      "op": "DUP4",
      "path": "31"
    },
    "2070": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3630,
        3664
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xFFFFFFFF"
    },
    "2075": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3630,
        3644
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xF8B"
    },
    "2078": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3630,
        3664
      ],
      "op": "AND",
      "path": "31"
    },
    "2079": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "jump": "i",
      "offset": [
        3630,
        3664
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2080": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3630,
        3664
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2081": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "PUSH32",
      "path": "31",
      "statement": 39,
      "value": "0xA5DF3527E4451A18E4B8A5E3308E1D1F1962062AEAFE061C48BBB29F172A39C8"
    },
    "2114": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3704,
        3709
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2115": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3711,
        3718
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2116": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2118": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2119": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x851"
    },
    "2122": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "2123": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2124": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2125": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B0D"
    },
    "2128": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2129": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2130": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2132": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2133": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2134": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2135": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "SUB",
      "path": "31"
    },
    "2136": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2137": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3680,
        3719
      ],
      "op": "LOG1",
      "path": "31"
    },
    "2138": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3737,
        3744
      ],
      "op": "SWAP5",
      "path": "31",
      "statement": 40
    },
    "2139": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "offset": [
        3343,
        3751
      ],
      "op": "SWAP4",
      "path": "31"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "fn": "AdminImpl.ownerWithdrawUnsupportedTokens",
      "jump": "o",
      "offset": [
        3343,
        3751
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2145": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        7996,
        8254
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "op": "SUB"
    },
    "2154": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "DUP3",
      "path": "31",
      "statement": 41
    },
    "2155": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "AND",
      "path": "31"
    },
    "2156": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2158": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2159": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2160": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2161": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8170
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "2163": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8170
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2164": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8170
      ],
      "op": "ADD",
      "path": "31"
    },
    "2165": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "2167": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2168": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2170": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2171": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2172": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2173": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "2174": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2175": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2178": {
      "op": "NOT"
    },
    "2179": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "AND",
      "path": "31"
    },
    "2180": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "DUP4",
      "path": "31"
    },
    "2181": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2182": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2183": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "OR",
      "path": "31"
    },
    "2184": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2185": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "2186": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8207,
        8247
      ],
      "op": "MLOAD",
      "path": "31",
      "statement": 42
    },
    "2187": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8207,
        8247
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0xEAEEE7699E70E6B31AC89EC999EF6936B97AC1E364F0E1FCF584772372CAA0D3"
    },
    "2220": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8207,
        8247
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2221": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8207,
        8247
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3CA"
    },
    "2224": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8207,
        8247
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2225": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2226": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8180
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2227": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2228": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8149,
        8191
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2229": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8207,
        8247
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1ACA"
    },
    "2232": {
      "fn": "AdminImpl.ownerSetGlobalOperator",
      "offset": [
        8207,
        8247
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2233": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7506,
        7930
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2234": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7712,
        7748
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 43,
      "value": "0xA"
    },
    "2236": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7712,
        7748
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2237": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7712,
        7748
      ],
      "op": "ADD",
      "path": "31"
    },
    "2238": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7712,
        7748
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2239": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7686,
        7708
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2240": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7686,
        7708
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2241": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7660,
        7806
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x90C"
    },
    "2244": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7660,
        7806
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7712,
        7748
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2251": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7712,
        7748
      ],
      "op": "DIV",
      "path": "31"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "op": "SUB"
    },
    "2260": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7712,
        7748
      ],
      "op": "AND",
      "path": "31"
    },
    "2261": {
      "op": "LT"
    },
    "2262": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7686,
        7748
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "2278": {
      "op": "MUL"
    },
    "2279": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7660,
        7806
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x56616C756520746F6F2068696768000000000000000000000000000000000000"
    },
    "2312": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7660,
        7672
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "2315": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "jump": "i",
      "offset": [
        7660,
        7806
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2316": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7660,
        7806
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2317": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7816,
        7868
      ],
      "op": "DUP1",
      "path": "31",
      "statement": 44
    },
    "2318": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7816,
        7868
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2319": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7816,
        7849
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x8"
    },
    "2321": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7816,
        7849
      ],
      "op": "DUP4",
      "path": "31"
    },
    "2322": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7816,
        7849
      ],
      "op": "ADD",
      "path": "31"
    },
    "2323": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7816,
        7868
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "2324": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7883,
        7923
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 45,
      "value": "0x40"
    },
    "2326": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7883,
        7923
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2327": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7883,
        7923
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0xFDCDE9342DCFA3A8817B7566B25FED913D2C6EDDB65575D40E14681934FAE971"
    },
    "2360": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7883,
        7923
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2361": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7883,
        7923
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x363"
    },
    "2364": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7883,
        7923
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2365": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7852,
        7868
      ],
      "op": "DUP4",
      "path": "31"
    },
    "2366": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7852,
        7868
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2367": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7883,
        7923
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B39"
    },
    "2370": {
      "fn": "AdminImpl.ownerSetMinBorrowedValue",
      "offset": [
        7883,
        7923
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2371": {
      "fn": "Require.that",
      "offset": [
        1293,
        1719
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2372": {
      "branch": 114,
      "fn": "Require.that",
      "offset": [
        1427,
        1431
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2373": {
      "fn": "Require.that",
      "offset": [
        1422,
        1713
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x67D"
    },
    "2376": {
      "branch": 114,
      "fn": "Require.that",
      "offset": [
        1422,
        1713
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "2377": {
      "fn": "Require.that",
      "offset": [
        1541,
        1565
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 46,
      "value": "0x951"
    },
    "2380": {
      "fn": "Require.that",
      "offset": [
        1560,
        1564
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2381": {
      "fn": "Require.that",
      "offset": [
        1541,
        1559
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x104A"
    },
    "2384": {
      "fn": "Require.that",
      "jump": "i",
      "offset": [
        1541,
        1565
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2385": {
      "fn": "Require.that",
      "offset": [
        1541,
        1565
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0xF5"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "op": "PUSH2",
      "value": "0x1D1"
    },
    "2394": {
      "op": "MUL"
    },
    "2395": {
      "fn": "Require.that",
      "offset": [
        1622,
        1648
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x963"
    },
    "2398": {
      "fn": "Require.that",
      "offset": [
        1641,
        1647
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2399": {
      "fn": "Require.that",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x104A"
    },
    "2402": {
      "fn": "Require.that",
      "jump": "i",
      "offset": [
        1622,
        1648
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2403": {
      "fn": "Require.that",
      "offset": [
        1622,
        1648
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2404": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2406": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2407": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2409": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "ADD",
      "path": "48"
    },
    "2410": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x975"
    },
    "2413": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "2414": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "2415": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2416": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2417": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1A2D"
    },
    "2420": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2421": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2422": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2424": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2425": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2428": {
      "op": "NOT"
    },
    "2429": {
      "op": "DUP2"
    },
    "2430": {
      "op": "DUP5"
    },
    "2431": {
      "op": "SUB"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "op": "DUP2"
    },
    "2434": {
      "op": "MSTORE"
    },
    "2435": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2436": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2437": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2438": {
      "fn": "Require.that",
      "offset": [
        1499,
        1670
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2448": {
      "op": "MUL"
    },
    "2449": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "DUP3",
      "path": "48"
    },
    "2450": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2451": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x99E"
    },
    "2454": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2455": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x4"
    },
    "2457": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "ADD",
      "path": "48"
    },
    "2458": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1B28"
    },
    "2461": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2462": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2463": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2465": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2466": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2467": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "2468": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "SUB",
      "path": "48"
    },
    "2469": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2470": {
      "fn": "Require.that",
      "offset": [
        1447,
        1702
      ],
      "op": "REVERT",
      "path": "48"
    },
    "2471": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10752,
        11027
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2472": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10928,
        10944
      ],
      "op": "DUP2",
      "path": "31",
      "statement": 47
    },
    "2473": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10928,
        10944
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2474": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10891,
        11020
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9D6"
    },
    "2477": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10891,
        11020
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2478": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10917,
        10944
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2479": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10917,
        10944
      ],
      "op": "LT",
      "path": "31"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "2495": {
      "op": "MUL"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "2500": {
      "op": "SHL"
    },
    "2501": {
      "op": "PUSH10",
      "value": "0x26B0B935B2BA1027A7A1"
    },
    "2512": {
      "op": "MUL"
    },
    "2513": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10917,
        10925
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2514": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10891,
        10903
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x10D2"
    },
    "2517": {
      "fn": "AdminImpl._validateMarketId",
      "jump": "i",
      "offset": [
        10891,
        11020
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2518": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10891,
        11020
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2519": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10752,
        11027
      ],
      "op": "POP",
      "path": "31"
    },
    "2520": {
      "fn": "AdminImpl._validateMarketId",
      "offset": [
        10752,
        11027
      ],
      "op": "POP",
      "path": "31"
    },
    "2521": {
      "fn": "AdminImpl._validateMarketId",
      "jump": "o",
      "offset": [
        10752,
        11027
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2522": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10237,
        10746
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2523": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10393,
        10409
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2524": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10393,
        10409
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2525": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10372,
        10390
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2527": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10372,
        10390
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2528": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10456,
        10633
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2529": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10480,
        10490
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2530": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10476,
        10477
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2531": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10476,
        10490
      ],
      "op": "LT",
      "path": "31"
    },
    "2532": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10456,
        10633
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2533": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10456,
        10633
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA1D"
    },
    "2536": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10456,
        10633
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "2537": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2539": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2540": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2541": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2542": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10528
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "2544": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10528
      ],
      "op": "DUP7",
      "path": "31"
    },
    "2545": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10528
      ],
      "op": "ADD",
      "path": "31"
    },
    "2546": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "2548": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2549": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2551": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2552": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10531
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "2553": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10537
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2560": {
      "op": "SHL"
    },
    "2561": {
      "op": "SUB"
    },
    "2562": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10546
      ],
      "op": "DUP6",
      "path": "31"
    },
    "2563": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10546
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2564": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10546
      ],
      "op": "AND",
      "path": "31"
    },
    "2565": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10537
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2566": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10537
      ],
      "op": "AND",
      "path": "31"
    },
    "2567": {
      "branch": 110,
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10515,
        10546
      ],
      "op": "EQ",
      "path": "31"
    },
    "2568": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10511,
        10623
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2569": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10511,
        10623
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA15"
    },
    "2572": {
      "branch": 110,
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10511,
        10623
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "2573": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10581,
        10585
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 48,
      "value": "0x1"
    },
    "2575": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10566,
        10585
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2576": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10566,
        10585
      ],
      "op": "POP",
      "path": "31"
    },
    "2577": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10603,
        10608
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 49,
      "value": "0xA1D"
    },
    "2580": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10603,
        10608
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2581": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10511,
        10623
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2582": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10492,
        10495
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 50,
      "value": "0x1"
    },
    "2584": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10492,
        10495
      ],
      "op": "ADD",
      "path": "31"
    },
    "2585": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10456,
        10633
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x9E0"
    },
    "2588": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10456,
        10633
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2589": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10456,
        10633
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2590": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10456,
        10633
      ],
      "op": "POP",
      "path": "31"
    },
    "2591": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10643,
        10739
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 51,
      "value": "0xA59"
    },
    "2594": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10670,
        10682
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2595": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10669,
        10682
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "2600": {
      "op": "SHL"
    },
    "2601": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "2611": {
      "op": "MUL"
    },
    "2612": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10643,
        10739
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x4D61726B65742065786973747300000000000000000000000000000000000000"
    },
    "2645": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10643,
        10655
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "2648": {
      "fn": "AdminImpl._requireNoMarket",
      "jump": "i",
      "offset": [
        10643,
        10739
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2649": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10643,
        10739
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2650": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10237,
        10746
      ],
      "op": "POP",
      "path": "31"
    },
    "2651": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10237,
        10746
      ],
      "op": "POP",
      "path": "31"
    },
    "2652": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10237,
        10746
      ],
      "op": "POP",
      "path": "31"
    },
    "2653": {
      "fn": "AdminImpl._requireNoMarket",
      "offset": [
        10237,
        10746
      ],
      "op": "POP",
      "path": "31"
    },
    "2654": {
      "fn": "AdminImpl._requireNoMarket",
      "jump": "o",
      "offset": [
        10237,
        10746
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2655": {
      "fn": "Interest.newIndex",
      "offset": [
        3533,
        3755
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2656": {
      "fn": "Interest.newIndex",
      "offset": [
        3600,
        3612
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA67"
    },
    "2659": {
      "fn": "Interest.newIndex",
      "offset": [
        3600,
        3612
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1621"
    },
    "2662": {
      "fn": "Interest.newIndex",
      "jump": "i",
      "offset": [
        3600,
        3612
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2663": {
      "fn": "Interest.newIndex",
      "offset": [
        3600,
        3612
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2664": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 52,
      "value": "0x40"
    },
    "2666": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2667": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2668": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "2670": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2671": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "ADD",
      "path": "45"
    },
    "2672": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2673": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2674": {
      "offset": [
        1197,
        1203
      ],
      "op": "PUSH8",
      "path": "45",
      "value": "0xDE0B6B3A7640000"
    },
    "2683": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2684": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2685": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2686": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2688": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2689": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "ADD",
      "path": "45"
    },
    "2690": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2691": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2692": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2693": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "ADD",
      "path": "45"
    },
    "2694": {
      "fn": "Interest.newIndex",
      "offset": [
        3719,
        3737
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA8D"
    },
    "2697": {
      "fn": "Interest.newIndex",
      "offset": [
        3719,
        3735
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1121"
    },
    "2700": {
      "fn": "Interest.newIndex",
      "jump": "i",
      "offset": [
        3719,
        3737
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2701": {
      "fn": "Interest.newIndex",
      "offset": [
        3719,
        3737
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2702": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "2707": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "AND",
      "path": "45"
    },
    "2708": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2709": {
      "fn": "Interest.newIndex",
      "offset": [
        3635,
        3748
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2710": {
      "fn": "Interest.newIndex",
      "offset": [
        3628,
        3748
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "fn": "Interest.newIndex",
      "offset": [
        3533,
        3755
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2713": {
      "fn": "Interest.newIndex",
      "jump": "o",
      "offset": [
        3533,
        3755
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2714": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8312,
        8838
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2715": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8522,
        8535
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2717": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2718": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2719": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2720": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8551
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "2722": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8551
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2723": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8551
      ],
      "op": "ADD",
      "path": "31"
    },
    "2724": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "2726": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2727": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2729": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2730": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2731": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2732": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8561
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "2733": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8567
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2734": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "SWAP1",
      "path": "31",
      "statement": 53
    },
    "2735": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2740": {
      "op": "SHL"
    },
    "2741": {
      "op": "PUSH4",
      "value": "0x41976E09"
    },
    "2746": {
      "op": "MUL"
    },
    "2747": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2748": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2755": {
      "op": "SHL"
    },
    "2756": {
      "op": "SUB"
    },
    "2757": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8567
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2758": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8567
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2759": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8567
      ],
      "op": "AND",
      "path": "31"
    },
    "2760": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8567
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2761": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8578,
        8706
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xB6D"
    },
    "2764": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8578,
        8706
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2765": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8624
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2766": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8624
      ],
      "op": "DUP5",
      "path": "31"
    },
    "2767": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8624
      ],
      "op": "AND",
      "path": "31"
    },
    "2768": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8624
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2769": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8624
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0x41976E09"
    },
    "2774": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8624
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2775": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAE4"
    },
    "2778": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2779": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8567
      ],
      "op": "DUP6",
      "path": "31"
    },
    "2780": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8538,
        8567
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2781": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "2783": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "ADD",
      "path": "31"
    },
    "2784": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1ABC"
    },
    "2787": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2788": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2789": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "2791": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2793": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2794": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2795": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "DUP4",
      "path": "31"
    },
    "2796": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "SUB",
      "path": "31"
    },
    "2797": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2798": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "DUP7",
      "path": "31"
    },
    "2799": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2800": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "EXTCODESIZE",
      "path": "31"
    },
    "2801": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2802": {
      "op": "DUP1"
    },
    "2803": {
      "op": "ISZERO"
    },
    "2804": {
      "op": "PUSH2",
      "value": "0xAFC"
    },
    "2807": {
      "op": "JUMPI"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2810": {
      "op": "DUP1"
    },
    "2811": {
      "op": "REVERT"
    },
    "2812": {
      "op": "JUMPDEST"
    },
    "2813": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "POP",
      "path": "31"
    },
    "2814": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "GAS",
      "path": "31"
    },
    "2815": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "STATICCALL",
      "path": "31"
    },
    "2816": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2817": {
      "op": "DUP1"
    },
    "2818": {
      "op": "ISZERO"
    },
    "2819": {
      "op": "PUSH2",
      "value": "0xB10"
    },
    "2822": {
      "op": "JUMPI"
    },
    "2823": {
      "op": "RETURNDATASIZE"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2826": {
      "op": "DUP1"
    },
    "2827": {
      "op": "RETURNDATACOPY"
    },
    "2828": {
      "op": "RETURNDATASIZE"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2831": {
      "op": "REVERT"
    },
    "2832": {
      "op": "JUMPDEST"
    },
    "2833": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "POP",
      "path": "31"
    },
    "2834": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "POP",
      "path": "31"
    },
    "2835": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "POP",
      "path": "31"
    },
    "2836": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "POP",
      "path": "31"
    },
    "2837": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2839": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2840": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2843": {
      "op": "NOT"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2846": {
      "op": "DUP3"
    },
    "2847": {
      "op": "ADD"
    },
    "2848": {
      "op": "AND"
    },
    "2849": {
      "op": "DUP3"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "op": "DUP1"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2854": {
      "op": "MSTORE"
    },
    "2855": {
      "op": "POP"
    },
    "2856": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xB34"
    },
    "2859": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2860": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2861": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2862": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "ADD",
      "path": "31"
    },
    "2863": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2864": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x16DA"
    },
    "2867": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2868": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8631
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2869": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8637
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2870": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8642
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2871": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8604,
        8642
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "2876": {
      "op": "SHL"
    },
    "2877": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "2887": {
      "op": "MUL"
    },
    "2888": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8578,
        8706
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x496E76616C6964206F7261636C65207072696365000000000000000000000000"
    },
    "2921": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8578,
        8590
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "2924": {
      "fn": "AdminImpl._setPriceOracle",
      "jump": "i",
      "offset": [
        8578,
        8706
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2925": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8578,
        8706
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2926": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 54,
      "value": "0x0"
    },
    "2928": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "DUP4",
      "path": "31"
    },
    "2929": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2930": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2931": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8730
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "2933": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8730
      ],
      "op": "DUP6",
      "path": "31"
    },
    "2934": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8730
      ],
      "op": "ADD",
      "path": "31"
    },
    "2935": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "2937": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2938": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2940": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2941": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2942": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2943": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "2944": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8752
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "2946": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8752
      ],
      "op": "ADD",
      "path": "31"
    },
    "2947": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2948": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2955": {
      "op": "SHL"
    },
    "2956": {
      "op": "SUB"
    },
    "2957": {
      "op": "NOT"
    },
    "2958": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "AND",
      "path": "31"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2965": {
      "op": "SHL"
    },
    "2966": {
      "op": "SUB"
    },
    "2967": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "DUP6",
      "path": "31"
    },
    "2968": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "AND",
      "path": "31"
    },
    "2969": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "OR",
      "path": "31"
    },
    "2970": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2971": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "2972": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "MLOAD",
      "path": "31",
      "statement": 55
    },
    "2973": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x6585928691672490B717A51FE425F4494B34C6B5CB8335C5DC1E70115BD26630"
    },
    "3006": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3007": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xBCB"
    },
    "3010": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3011": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "DUP6",
      "path": "31"
    },
    "3012": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8740
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3013": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "DUP6",
      "path": "31"
    },
    "3014": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8717,
        8766
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3015": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B55"
    },
    "3018": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3019": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3020": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3022": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3023": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "DUP1",
      "path": "31"
    },
    "3024": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3025": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "SUB",
      "path": "31"
    },
    "3026": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3027": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8782,
        8831
      ],
      "op": "LOG1",
      "path": "31"
    },
    "3028": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8312,
        8838
      ],
      "op": "POP",
      "path": "31"
    },
    "3029": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8312,
        8838
      ],
      "op": "POP",
      "path": "31"
    },
    "3030": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8312,
        8838
      ],
      "op": "POP",
      "path": "31"
    },
    "3031": {
      "fn": "AdminImpl._setPriceOracle",
      "offset": [
        8312,
        8838
      ],
      "op": "POP",
      "path": "31"
    },
    "3032": {
      "fn": "AdminImpl._setPriceOracle",
      "jump": "o",
      "offset": [
        8312,
        8838
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3033": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        8844,
        9323
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3034": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9081,
        9094
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "3036": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "DUP3",
      "path": "31"
    },
    "3037": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3038": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3039": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9110
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "3041": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9110
      ],
      "op": "DUP5",
      "path": "31"
    },
    "3042": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9110
      ],
      "op": "ADD",
      "path": "31"
    },
    "3043": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "3045": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3046": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3048": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "DUP1",
      "path": "31"
    },
    "3049": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "DUP3",
      "path": "31"
    },
    "3050": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9120
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "3051": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9126
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "3052": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "SWAP1",
      "path": "31",
      "statement": 56
    },
    "3053": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "op": "PUSH4",
      "value": "0xE8177DCF"
    },
    "3064": {
      "op": "MUL"
    },
    "3065": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3066": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3073": {
      "op": "SHL"
    },
    "3074": {
      "op": "SUB"
    },
    "3075": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9126
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3076": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9126
      ],
      "op": "DUP3",
      "path": "31"
    },
    "3077": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9126
      ],
      "op": "AND",
      "path": "31"
    },
    "3078": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9126
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "3079": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9166
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3080": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9166
      ],
      "op": "DUP5",
      "path": "31"
    },
    "3081": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9166
      ],
      "op": "AND",
      "path": "31"
    },
    "3082": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9166
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3083": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9166
      ],
      "op": "PUSH4",
      "path": "31",
      "value": "0xE8177DCF"
    },
    "3088": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9166
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3089": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xC20"
    },
    "3092": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3093": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9126
      ],
      "op": "DUP6",
      "path": "31"
    },
    "3094": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9097,
        9126
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3095": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9081,
        9094
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3096": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9081,
        9094
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3097": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "3099": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "ADD",
      "path": "31"
    },
    "3100": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1AE5"
    },
    "3103": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3104": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3105": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "3107": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3109": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3110": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "DUP1",
      "path": "31"
    },
    "3111": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "DUP4",
      "path": "31"
    },
    "3112": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "SUB",
      "path": "31"
    },
    "3113": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3114": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "DUP7",
      "path": "31"
    },
    "3115": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "DUP1",
      "path": "31"
    },
    "3116": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "EXTCODESIZE",
      "path": "31"
    },
    "3117": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "3118": {
      "op": "DUP1"
    },
    "3119": {
      "op": "ISZERO"
    },
    "3120": {
      "op": "PUSH2",
      "value": "0xC38"
    },
    "3123": {
      "op": "JUMPI"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3126": {
      "op": "DUP1"
    },
    "3127": {
      "op": "REVERT"
    },
    "3128": {
      "op": "JUMPDEST"
    },
    "3129": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "POP",
      "path": "31"
    },
    "3130": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "GAS",
      "path": "31"
    },
    "3131": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "STATICCALL",
      "path": "31"
    },
    "3132": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "3133": {
      "op": "DUP1"
    },
    "3134": {
      "op": "ISZERO"
    },
    "3135": {
      "op": "PUSH2",
      "value": "0xC4C"
    },
    "3138": {
      "op": "JUMPI"
    },
    "3139": {
      "op": "RETURNDATASIZE"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3142": {
      "op": "DUP1"
    },
    "3143": {
      "op": "RETURNDATACOPY"
    },
    "3144": {
      "op": "RETURNDATASIZE"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3147": {
      "op": "REVERT"
    },
    "3148": {
      "op": "JUMPDEST"
    },
    "3149": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "POP",
      "path": "31"
    },
    "3150": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "POP",
      "path": "31"
    },
    "3151": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "POP",
      "path": "31"
    },
    "3152": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "POP",
      "path": "31"
    },
    "3153": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3155": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3156": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "RETURNDATASIZE",
      "path": "31"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3159": {
      "op": "NOT"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3162": {
      "op": "DUP3"
    },
    "3163": {
      "op": "ADD"
    },
    "3164": {
      "op": "AND"
    },
    "3165": {
      "op": "DUP3"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "op": "DUP1"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3170": {
      "op": "MSTORE"
    },
    "3171": {
      "op": "POP"
    },
    "3172": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xC70"
    },
    "3175": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3176": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3177": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3178": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "ADD",
      "path": "31"
    },
    "3179": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3180": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x16DA"
    },
    "3183": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3184": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9136,
        9179
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3185": {
      "op": "POP"
    },
    "3186": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 57,
      "value": "0x0"
    },
    "3188": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "DUP4",
      "path": "31"
    },
    "3189": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3190": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3191": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9203
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "3193": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9203
      ],
      "op": "DUP6",
      "path": "31"
    },
    "3194": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9203
      ],
      "op": "ADD",
      "path": "31"
    },
    "3195": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "3197": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3198": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3200": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3201": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3202": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3203": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "3204": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9228
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "3206": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9228
      ],
      "op": "ADD",
      "path": "31"
    },
    "3207": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "DUP1",
      "path": "31"
    },
    "3208": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3215": {
      "op": "SHL"
    },
    "3216": {
      "op": "SUB"
    },
    "3217": {
      "op": "NOT"
    },
    "3218": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "AND",
      "path": "31"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3225": {
      "op": "SHL"
    },
    "3226": {
      "op": "SUB"
    },
    "3227": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "DUP6",
      "path": "31"
    },
    "3228": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "AND",
      "path": "31"
    },
    "3229": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "OR",
      "path": "31"
    },
    "3230": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3231": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "3232": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9261,
        9316
      ],
      "op": "MLOAD",
      "path": "31",
      "statement": 58
    },
    "3233": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9261,
        9316
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0xAA2217332F2505521D63C728F59A8692C1C8C952A0C5D578E4142BB88CEFB063"
    },
    "3266": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9261,
        9316
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3267": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9261,
        9316
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xBCB"
    },
    "3270": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9261,
        9316
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3271": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "DUP6",
      "path": "31"
    },
    "3272": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9213
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3273": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "DUP6",
      "path": "31"
    },
    "3274": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9190,
        9245
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3275": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9261,
        9316
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B55"
    },
    "3278": {
      "fn": "AdminImpl._setInterestSetter",
      "offset": [
        9261,
        9316
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3279": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9329,
        9777
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3280": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9547,
        9563
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 59,
      "value": "0x9"
    },
    "3282": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9547,
        9563
      ],
      "op": "DUP4",
      "path": "31"
    },
    "3283": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9547,
        9563
      ],
      "op": "ADD",
      "path": "31"
    },
    "3284": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9547,
        9580
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "3285": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9524,
        9543
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3286": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9524,
        9543
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3287": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9498,
        9647
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xD23"
    },
    "3290": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9498,
        9647
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3295": {
      "op": "SHL"
    },
    "3296": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9547,
        9580
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3297": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9547,
        9580
      ],
      "op": "DIV",
      "path": "31"
    },
    "3298": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9547,
        9580
      ],
      "op": "PUSH8",
      "path": "31",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3307": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9547,
        9580
      ],
      "op": "AND",
      "path": "31"
    },
    "3308": {
      "op": "LT"
    },
    "3309": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9524,
        9580
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "3314": {
      "op": "SHL"
    },
    "3315": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "3325": {
      "op": "MUL"
    },
    "3326": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9498,
        9647
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x4D617267696E207072656D69756D20746F6F2068696768000000000000000000"
    },
    "3359": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9498,
        9510
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "3362": {
      "fn": "AdminImpl._setMarginPremium",
      "jump": "i",
      "offset": [
        9498,
        9647
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3363": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9498,
        9647
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3364": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 60,
      "value": "0x0"
    },
    "3366": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "DUP3",
      "path": "31"
    },
    "3367": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3368": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3369": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9670
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "3371": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9670
      ],
      "op": "DUP5",
      "path": "31"
    },
    "3372": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9670
      ],
      "op": "ADD",
      "path": "31"
    },
    "3373": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "3375": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3376": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3378": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3379": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3380": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3381": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9680
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "3382": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9710
      ],
      "op": "DUP3",
      "path": "31"
    },
    "3383": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9710
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3384": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9694
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x5"
    },
    "3386": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9694
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3387": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9694
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3388": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9694
      ],
      "op": "ADD",
      "path": "31"
    },
    "3389": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9657,
        9710
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "3390": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9726,
        9770
      ],
      "op": "MLOAD",
      "path": "31",
      "statement": 61
    },
    "3391": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9726,
        9770
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x19ECB621BC945075C47008C9DEAF25107A3343ECFE752608915A9D1DA35E9E7C"
    },
    "3424": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9726,
        9770
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3425": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9726,
        9770
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3CA"
    },
    "3428": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9726,
        9770
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3429": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9671,
        9679
      ],
      "op": "DUP5",
      "path": "31"
    },
    "3430": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9671,
        9679
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3431": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9697,
        9710
      ],
      "op": "DUP5",
      "path": "31"
    },
    "3432": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9697,
        9710
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3433": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9726,
        9770
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B7E"
    },
    "3436": {
      "fn": "AdminImpl._setMarginPremium",
      "offset": [
        9726,
        9770
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3437": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9783,
        10231
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3438": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10001,
        10034
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 62,
      "value": "0xA"
    },
    "3440": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10001,
        10034
      ],
      "op": "DUP4",
      "path": "31"
    },
    "3441": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10001,
        10034
      ],
      "op": "ADD",
      "path": "31"
    },
    "3442": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10001,
        10034
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "3443": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9978,
        9997
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3444": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9978,
        9997
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3445": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9952,
        10101
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xDBA"
    },
    "3448": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9952,
        10101
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3449": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10001,
        10034
      ],
      "op": "PUSH8",
      "path": "31",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3458": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10001,
        10034
      ],
      "op": "AND",
      "path": "31"
    },
    "3459": {
      "op": "LT"
    },
    "3460": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9978,
        10034
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "3465": {
      "op": "SHL"
    },
    "3466": {
      "op": "PUSH9",
      "value": "0x10591B5A5B925B5C1B"
    },
    "3476": {
      "op": "MUL"
    },
    "3477": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9952,
        10101
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x537072656164207072656D69756D20746F6F2068696768000000000000000000"
    },
    "3510": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9952,
        9964
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x943"
    },
    "3513": {
      "fn": "AdminImpl._setSpreadPremium",
      "jump": "i",
      "offset": [
        9952,
        10101
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3514": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        9952,
        10101
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3515": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 63,
      "value": "0x0"
    },
    "3517": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "DUP3",
      "path": "31"
    },
    "3518": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3519": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3520": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10124
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "3522": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10124
      ],
      "op": "DUP5",
      "path": "31"
    },
    "3523": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10124
      ],
      "op": "ADD",
      "path": "31"
    },
    "3524": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "3526": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3527": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3529": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3530": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3531": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3532": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10134
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "3533": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10164
      ],
      "op": "DUP3",
      "path": "31"
    },
    "3534": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10164
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3535": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10148
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x6"
    },
    "3537": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10148
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3538": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10148
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3539": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10148
      ],
      "op": "ADD",
      "path": "31"
    },
    "3540": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10111,
        10164
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "3541": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10180,
        10224
      ],
      "op": "MLOAD",
      "path": "31",
      "statement": 64
    },
    "3542": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10180,
        10224
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x8214BD57E079F2F3E3E5C52BF78DB5FB85926C866AEC322BA024DB710365FC35"
    },
    "3575": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10180,
        10224
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3576": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10180,
        10224
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3CA"
    },
    "3579": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10180,
        10224
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3580": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10125,
        10133
      ],
      "op": "DUP5",
      "path": "31"
    },
    "3581": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10125,
        10133
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3582": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10151,
        10164
      ],
      "op": "DUP5",
      "path": "31"
    },
    "3583": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10151,
        10164
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3584": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10180,
        10224
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1B7E"
    },
    "3587": {
      "fn": "AdminImpl._setSpreadPremium",
      "offset": [
        10180,
        10224
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3588": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        4869,
        5654
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3589": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5013,
        5029
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE0C"
    },
    "3592": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5013,
        5029
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x160A"
    },
    "3595": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5013,
        5029
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3596": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5013,
        5029
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3597": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5045,
        5072
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE14"
    },
    "3600": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5045,
        5072
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1621"
    },
    "3603": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5045,
        5072
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3604": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5045,
        5072
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3605": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5075,
        5099
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE24"
    },
    "3608": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5075,
        5080
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3609": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5090,
        5098
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3610": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5075,
        5099
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "3615": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5075,
        5089
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1131"
    },
    "3618": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5075,
        5099
      ],
      "op": "AND",
      "path": "49"
    },
    "3619": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5075,
        5099
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3620": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5075,
        5099
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3621": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5045,
        5099
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3622": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5045,
        5099
      ],
      "op": "POP",
      "path": "49"
    },
    "3623": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5109,
        5139
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE2E"
    },
    "3626": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5109,
        5139
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x160A"
    },
    "3629": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5109,
        5139
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3630": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5109,
        5139
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3631": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5142,
        5169
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE3E"
    },
    "3634": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5142,
        5147
      ],
      "op": "DUP6",
      "path": "49"
    },
    "3635": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5160,
        5168
      ],
      "op": "DUP6",
      "path": "49"
    },
    "3636": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5142,
        5169
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "3641": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5142,
        5159
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1192"
    },
    "3644": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5142,
        5169
      ],
      "op": "AND",
      "path": "49"
    },
    "3645": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5142,
        5169
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3646": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5142,
        5169
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3647": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5109,
        5169
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5180,
        5193
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3651": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5196,
        5220
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE52"
    },
    "3654": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5196,
        5201
      ],
      "op": "DUP7",
      "path": "49"
    },
    "3655": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5211,
        5219
      ],
      "op": "DUP7",
      "path": "49"
    },
    "3656": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5196,
        5220
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "3661": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5196,
        5210
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xEEA"
    },
    "3664": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5196,
        5220
      ],
      "op": "AND",
      "path": "49"
    },
    "3665": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5196,
        5220
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3666": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5196,
        5220
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3667": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5180,
        5220
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3668": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5180,
        5220
      ],
      "op": "POP",
      "path": "49"
    },
    "3669": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5231,
        5258
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE5C"
    },
    "3672": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5231,
        5258
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x160A"
    },
    "3675": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5231,
        5258
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3676": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5231,
        5258
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3677": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3679": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3680": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3681": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3683": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "ADD",
      "path": "49"
    },
    "3684": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3686": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3687": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3688": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5291,
        5295
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1"
    },
    "3690": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "3691": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "3692": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3693": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3694": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "3696": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "ADD",
      "path": "49"
    },
    "3697": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5316,
        5353
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE7A"
    },
    "3700": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5332,
        5337
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3701": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5347,
        5351
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "3702": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5316,
        5331
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xF09"
    },
    "3705": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5316,
        5353
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3706": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5316,
        5353
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3707": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3708": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5261,
        5364
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3709": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5231,
        5364
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3710": {
      "op": "POP"
    },
    "3711": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5389,
        5415
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE86"
    },
    "3714": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5389,
        5415
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x160A"
    },
    "3717": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5389,
        5415
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3718": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5389,
        5415
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3719": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5429,
        5455
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE8E"
    },
    "3722": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5429,
        5455
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x160A"
    },
    "3725": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5429,
        5455
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3726": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5429,
        5455
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3727": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5468,
        5507
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xE98"
    },
    "3730": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5491,
        5499
      ],
      "op": "DUP6",
      "path": "49"
    },
    "3731": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5501,
        5506
      ],
      "op": "DUP8",
      "path": "49"
    },
    "3732": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5468,
        5490
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x11DC"
    },
    "3735": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5468,
        5507
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3736": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5468,
        5507
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3737": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5375,
        5507
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3738": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5375,
        5507
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5375,
        5507
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5647
      ],
      "op": "PUSH2",
      "path": "49",
      "statement": 65,
      "value": "0xEBD"
    },
    "3745": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5375,
        5507
      ],
      "op": "DUP3",
      "path": "49"
    },
    "3746": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5632
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0xEB1"
    },
    "3749": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5617
      ],
      "op": "DUP6",
      "path": "49"
    },
    "3750": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5375,
        5507
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3751": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5632
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "3756": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5621
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1272"
    },
    "3759": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5632
      ],
      "op": "AND",
      "path": "49"
    },
    "3760": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5607,
        5632
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3761": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5632
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3762": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5636
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3763": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5647
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "3768": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5636
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1272"
    },
    "3771": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5647
      ],
      "op": "AND",
      "path": "49"
    },
    "3772": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "i",
      "offset": [
        5607,
        5647
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3773": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5607,
        5647
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3774": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5600,
        5647
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "3775": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5600,
        5647
      ],
      "op": "POP",
      "path": "49"
    },
    "3776": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5600,
        5647
      ],
      "op": "POP",
      "path": "49"
    },
    "3777": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5600,
        5647
      ],
      "op": "POP",
      "path": "49"
    },
    "3778": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5600,
        5647
      ],
      "op": "POP",
      "path": "49"
    },
    "3779": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5600,
        5647
      ],
      "op": "POP",
      "path": "49"
    },
    "3780": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5600,
        5647
      ],
      "op": "POP",
      "path": "49"
    },
    "3781": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        5600,
        5647
      ],
      "op": "POP",
      "path": "49"
    },
    "3782": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        4869,
        5654
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3783": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        4869,
        5654
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "3784": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        4869,
        5654
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3785": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        4869,
        5654
      ],
      "op": "POP",
      "path": "49"
    },
    "3786": {
      "fn": "Storage.getNumExcessTokens",
      "offset": [
        4869,
        5654
      ],
      "op": "POP",
      "path": "49"
    },
    "3787": {
      "fn": "Storage.getNumExcessTokens",
      "jump": "o",
      "offset": [
        4869,
        5654
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3788": {
      "fn": "Types.isNegative",
      "offset": [
        5410,
        5561
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "3789": {
      "fn": "Types.isNegative",
      "offset": [
        5533,
        5539
      ],
      "op": "DUP1",
      "path": "52",
      "statement": 66
    },
    "3790": {
      "fn": "Types.isNegative",
      "offset": [
        5533,
        5539
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "3791": {
      "fn": "Types.isNegative",
      "offset": [
        5505,
        5509
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "3793": {
      "fn": "Types.isNegative",
      "offset": [
        5505,
        5509
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "3794": {
      "fn": "Types.isNegative",
      "offset": [
        5532,
        5539
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "3795": {
      "fn": "Types.isNegative",
      "offset": [
        5532,
        5554
      ],
      "op": "DUP1",
      "path": "52"
    },
    "3796": {
      "fn": "Types.isNegative",
      "offset": [
        5532,
        5554
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "3797": {
      "fn": "Types.isNegative",
      "offset": [
        5532,
        5554
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0xEE2"
    },
    "3800": {
      "fn": "Types.isNegative",
      "offset": [
        5532,
        5554
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "3801": {
      "fn": "Types.isNegative",
      "offset": [
        5532,
        5554
      ],
      "op": "POP",
      "path": "52"
    },
    "3802": {
      "fn": "Types.isNegative",
      "offset": [
        5553,
        5554
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x0"
    },
    "3804": {
      "fn": "Types.isNegative",
      "offset": [
        5543,
        5544
      ],
      "op": "DUP3",
      "path": "52"
    },
    "3805": {
      "fn": "Types.isNegative",
      "offset": [
        5543,
        5550
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "3807": {
      "fn": "Types.isNegative",
      "offset": [
        5543,
        5550
      ],
      "op": "ADD",
      "path": "52"
    },
    "3808": {
      "fn": "Types.isNegative",
      "offset": [
        5543,
        5550
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "3809": {
      "fn": "Types.isNegative",
      "offset": [
        5543,
        5554
      ],
      "op": "GT",
      "path": "52"
    },
    "3810": {
      "fn": "Types.isNegative",
      "offset": [
        5532,
        5554
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "3811": {
      "fn": "Types.isNegative",
      "offset": [
        5525,
        5554
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "3812": {
      "fn": "Types.isNegative",
      "offset": [
        5525,
        5554
      ],
      "op": "POP",
      "path": "52"
    },
    "3813": {
      "fn": "Types.isNegative",
      "offset": [
        5410,
        5561
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "3814": {
      "fn": "Types.isNegative",
      "offset": [
        5410,
        5561
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "3815": {
      "fn": "Types.isNegative",
      "offset": [
        5410,
        5561
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "3816": {
      "fn": "Types.isNegative",
      "offset": [
        5410,
        5561
      ],
      "op": "POP",
      "path": "52"
    },
    "3817": {
      "fn": "Types.isNegative",
      "jump": "o",
      "offset": [
        5410,
        5561
      ],
      "op": "JUMP",
      "path": "52"
    },
    "3818": {
      "fn": "Storage.getToken",
      "offset": [
        4217,
        4417
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "3819": {
      "fn": "Storage.getToken",
      "offset": [
        4351,
        4358
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "3821": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4404
      ],
      "op": "SWAP1",
      "path": "49",
      "statement": 67
    },
    "3822": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4404
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3823": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4404
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3824": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4394
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1"
    },
    "3826": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4394
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3827": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4394
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3828": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4394
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3829": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4394
      ],
      "op": "ADD",
      "path": "49"
    },
    "3830": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4404
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "3832": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4404
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "3833": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4404
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "3835": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4404
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3836": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4404
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "3837": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4410
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3844": {
      "op": "SHL"
    },
    "3845": {
      "op": "SUB"
    },
    "3846": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4410
      ],
      "op": "AND",
      "path": "49"
    },
    "3847": {
      "fn": "Storage.getToken",
      "offset": [
        4381,
        4410
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3848": {
      "fn": "Storage.getToken",
      "jump": "o",
      "offset": [
        4217,
        4417
      ],
      "op": "JUMP",
      "path": "49"
    },
    "3849": {
      "fn": "Token.balanceOf",
      "offset": [
        1180,
        1365
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3850": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH1",
      "path": "51",
      "statement": 68,
      "value": "0x40"
    },
    "3852": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3857": {
      "op": "SHL"
    },
    "3858": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3863": {
      "op": "MUL"
    },
    "3864": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3865": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "3866": {
      "fn": "Token.balanceOf",
      "offset": [
        1298,
        1305
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "3868": {
      "fn": "Token.balanceOf",
      "offset": [
        1298,
        1305
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "op": "SUB"
    },
    "3877": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1351
      ],
      "op": "DUP5",
      "path": "51"
    },
    "3878": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1351
      ],
      "op": "AND",
      "path": "51"
    },
    "3879": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1351
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3880": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1351
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0x70A08231"
    },
    "3885": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1351
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3886": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xF3B"
    },
    "3889": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3890": {
      "fn": "Token.balanceOf",
      "offset": [
        1352,
        1357
      ],
      "op": "DUP6",
      "path": "51"
    },
    "3891": {
      "fn": "Token.balanceOf",
      "offset": [
        1352,
        1357
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3892": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "3894": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "ADD",
      "path": "51"
    },
    "3895": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1ABC"
    },
    "3898": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "JUMP",
      "path": "51"
    },
    "3899": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3900": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "3902": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "3904": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3905": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3906": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "DUP4",
      "path": "51"
    },
    "3907": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "SUB",
      "path": "51"
    },
    "3908": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3909": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "DUP7",
      "path": "51"
    },
    "3910": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3911": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "EXTCODESIZE",
      "path": "51"
    },
    "3912": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "3913": {
      "op": "DUP1"
    },
    "3914": {
      "op": "ISZERO"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0xF53"
    },
    "3918": {
      "op": "JUMPI"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3921": {
      "op": "DUP1"
    },
    "3922": {
      "op": "REVERT"
    },
    "3923": {
      "op": "JUMPDEST"
    },
    "3924": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "POP",
      "path": "51"
    },
    "3925": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "GAS",
      "path": "51"
    },
    "3926": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "STATICCALL",
      "path": "51"
    },
    "3927": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "3928": {
      "op": "DUP1"
    },
    "3929": {
      "op": "ISZERO"
    },
    "3930": {
      "op": "PUSH2",
      "value": "0xF67"
    },
    "3933": {
      "op": "JUMPI"
    },
    "3934": {
      "op": "RETURNDATASIZE"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3937": {
      "op": "DUP1"
    },
    "3938": {
      "op": "RETURNDATACOPY"
    },
    "3939": {
      "op": "RETURNDATASIZE"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3942": {
      "op": "REVERT"
    },
    "3943": {
      "op": "JUMPDEST"
    },
    "3944": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "POP",
      "path": "51"
    },
    "3945": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "POP",
      "path": "51"
    },
    "3946": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "POP",
      "path": "51"
    },
    "3947": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "POP",
      "path": "51"
    },
    "3948": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "3950": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "3951": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3954": {
      "op": "NOT"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3957": {
      "op": "DUP3"
    },
    "3958": {
      "op": "ADD"
    },
    "3959": {
      "op": "AND"
    },
    "3960": {
      "op": "DUP3"
    },
    "3961": {
      "op": "ADD"
    },
    "3962": {
      "op": "DUP1"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3965": {
      "op": "MSTORE"
    },
    "3966": {
      "op": "POP"
    },
    "3967": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x7D6"
    },
    "3970": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "3971": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3972": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "DUP2",
      "path": "51"
    },
    "3973": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "ADD",
      "path": "51"
    },
    "3974": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "3975": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1933"
    },
    "3978": {
      "fn": "Token.balanceOf",
      "offset": [
        1328,
        1358
      ],
      "op": "JUMP",
      "path": "51"
    },
    "3979": {
      "fn": "Token.transfer",
      "offset": [
        2082,
        2436
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "3980": {
      "fn": "Token.transfer",
      "offset": [
        2208,
        2219
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3981": {
      "fn": "Token.transfer",
      "offset": [
        2208,
        2219
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "3982": {
      "branch": 123,
      "fn": "Token.transfer",
      "offset": [
        2208,
        2219
      ],
      "op": "DUP1",
      "path": "51"
    },
    "3983": {
      "fn": "Token.transfer",
      "offset": [
        2208,
        2242
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xFA0"
    },
    "3986": {
      "branch": 123,
      "fn": "Token.transfer",
      "offset": [
        2208,
        2242
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "3987": {
      "op": "POP"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3994": {
      "op": "SHL"
    },
    "3995": {
      "op": "SUB"
    },
    "3996": {
      "fn": "Token.transfer",
      "offset": [
        2223,
        2242
      ],
      "op": "DUP3",
      "path": "51"
    },
    "3997": {
      "fn": "Token.transfer",
      "offset": [
        2223,
        2242
      ],
      "op": "AND",
      "path": "51"
    },
    "3998": {
      "fn": "Token.transfer",
      "offset": [
        2237,
        2241
      ],
      "op": "ADDRESS",
      "path": "51"
    },
    "3999": {
      "branch": 124,
      "fn": "Token.transfer",
      "offset": [
        2223,
        2242
      ],
      "op": "EQ",
      "path": "51"
    },
    "4000": {
      "fn": "Token.transfer",
      "offset": [
        2208,
        2242
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "4001": {
      "fn": "Token.transfer",
      "offset": [
        2204,
        2275
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "4002": {
      "fn": "Token.transfer",
      "offset": [
        2204,
        2275
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xFAA"
    },
    "4005": {
      "branch": 124,
      "fn": "Token.transfer",
      "offset": [
        2204,
        2275
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "4006": {
      "fn": "Token.transfer",
      "offset": [
        2258,
        2265
      ],
      "op": "PUSH2",
      "path": "51",
      "statement": 69,
      "value": "0x67D"
    },
    "4009": {
      "fn": "Token.transfer",
      "offset": [
        2258,
        2265
      ],
      "op": "JUMP",
      "path": "51"
    },
    "4010": {
      "fn": "Token.transfer",
      "offset": [
        2204,
        2275
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "4011": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "PUSH1",
      "path": "51",
      "statement": 70,
      "value": "0x40"
    },
    "4013": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4024": {
      "op": "MUL"
    },
    "4025": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "DUP2",
      "path": "51"
    },
    "4026": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "MSTORE",
      "path": "51"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4033": {
      "op": "SHL"
    },
    "4034": {
      "op": "SUB"
    },
    "4035": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2307
      ],
      "op": "DUP5",
      "path": "51"
    },
    "4036": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2307
      ],
      "op": "AND",
      "path": "51"
    },
    "4037": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2307
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "4038": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2307
      ],
      "op": "PUSH4",
      "path": "51",
      "value": "0xA9059CBB"
    },
    "4043": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2307
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "4044": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0xFDB"
    },
    "4047": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "4048": {
      "fn": "Token.transfer",
      "offset": [
        2308,
        2310
      ],
      "op": "DUP6",
      "path": "51"
    },
    "4049": {
      "fn": "Token.transfer",
      "offset": [
        2308,
        2310
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "4050": {
      "fn": "Token.transfer",
      "offset": [
        2312,
        2318
      ],
      "op": "DUP6",
      "path": "51"
    },
    "4051": {
      "fn": "Token.transfer",
      "offset": [
        2312,
        2318
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "4052": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x4"
    },
    "4054": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "ADD",
      "path": "51"
    },
    "4055": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1B0D"
    },
    "4058": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "JUMP",
      "path": "51"
    },
    "4059": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "4060": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "4062": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x40"
    },
    "4064": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "4065": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "DUP1",
      "path": "51"
    },
    "4066": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "DUP4",
      "path": "51"
    },
    "4067": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "SUB",
      "path": "51"
    },
    "4068": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "DUP2",
      "path": "51"
    },
    "4069": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "4071": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "DUP8",
      "path": "51"
    },
    "4072": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "DUP1",
      "path": "51"
    },
    "4073": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "EXTCODESIZE",
      "path": "51"
    },
    "4074": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "4075": {
      "op": "DUP1"
    },
    "4076": {
      "op": "ISZERO"
    },
    "4077": {
      "op": "PUSH2",
      "value": "0xFF5"
    },
    "4080": {
      "op": "JUMPI"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4083": {
      "op": "DUP1"
    },
    "4084": {
      "op": "REVERT"
    },
    "4085": {
      "op": "JUMPDEST"
    },
    "4086": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "POP",
      "path": "51"
    },
    "4087": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "GAS",
      "path": "51"
    },
    "4088": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "CALL",
      "path": "51"
    },
    "4089": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "4090": {
      "op": "DUP1"
    },
    "4091": {
      "op": "ISZERO"
    },
    "4092": {
      "op": "PUSH2",
      "value": "0x1009"
    },
    "4095": {
      "op": "JUMPI"
    },
    "4096": {
      "op": "RETURNDATASIZE"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4099": {
      "op": "DUP1"
    },
    "4100": {
      "op": "RETURNDATACOPY"
    },
    "4101": {
      "op": "RETURNDATASIZE"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4104": {
      "op": "REVERT"
    },
    "4105": {
      "op": "JUMPDEST"
    },
    "4106": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "POP",
      "path": "51"
    },
    "4107": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "POP",
      "path": "51"
    },
    "4108": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "POP",
      "path": "51"
    },
    "4109": {
      "fn": "Token.transfer",
      "offset": [
        2285,
        2319
      ],
      "op": "POP",
      "path": "51"
    },
    "4110": {
      "fn": "Token.transfer",
      "offset": [
        2330,
        2429
      ],
      "op": "PUSH2",
      "path": "51",
      "statement": 71,
      "value": "0x67D"
    },
    "4113": {
      "fn": "Token.transfer",
      "offset": [
        2356,
        2370
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x1018"
    },
    "4116": {
      "fn": "Token.transfer",
      "offset": [
        2356,
        2368
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x128C"
    },
    "4119": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        2356,
        2370
      ],
      "op": "JUMP",
      "path": "51"
    },
    "4120": {
      "fn": "Token.transfer",
      "offset": [
        2356,
        2370
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4125": {
      "op": "SHL"
    },
    "4126": {
      "op": "PUSH5",
      "value": "0x2A37B5B2B7"
    },
    "4132": {
      "op": "MUL"
    },
    "4133": {
      "fn": "Token.transfer",
      "offset": [
        2330,
        2429
      ],
      "op": "PUSH32",
      "path": "51",
      "value": "0x5472616E73666572206661696C65640000000000000000000000000000000000"
    },
    "4166": {
      "fn": "Token.transfer",
      "offset": [
        2330,
        2342
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x943"
    },
    "4169": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        2330,
        2429
      ],
      "op": "JUMP",
      "path": "51"
    },
    "4170": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6358,
        7324
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4171": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6461,
        6473
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x60"
    },
    "4173": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6536,
        6555
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4174": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6575,
        6580
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4175": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4177": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4178": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4180": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "ADD",
      "path": "48"
    },
    "4181": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x105E"
    },
    "4184": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4185": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4186": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1A18"
    },
    "4189": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4190": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4191": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4193": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4194": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4197": {
      "op": "NOT"
    },
    "4198": {
      "op": "DUP2"
    },
    "4199": {
      "op": "DUP5"
    },
    "4200": {
      "op": "SUB"
    },
    "4201": {
      "op": "ADD"
    },
    "4202": {
      "op": "DUP2"
    },
    "4203": {
      "op": "MSTORE"
    },
    "4204": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4205": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4206": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4207": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6558,
        6581
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4208": {
      "op": "POP"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4211": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6687,
        7258
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4212": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6708,
        6713
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4213": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6708,
        6713
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4214": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6687,
        7258
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x10BB"
    },
    "4217": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6687,
        7258
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4218": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4219": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4222": {
      "op": "NOT"
    },
    "4223": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6861,
        6864
      ],
      "op": "SWAP1",
      "path": "48",
      "statement": 72
    },
    "4224": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6861,
        6864
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4225": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6861,
        6864
      ],
      "op": "ADD",
      "path": "48"
    },
    "4226": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6861,
        6864
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4227": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6965
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4228": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6965
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4229": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6861,
        6864
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4230": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6861,
        6864
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4231": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4232": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "LT",
      "path": "48"
    },
    "4233": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x108E"
    },
    "4236": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4237": {
      "dev": "Index out of range",
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "INVALID",
      "path": "48"
    },
    "4238": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4239": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "ADD",
      "path": "48"
    },
    "4240": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4242": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "ADD",
      "path": "48"
    },
    "4243": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4250": {
      "op": "SHL"
    },
    "4251": {
      "op": "SUB"
    },
    "4252": {
      "op": "NOT"
    },
    "4253": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xF8"
    },
    "4255": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4256": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4257": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "SHR",
      "path": "48"
    },
    "4258": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4259": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4260": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6968
      ],
      "op": "SHL",
      "path": "48"
    },
    "4261": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6973
      ],
      "op": "AND",
      "path": "48"
    },
    "4262": {
      "branch": 115,
      "fn": "Require.stringifyTruncated",
      "offset": [
        6959,
        6973
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4263": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6955,
        7248
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x10B6"
    },
    "4266": {
      "branch": 115,
      "fn": "Require.stringifyTruncated",
      "offset": [
        6955,
        7248
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4267": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7014,
        7015
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "4269": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7010,
        7015
      ],
      "op": "ADD",
      "path": "48"
    },
    "4270": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7140,
        7162
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4271": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7140,
        7162
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4272": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7147,
        7153
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4273": {
      "op": "POP"
    },
    "4274": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7220,
        7233
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 73,
      "value": "0xEE5"
    },
    "4277": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7220,
        7233
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4278": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6955,
        7248
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4279": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6687,
        7258
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1073"
    },
    "4282": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6687,
        7258
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4283": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        6687,
        7258
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4284": {
      "op": "POP"
    },
    "4285": {
      "op": "POP"
    },
    "4286": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 74,
      "value": "0x40"
    },
    "4288": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4289": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4290": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7315,
        7316
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "4292": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4293": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4294": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4296": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4297": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "ADD",
      "path": "48"
    },
    "4298": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4299": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4300": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4301": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7305,
        7317
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4302": {
      "fn": "Require.stringifyTruncated",
      "offset": [
        7298,
        7317
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4303": {
      "op": "POP"
    },
    "4304": {
      "op": "POP"
    },
    "4305": {
      "fn": "Require.stringifyTruncated",
      "jump": "o",
      "offset": [
        6358,
        7324
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4306": {
      "fn": "Require.that",
      "offset": [
        1725,
        2286
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4307": {
      "branch": 116,
      "fn": "Require.that",
      "offset": [
        1885,
        1889
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4308": {
      "fn": "Require.that",
      "offset": [
        1880,
        2280
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xA59"
    },
    "4311": {
      "branch": 116,
      "fn": "Require.that",
      "offset": [
        1880,
        2280
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4312": {
      "fn": "Require.that",
      "offset": [
        1999,
        2023
      ],
      "op": "PUSH2",
      "path": "48",
      "statement": 75,
      "value": "0x10E0"
    },
    "4315": {
      "fn": "Require.that",
      "offset": [
        2018,
        2022
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4316": {
      "fn": "Require.that",
      "offset": [
        1999,
        2017
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x104A"
    },
    "4319": {
      "fn": "Require.that",
      "jump": "i",
      "offset": [
        1999,
        2023
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4320": {
      "fn": "Require.that",
      "offset": [
        1999,
        2023
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0xF5"
    },
    "4325": {
      "op": "SHL"
    },
    "4326": {
      "op": "PUSH2",
      "value": "0x1D1"
    },
    "4329": {
      "op": "MUL"
    },
    "4330": {
      "fn": "Require.that",
      "offset": [
        2080,
        2106
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x10F2"
    },
    "4333": {
      "fn": "Require.that",
      "offset": [
        2099,
        2105
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4334": {
      "fn": "Require.that",
      "offset": [
        2080,
        2098
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x104A"
    },
    "4337": {
      "fn": "Require.that",
      "jump": "i",
      "offset": [
        2080,
        2106
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4338": {
      "fn": "Require.that",
      "offset": [
        2080,
        2106
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "4343": {
      "op": "SHL"
    },
    "4344": {
      "op": "PUSH2",
      "value": "0x80F"
    },
    "4347": {
      "op": "MUL"
    },
    "4348": {
      "fn": "Require.that",
      "offset": [
        2164,
        2183
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1104"
    },
    "4351": {
      "fn": "Require.that",
      "offset": [
        2174,
        2182
      ],
      "op": "DUP6",
      "path": "48"
    },
    "4352": {
      "fn": "Require.that",
      "offset": [
        2164,
        2173
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12C0"
    },
    "4355": {
      "fn": "Require.that",
      "jump": "i",
      "offset": [
        2164,
        2183
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4356": {
      "fn": "Require.that",
      "offset": [
        2164,
        2183
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4357": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4359": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4360": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x975"
    },
    "4363": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "SWAP6",
      "path": "48"
    },
    "4364": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "SWAP5",
      "path": "48"
    },
    "4365": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "4366": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4367": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4368": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4376": {
      "op": "MUL"
    },
    "4377": {
      "fn": "Require.that",
      "offset": [
        2209,
        2215
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4378": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4380": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "ADD",
      "path": "48"
    },
    "4381": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1A5E"
    },
    "4384": {
      "fn": "Require.that",
      "offset": [
        1957,
        2237
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4385": {
      "fn": "Time.currentTime",
      "offset": [
        909,
        1041
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4386": {
      "fn": "Time.currentTime",
      "offset": [
        979,
        985
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4388": {
      "fn": "Time.currentTime",
      "offset": [
        1008,
        1034
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 76,
      "value": "0x112C"
    },
    "4391": {
      "fn": "Time.currentTime",
      "offset": [
        1018,
        1033
      ],
      "op": "TIMESTAMP",
      "path": "50"
    },
    "4392": {
      "fn": "Time.currentTime",
      "offset": [
        1008,
        1017
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1380"
    },
    "4395": {
      "fn": "Time.currentTime",
      "jump": "i",
      "offset": [
        1008,
        1034
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4396": {
      "fn": "Time.currentTime",
      "offset": [
        1008,
        1034
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4397": {
      "fn": "Time.currentTime",
      "offset": [
        1001,
        1034
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4398": {
      "fn": "Time.currentTime",
      "offset": [
        1001,
        1034
      ],
      "op": "POP",
      "path": "50"
    },
    "4399": {
      "fn": "Time.currentTime",
      "offset": [
        909,
        1041
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4400": {
      "fn": "Time.currentTime",
      "jump": "o",
      "offset": [
        909,
        1041
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4401": {
      "fn": "Storage.getIndex",
      "offset": [
        4649,
        4863
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "4402": {
      "fn": "Storage.getIndex",
      "offset": [
        4783,
        4804
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1139"
    },
    "4405": {
      "fn": "Storage.getIndex",
      "offset": [
        4783,
        4804
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x1621"
    },
    "4408": {
      "fn": "Storage.getIndex",
      "jump": "i",
      "offset": [
        4783,
        4804
      ],
      "op": "JUMP",
      "path": "49"
    },
    "4409": {
      "fn": "Storage.getIndex",
      "offset": [
        4783,
        4804
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "4410": {
      "op": "POP"
    },
    "4411": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 77,
      "value": "0x0"
    },
    "4413": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4414": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4415": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4416": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4840
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1"
    },
    "4418": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4840
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4419": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4840
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4420": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4840
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4421": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4840
      ],
      "op": "ADD",
      "path": "49"
    },
    "4422": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "4424": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4425": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4426": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4427": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "4429": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4430": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "DUP3",
      "path": "49"
    },
    "4431": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4432": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4850
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "4433": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP3",
      "path": "49"
    },
    "4434": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "4435": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x60"
    },
    "4437": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4438": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "ADD",
      "path": "49"
    },
    "4439": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP5",
      "path": "49"
    },
    "4440": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4441": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4856
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x2"
    },
    "4443": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4856
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4444": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4856
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4445": {
      "fn": "Storage.getIndex",
      "offset": [
        4827,
        4856
      ],
      "op": "ADD",
      "path": "49"
    },
    "4446": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4453": {
      "op": "SHL"
    },
    "4454": {
      "op": "SUB"
    },
    "4455": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP1",
      "path": "49"
    },
    "4456": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP3",
      "path": "49"
    },
    "4457": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "AND",
      "path": "49"
    },
    "4458": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP4",
      "path": "49"
    },
    "4459": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4464": {
      "op": "SHL"
    },
    "4465": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP3",
      "path": "49"
    },
    "4466": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DIV",
      "path": "49"
    },
    "4467": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "AND",
      "path": "49"
    },
    "4468": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "4469": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP3",
      "path": "49"
    },
    "4470": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "ADD",
      "path": "49"
    },
    "4471": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "4472": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4473": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "4474": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4479": {
      "op": "SHL"
    },
    "4480": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4481": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4482": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DIV",
      "path": "49"
    },
    "4483": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "4488": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "AND",
      "path": "49"
    },
    "4489": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4490": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4491": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "ADD",
      "path": "49"
    },
    "4492": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4493": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4494": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4495": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4496": {
      "fn": "Storage.getIndex",
      "offset": [
        4820,
        4856
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4497": {
      "fn": "Storage.getIndex",
      "jump": "o",
      "offset": [
        4649,
        4863
      ],
      "op": "JUMP",
      "path": "49"
    },
    "4498": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4423,
        4643
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "4499": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4560,
        4581
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x119A"
    },
    "4502": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4560,
        4581
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x160A"
    },
    "4505": {
      "fn": "Storage.getTotalPar",
      "jump": "i",
      "offset": [
        4560,
        4581
      ],
      "op": "JUMP",
      "path": "49"
    },
    "4506": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4560,
        4581
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 78,
      "value": "0x0"
    },
    "4510": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4511": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4512": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4513": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4617
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1"
    },
    "4515": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4617
      ],
      "op": "DUP1",
      "path": "49"
    },
    "4516": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4617
      ],
      "op": "DUP5",
      "path": "49"
    },
    "4517": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4617
      ],
      "op": "ADD",
      "path": "49"
    },
    "4518": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "4520": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4521": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "DUP2",
      "path": "49"
    },
    "4522": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4523": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "4525": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "4526": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "DUP4",
      "path": "49"
    },
    "4527": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4528": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4627
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "4529": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "DUP4",
      "path": "49"
    },
    "4530": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "4531": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "DUP1",
      "path": "49"
    },
    "4532": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "DUP6",
      "path": "49"
    },
    "4533": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "ADD",
      "path": "49"
    },
    "4534": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4535": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "SWAP5",
      "path": "49"
    },
    "4536": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4537": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4636
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4538": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4636
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4539": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4604,
        4636
      ],
      "op": "ADD",
      "path": "49"
    },
    "4540": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4547": {
      "op": "SHL"
    },
    "4548": {
      "op": "SUB"
    },
    "4549": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "DUP1",
      "path": "49"
    },
    "4550": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "DUP3",
      "path": "49"
    },
    "4551": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "AND",
      "path": "49"
    },
    "4552": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "DUP5",
      "path": "49"
    },
    "4553": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4558": {
      "op": "SHL"
    },
    "4559": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4560": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4561": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "DIV",
      "path": "49"
    },
    "4562": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "AND",
      "path": "49"
    },
    "4563": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "4564": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "DUP3",
      "path": "49"
    },
    "4565": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "ADD",
      "path": "49"
    },
    "4566": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4597,
        4636
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "4567": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4423,
        4643
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "4568": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4423,
        4643
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "4569": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4423,
        4643
      ],
      "op": "POP",
      "path": "49"
    },
    "4570": {
      "fn": "Storage.getTotalPar",
      "offset": [
        4423,
        4643
      ],
      "op": "POP",
      "path": "49"
    },
    "4571": {
      "fn": "Storage.getTotalPar",
      "jump": "o",
      "offset": [
        4423,
        4643
      ],
      "op": "JUMP",
      "path": "49"
    },
    "4572": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5147,
        5748
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4573": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5291,
        5307
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x11E4"
    },
    "4576": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5291,
        5307
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x160A"
    },
    "4579": {
      "fn": "Interest.totalParToWei",
      "jump": "i",
      "offset": [
        5291,
        5307
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4580": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5291,
        5307
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4581": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5309,
        5325
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x11EC"
    },
    "4584": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5309,
        5325
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x160A"
    },
    "4587": {
      "fn": "Interest.totalParToWei",
      "jump": "i",
      "offset": [
        5309,
        5325
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4588": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5309,
        5325
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4589": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5341,
        5367
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x11F4"
    },
    "4592": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5341,
        5367
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x160A"
    },
    "4595": {
      "fn": "Interest.totalParToWei",
      "jump": "i",
      "offset": [
        5341,
        5367
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4596": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5341,
        5367
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4600": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4601": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4602": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4603": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4604": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "ADD",
      "path": "45"
    },
    "4605": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4606": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4607": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4608": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5400,
        5404
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "4610": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4611": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4612": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4614": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5425,
        5440
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4615": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5425,
        5440
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4616": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5425,
        5440
      ],
      "op": "ADD",
      "path": "45"
    },
    "4617": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5425,
        5440
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4624": {
      "op": "SHL"
    },
    "4625": {
      "op": "SUB"
    },
    "4626": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "AND",
      "path": "45"
    },
    "4627": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4628": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4629": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "ADD",
      "path": "45"
    },
    "4630": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5370,
        5451
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4631": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5461,
        5487
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x121E"
    },
    "4634": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5461,
        5487
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x160A"
    },
    "4637": {
      "fn": "Interest.totalParToWei",
      "jump": "i",
      "offset": [
        5461,
        5487
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4638": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5461,
        5487
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4642": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4643": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4644": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4645": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4646": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "ADD",
      "path": "45"
    },
    "4647": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4648": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4649": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4652": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4653": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4654": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5546,
        5561
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4655": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5546,
        5561
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4662": {
      "op": "SHL"
    },
    "4663": {
      "op": "SUB"
    },
    "4664": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "AND",
      "path": "45"
    },
    "4665": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4667": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4668": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "ADD",
      "path": "45"
    },
    "4669": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5490,
        5572
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4670": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5582,
        5608
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1245"
    },
    "4673": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5582,
        5608
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x160A"
    },
    "4676": {
      "fn": "Interest.totalParToWei",
      "jump": "i",
      "offset": [
        5582,
        5608
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4677": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5582,
        5608
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4678": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5611,
        5637
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x124F"
    },
    "4681": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5620,
        5629
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4682": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5631,
        5636
      ],
      "op": "DUP8",
      "path": "45"
    },
    "4683": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5611,
        5619
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13C0"
    },
    "4686": {
      "fn": "Interest.totalParToWei",
      "jump": "i",
      "offset": [
        5611,
        5637
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4687": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5611,
        5637
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4688": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5582,
        5637
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4689": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5582,
        5637
      ],
      "op": "POP",
      "path": "45"
    },
    "4690": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5647,
        5673
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1259"
    },
    "4693": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5647,
        5673
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x160A"
    },
    "4696": {
      "fn": "Interest.totalParToWei",
      "jump": "i",
      "offset": [
        5647,
        5673
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4697": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5647,
        5673
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4698": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5676,
        5702
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1263"
    },
    "4701": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5685,
        5694
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4702": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5696,
        5701
      ],
      "op": "DUP9",
      "path": "45"
    },
    "4703": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5676,
        5684
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13C0"
    },
    "4706": {
      "fn": "Interest.totalParToWei",
      "jump": "i",
      "offset": [
        5676,
        5702
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4707": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5676,
        5702
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4708": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5720,
        5729
      ],
      "op": "SWAP2",
      "path": "45",
      "statement": 79
    },
    "4709": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5720,
        5729
      ],
      "op": "SWAP9",
      "path": "45"
    },
    "4710": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5720,
        5729
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4711": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5720,
        5729
      ],
      "op": "SWAP8",
      "path": "45"
    },
    "4712": {
      "op": "POP"
    },
    "4713": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5147,
        5748
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4714": {
      "fn": "Interest.totalParToWei",
      "offset": [
        5147,
        5748
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "4715": {
      "op": "POP"
    },
    "4716": {
      "op": "POP"
    },
    "4717": {
      "op": "POP"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "op": "POP"
    },
    "4721": {
      "fn": "Interest.totalParToWei",
      "jump": "o",
      "offset": [
        5147,
        5748
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4722": {
      "fn": "Types.sub",
      "offset": [
        4096,
        4265
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4723": {
      "fn": "Types.sub",
      "offset": [
        4206,
        4216
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x127A"
    },
    "4726": {
      "fn": "Types.sub",
      "offset": [
        4206,
        4216
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x160A"
    },
    "4729": {
      "fn": "Types.sub",
      "jump": "i",
      "offset": [
        4206,
        4216
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4730": {
      "fn": "Types.sub",
      "offset": [
        4206,
        4216
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4731": {
      "fn": "Types.sub",
      "offset": [
        4239,
        4258
      ],
      "op": "PUSH2",
      "path": "52",
      "statement": 80,
      "value": "0x7D6"
    },
    "4734": {
      "fn": "Types.sub",
      "offset": [
        4243,
        4244
      ],
      "op": "DUP4",
      "path": "52"
    },
    "4735": {
      "fn": "Types.sub",
      "offset": [
        4246,
        4257
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1287"
    },
    "4738": {
      "fn": "Types.sub",
      "offset": [
        4255,
        4256
      ],
      "op": "DUP5",
      "path": "52"
    },
    "4739": {
      "fn": "Types.sub",
      "offset": [
        4246,
        4254
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x145E"
    },
    "4742": {
      "fn": "Types.sub",
      "jump": "i",
      "offset": [
        4246,
        4257
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4743": {
      "fn": "Types.sub",
      "offset": [
        4246,
        4257
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "4744": {
      "fn": "Types.sub",
      "offset": [
        4239,
        4242
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1485"
    },
    "4747": {
      "fn": "Types.sub",
      "jump": "i",
      "offset": [
        4239,
        4258
      ],
      "op": "JUMP",
      "path": "52"
    },
    "4748": {
      "fn": "Token.checkSuccess",
      "offset": [
        3068,
        3924
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "4749": {
      "fn": "Token.checkSuccess",
      "offset": [
        3143,
        3147
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "4751": {
      "fn": "Token.checkSuccess",
      "offset": [
        3143,
        3147
      ],
      "op": "DUP1",
      "path": "51"
    },
    "4752": {
      "fn": "Token.checkSuccess",
      "offset": [
        3364,
        3378
      ],
      "op": "RETURNDATASIZE",
      "path": "51"
    },
    "4753": {
      "fn": "Token.checkSuccess",
      "offset": [
        3441,
        3498
      ],
      "op": "DUP1",
      "path": "51"
    },
    "4754": {
      "fn": "Token.checkSuccess",
      "offset": [
        3441,
        3498
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "4755": {
      "fn": "Token.checkSuccess",
      "offset": [
        3441,
        3498
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x12A3"
    },
    "4758": {
      "fn": "Token.checkSuccess",
      "offset": [
        3441,
        3498
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "4759": {
      "fn": "Token.checkSuccess",
      "offset": [
        3569,
        3573
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "4761": {
      "fn": "Token.checkSuccess",
      "offset": [
        3564,
        3784
      ],
      "op": "DUP2",
      "path": "51"
    },
    "4762": {
      "fn": "Token.checkSuccess",
      "offset": [
        3564,
        3784
      ],
      "op": "EQ",
      "path": "51"
    },
    "4763": {
      "fn": "Token.checkSuccess",
      "offset": [
        3564,
        3784
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x12AC"
    },
    "4766": {
      "fn": "Token.checkSuccess",
      "offset": [
        3564,
        3784
      ],
      "op": "JUMPI",
      "path": "51"
    },
    "4767": {
      "fn": "Token.checkSuccess",
      "offset": [
        3357,
        3874
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x12B8"
    },
    "4770": {
      "fn": "Token.checkSuccess",
      "offset": [
        3357,
        3874
      ],
      "op": "JUMP",
      "path": "51"
    },
    "4771": {
      "fn": "Token.checkSuccess",
      "offset": [
        3441,
        3498
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "4772": {
      "fn": "Token.checkSuccess",
      "offset": [
        3483,
        3484
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x1"
    },
    "4774": {
      "fn": "Token.checkSuccess",
      "offset": [
        3468,
        3484
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "4775": {
      "fn": "Token.checkSuccess",
      "offset": [
        3468,
        3484
      ],
      "op": "POP",
      "path": "51"
    },
    "4776": {
      "fn": "Token.checkSuccess",
      "offset": [
        3441,
        3498
      ],
      "op": "PUSH2",
      "path": "51",
      "value": "0x12B8"
    },
    "4779": {
      "fn": "Token.checkSuccess",
      "offset": [
        3441,
        3498
      ],
      "op": "JUMP",
      "path": "51"
    },
    "4780": {
      "fn": "Token.checkSuccess",
      "offset": [
        3564,
        3784
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "4781": {
      "fn": "Token.checkSuccess",
      "offset": [
        3669,
        3673
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x20"
    },
    "4783": {
      "fn": "Token.checkSuccess",
      "offset": [
        3664,
        3667
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "4785": {
      "fn": "Token.checkSuccess",
      "offset": [
        3659,
        3662
      ],
      "op": "DUP1",
      "path": "51"
    },
    "4786": {
      "fn": "Token.checkSuccess",
      "offset": [
        3644,
        3674
      ],
      "op": "RETURNDATACOPY",
      "path": "51"
    },
    "4787": {
      "fn": "Token.checkSuccess",
      "offset": [
        3766,
        3769
      ],
      "op": "PUSH1",
      "path": "51",
      "value": "0x0"
    },
    "4789": {
      "fn": "Token.checkSuccess",
      "offset": [
        3760,
        3770
      ],
      "op": "MLOAD",
      "path": "51"
    },
    "4790": {
      "fn": "Token.checkSuccess",
      "offset": [
        3745,
        3770
      ],
      "op": "SWAP2",
      "path": "51"
    },
    "4791": {
      "fn": "Token.checkSuccess",
      "offset": [
        3745,
        3770
      ],
      "op": "POP",
      "path": "51"
    },
    "4792": {
      "fn": "Token.checkSuccess",
      "offset": [
        3357,
        3874
      ],
      "op": "JUMPDEST",
      "path": "51"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "fn": "Token.checkSuccess",
      "offset": [
        3901,
        3917
      ],
      "op": "ISZERO",
      "path": "51",
      "statement": 81
    },
    "4795": {
      "fn": "Token.checkSuccess",
      "offset": [
        3901,
        3917
      ],
      "op": "ISZERO",
      "path": "51"
    },
    "4796": {
      "fn": "Token.checkSuccess",
      "offset": [
        3901,
        3917
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "4797": {
      "op": "POP"
    },
    "4798": {
      "fn": "Token.checkSuccess",
      "offset": [
        3068,
        3924
      ],
      "op": "SWAP1",
      "path": "51"
    },
    "4799": {
      "fn": "Token.checkSuccess",
      "jump": "o",
      "offset": [
        3068,
        3924
      ],
      "op": "JUMP",
      "path": "51"
    },
    "4800": {
      "fn": "Require.stringify",
      "offset": [
        7330,
        8242
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4801": {
      "fn": "Require.stringify",
      "offset": [
        7424,
        7436
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x60"
    },
    "4803": {
      "branch": 117,
      "fn": "Require.stringify",
      "offset": [
        7456,
        7466
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4804": {
      "fn": "Require.stringify",
      "offset": [
        7452,
        7503
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12E8"
    },
    "4807": {
      "branch": 117,
      "fn": "Require.stringify",
      "offset": [
        7452,
        7503
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4808": {
      "op": "POP"
    },
    "4809": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 82,
      "value": "0x40"
    },
    "4811": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4812": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4813": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4814": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4815": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "ADD",
      "path": "48"
    },
    "4816": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4817": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4818": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4819": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "4821": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4822": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "4827": {
      "op": "SHL"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4830": {
      "op": "MUL"
    },
    "4831": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4833": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4834": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "ADD",
      "path": "48"
    },
    "4835": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4836": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEE5"
    },
    "4839": {
      "fn": "Require.stringify",
      "offset": [
        7482,
        7492
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4840": {
      "fn": "Require.stringify",
      "offset": [
        7452,
        7503
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4841": {
      "fn": "Require.stringify",
      "offset": [
        7564,
        7569
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4842": {
      "fn": "Require.stringify",
      "offset": [
        7552,
        7561
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "4844": {
      "fn": "Require.stringify",
      "offset": [
        7603,
        7672
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4845": {
      "fn": "Require.stringify",
      "offset": [
        7610,
        7616
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4846": {
      "fn": "Require.stringify",
      "offset": [
        7610,
        7616
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4847": {
      "fn": "Require.stringify",
      "offset": [
        7603,
        7672
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1300"
    },
    "4850": {
      "fn": "Require.stringify",
      "offset": [
        7603,
        7672
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4851": {
      "fn": "Require.stringify",
      "offset": [
        7632,
        7640
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 83,
      "value": "0x1"
    },
    "4853": {
      "fn": "Require.stringify",
      "offset": [
        7632,
        7640
      ],
      "op": "ADD",
      "path": "48"
    },
    "4854": {
      "fn": "Require.stringify",
      "offset": [
        7659,
        7661
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 84,
      "value": "0xA"
    },
    "4856": {
      "fn": "Require.stringify",
      "offset": [
        7654,
        7661
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4857": {
      "fn": "Require.stringify",
      "offset": [
        7654,
        7661
      ],
      "op": "DIV",
      "path": "48"
    },
    "4858": {
      "fn": "Require.stringify",
      "offset": [
        7654,
        7661
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4859": {
      "fn": "Require.stringify",
      "offset": [
        7654,
        7661
      ],
      "op": "POP",
      "path": "48"
    },
    "4860": {
      "fn": "Require.stringify",
      "offset": [
        7603,
        7672
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12EC"
    },
    "4863": {
      "fn": "Require.stringify",
      "offset": [
        7603,
        7672
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4864": {
      "fn": "Require.stringify",
      "offset": [
        7603,
        7672
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4865": {
      "fn": "Require.stringify",
      "offset": [
        7713,
        7730
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x60"
    },
    "4867": {
      "fn": "Require.stringify",
      "offset": [
        7743,
        7749
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4868": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4870": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4871": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4872": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4873": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4874": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4875": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4876": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1F"
    },
    "4878": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "ADD",
      "path": "48"
    },
    "4879": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1F"
    },
    "4881": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "NOT",
      "path": "48"
    },
    "4882": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "AND",
      "path": "48"
    },
    "4883": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4885": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "ADD",
      "path": "48"
    },
    "4886": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4887": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "ADD",
      "path": "48"
    },
    "4888": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4890": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4891": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4892": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4893": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x132D"
    },
    "4896": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4897": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4899": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4900": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "ADD",
      "path": "48"
    },
    "4901": {
      "op": "DUP2"
    },
    "4902": {
      "op": "DUP1"
    },
    "4903": {
      "op": "CODESIZE"
    },
    "4904": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4905": {
      "op": "CODECOPY"
    },
    "4906": {
      "op": "ADD"
    },
    "4907": {
      "op": "SWAP1"
    },
    "4908": {
      "op": "POP"
    },
    "4909": {
      "fn": "Require.stringify",
      "offset": [
        7733,
        7750
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4910": {
      "op": "POP"
    },
    "4911": {
      "fn": "Require.stringify",
      "offset": [
        7842,
        7847
      ],
      "op": "DUP6",
      "path": "48",
      "statement": 85
    },
    "4912": {
      "fn": "Require.stringify",
      "offset": [
        7842,
        7847
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "4913": {
      "op": "POP"
    },
    "4914": {
      "fn": "Require.stringify",
      "offset": [
        7713,
        7750
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4915": {
      "op": "POP"
    },
    "4916": {
      "fn": "Require.stringify",
      "offset": [
        7874,
        7880
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4917": {
      "fn": "Require.stringify",
      "offset": [
        7857,
        8214
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4918": {
      "fn": "Require.stringify",
      "offset": [
        7882,
        7887
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4919": {
      "fn": "Require.stringify",
      "offset": [
        7882,
        7887
      ],
      "op": "ISZERO",
      "path": "48"
    },
    "4920": {
      "fn": "Require.stringify",
      "offset": [
        7857,
        8214
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1377"
    },
    "4923": {
      "fn": "Require.stringify",
      "offset": [
        7857,
        8214
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4926": {
      "op": "NOT"
    },
    "4927": {
      "fn": "Require.stringify",
      "offset": [
        8035,
        8038
      ],
      "op": "ADD",
      "path": "48",
      "statement": 86
    },
    "4928": {
      "fn": "Require.stringify",
      "offset": [
        8131,
        8133
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 87,
      "value": "0xA"
    },
    "4930": {
      "fn": "Require.stringify",
      "offset": [
        8127,
        8128
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4931": {
      "fn": "Require.stringify",
      "offset": [
        8127,
        8133
      ],
      "op": "MOD",
      "path": "48"
    },
    "4932": {
      "offset": [
        901,
        903
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x30"
    },
    "4934": {
      "fn": "Require.stringify",
      "offset": [
        8113,
        8134
      ],
      "op": "ADD",
      "path": "48"
    },
    "4935": {
      "fn": "Require.stringify",
      "offset": [
        8102,
        8136
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0xF8"
    },
    "4937": {
      "fn": "Require.stringify",
      "offset": [
        8102,
        8136
      ],
      "op": "SHL",
      "path": "48"
    },
    "4938": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8096
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4939": {
      "fn": "Require.stringify",
      "offset": [
        8097,
        8098
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4940": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4941": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4942": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4943": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "LT",
      "path": "48"
    },
    "4944": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1355"
    },
    "4947": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "JUMPI",
      "path": "48"
    },
    "4948": {
      "dev": "Index out of range",
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "INVALID",
      "path": "48"
    },
    "4949": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4950": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4952": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "ADD",
      "path": "48"
    },
    "4953": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8099
      ],
      "op": "ADD",
      "path": "48"
    },
    "4954": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4961": {
      "op": "SHL"
    },
    "4962": {
      "op": "SUB"
    },
    "4963": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "NOT",
      "path": "48"
    },
    "4964": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "AND",
      "path": "48"
    },
    "4965": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4966": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4967": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "4969": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "BYTE",
      "path": "48"
    },
    "4970": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4971": {
      "fn": "Require.stringify",
      "offset": [
        8092,
        8136
      ],
      "op": "MSTORE8",
      "path": "48"
    },
    "4972": {
      "op": "POP"
    },
    "4973": {
      "fn": "Require.stringify",
      "offset": [
        8201,
        8203
      ],
      "op": "PUSH1",
      "path": "48",
      "statement": 88,
      "value": "0xA"
    },
    "4975": {
      "fn": "Require.stringify",
      "offset": [
        8196,
        8203
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4976": {
      "fn": "Require.stringify",
      "offset": [
        8196,
        8203
      ],
      "op": "DIV",
      "path": "48"
    },
    "4977": {
      "fn": "Require.stringify",
      "offset": [
        8196,
        8203
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "4978": {
      "fn": "Require.stringify",
      "offset": [
        8196,
        8203
      ],
      "op": "POP",
      "path": "48"
    },
    "4979": {
      "fn": "Require.stringify",
      "offset": [
        7857,
        8214
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1335"
    },
    "4982": {
      "fn": "Require.stringify",
      "offset": [
        7857,
        8214
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4983": {
      "fn": "Require.stringify",
      "offset": [
        7857,
        8214
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4984": {
      "op": "POP"
    },
    "4985": {
      "fn": "Require.stringify",
      "offset": [
        8231,
        8235
      ],
      "op": "SWAP5",
      "path": "48",
      "statement": 89
    },
    "4986": {
      "fn": "Require.stringify",
      "offset": [
        7330,
        8242
      ],
      "op": "SWAP4",
      "path": "48"
    },
    "4987": {
      "op": "POP"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "POP"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "fn": "Require.stringify",
      "jump": "o",
      "offset": [
        7330,
        8242
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4992": {
      "fn": "Math.to32",
      "offset": [
        2444,
        2734
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4993": {
      "fn": "Math.to32",
      "offset": [
        2535,
        2541
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4995": {
      "fn": "Math.to32",
      "offset": [
        2580,
        2586
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4996": {
      "fn": "Math.to32",
      "offset": [
        2597,
        2704
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 90,
      "value": "0xEE2"
    },
    "4999": {
      "fn": "Math.to32",
      "offset": [
        2623,
        2639
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5004": {
      "fn": "Math.to32",
      "offset": [
        2623,
        2639
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5005": {
      "fn": "Math.to32",
      "offset": [
        2623,
        2639
      ],
      "op": "AND",
      "path": "46"
    },
    "5006": {
      "fn": "Math.to32",
      "offset": [
        2623,
        2639
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5007": {
      "fn": "Math.to32",
      "offset": [
        2623,
        2639
      ],
      "op": "EQ",
      "path": "46"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5012": {
      "op": "SHL"
    },
    "5013": {
      "op": "PUSH4",
      "value": "0x9AC2E8D"
    },
    "5018": {
      "op": "MUL"
    },
    "5019": {
      "fn": "Math.to32",
      "offset": [
        2597,
        2704
      ],
      "op": "PUSH32",
      "path": "46",
      "value": "0x556E73616665206361737420746F2075696E7433320000000000000000000000"
    },
    "5052": {
      "fn": "Math.to32",
      "offset": [
        2597,
        2609
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x943"
    },
    "5055": {
      "fn": "Math.to32",
      "jump": "i",
      "offset": [
        2597,
        2704
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5056": {
      "fn": "Interest.parToWei",
      "offset": [
        3844,
        4396
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5057": {
      "fn": "Interest.parToWei",
      "offset": [
        3975,
        3991
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13C8"
    },
    "5060": {
      "fn": "Interest.parToWei",
      "offset": [
        3975,
        3991
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x160A"
    },
    "5063": {
      "fn": "Interest.parToWei",
      "jump": "i",
      "offset": [
        3975,
        3991
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5064": {
      "fn": "Interest.parToWei",
      "offset": [
        3975,
        3991
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5065": {
      "fn": "Interest.parToWei",
      "offset": [
        4036,
        4047
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5067": {
      "fn": "Interest.parToWei",
      "offset": [
        4036,
        4047
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5068": {
      "fn": "Interest.parToWei",
      "offset": [
        4036,
        4047
      ],
      "op": "ADD",
      "path": "45"
    },
    "5069": {
      "fn": "Interest.parToWei",
      "offset": [
        4036,
        4047
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5070": {
      "fn": "Interest.parToWei",
      "offset": [
        4062,
        4072
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5071": {
      "branch": 111,
      "fn": "Interest.parToWei",
      "offset": [
        4062,
        4072
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5078": {
      "op": "SHL"
    },
    "5079": {
      "op": "SUB"
    },
    "5080": {
      "fn": "Interest.parToWei",
      "offset": [
        4028,
        4048
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5081": {
      "fn": "Interest.parToWei",
      "offset": [
        4028,
        4048
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5082": {
      "fn": "Interest.parToWei",
      "offset": [
        4028,
        4048
      ],
      "op": "AND",
      "path": "45"
    },
    "5083": {
      "fn": "Interest.parToWei",
      "offset": [
        4028,
        4048
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5084": {
      "fn": "Interest.parToWei",
      "offset": [
        4058,
        4390
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "5085": {
      "fn": "Interest.parToWei",
      "offset": [
        4058,
        4390
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1426"
    },
    "5088": {
      "branch": 111,
      "fn": "Interest.parToWei",
      "offset": [
        4058,
        4390
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "5089": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 91,
      "value": "0x40"
    },
    "5091": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5092": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5093": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5094": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5095": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "ADD",
      "path": "45"
    },
    "5096": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5097": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5098": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5099": {
      "fn": "Interest.parToWei",
      "offset": [
        4129,
        4133
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "5101": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5102": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5103": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5105": {
      "fn": "Interest.parToWei",
      "offset": [
        4180,
        4192
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5106": {
      "fn": "Interest.parToWei",
      "offset": [
        4180,
        4192
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5107": {
      "fn": "Interest.parToWei",
      "offset": [
        4180,
        4192
      ],
      "op": "ADD",
      "path": "45"
    },
    "5108": {
      "fn": "Interest.parToWei",
      "offset": [
        4180,
        4192
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5109": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5110": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5111": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "ADD",
      "path": "45"
    },
    "5112": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5113": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4199
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x141B"
    },
    "5116": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4199
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5117": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4168
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5118": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4168
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5125": {
      "op": "SHL"
    },
    "5126": {
      "op": "SUB"
    },
    "5127": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4199
      ],
      "op": "AND",
      "path": "45"
    },
    "5128": {
      "offset": [
        1197,
        1203
      ],
      "op": "PUSH8",
      "path": "45",
      "value": "0xDE0B6B3A7640000"
    },
    "5137": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4199
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "5142": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4179
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1517"
    },
    "5145": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4199
      ],
      "op": "AND",
      "path": "45"
    },
    "5146": {
      "fn": "Interest.parToWei",
      "jump": "i",
      "offset": [
        4158,
        4199
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5147": {
      "fn": "Interest.parToWei",
      "offset": [
        4158,
        4199
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5148": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5149": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5150": {
      "fn": "Interest.parToWei",
      "offset": [
        4095,
        4214
      ],
      "op": "POP",
      "path": "45"
    },
    "5151": {
      "fn": "Interest.parToWei",
      "offset": [
        4088,
        4214
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5152": {
      "fn": "Interest.parToWei",
      "offset": [
        4088,
        4214
      ],
      "op": "POP",
      "path": "45"
    },
    "5153": {
      "fn": "Interest.parToWei",
      "offset": [
        4088,
        4214
      ],
      "op": "POP",
      "path": "45"
    },
    "5154": {
      "fn": "Interest.parToWei",
      "offset": [
        4088,
        4214
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xEC6"
    },
    "5157": {
      "fn": "Interest.parToWei",
      "offset": [
        4088,
        4214
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5158": {
      "fn": "Interest.parToWei",
      "offset": [
        4058,
        4390
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5159": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 92,
      "value": "0x40"
    },
    "5161": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5162": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5163": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5164": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5165": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "ADD",
      "path": "45"
    },
    "5166": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5167": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5168": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5171": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5172": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5173": {
      "fn": "Interest.parToWei",
      "offset": [
        4345,
        4357
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5174": {
      "fn": "Interest.parToWei",
      "offset": [
        4345,
        4357
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5175": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5177": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5178": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "ADD",
      "path": "45"
    },
    "5179": {
      "fn": "Interest.parToWei",
      "offset": [
        4252,
        4379
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5180": {
      "fn": "Interest.parToWei",
      "offset": [
        4316,
        4364
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x141B"
    },
    "5183": {
      "fn": "Interest.parToWei",
      "offset": [
        4316,
        4364
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5184": {
      "fn": "Interest.parToWei",
      "offset": [
        4316,
        4326
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5185": {
      "fn": "Interest.parToWei",
      "offset": [
        4316,
        4326
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5192": {
      "op": "SHL"
    },
    "5193": {
      "op": "SUB"
    },
    "5194": {
      "fn": "Interest.parToWei",
      "offset": [
        4316,
        4364
      ],
      "op": "AND",
      "path": "45"
    },
    "5195": {
      "offset": [
        1197,
        1203
      ],
      "op": "PUSH8",
      "path": "45",
      "value": "0xDE0B6B3A7640000"
    },
    "5204": {
      "fn": "Interest.parToWei",
      "offset": [
        4316,
        4364
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "5209": {
      "fn": "Interest.parToWei",
      "offset": [
        4316,
        4344
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1541"
    },
    "5212": {
      "fn": "Interest.parToWei",
      "offset": [
        4316,
        4364
      ],
      "op": "AND",
      "path": "45"
    },
    "5213": {
      "fn": "Interest.parToWei",
      "jump": "i",
      "offset": [
        4316,
        4364
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5214": {
      "fn": "Types.negative",
      "offset": [
        5201,
        5404
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5215": {
      "fn": "Types.negative",
      "offset": [
        5294,
        5304
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1466"
    },
    "5218": {
      "fn": "Types.negative",
      "offset": [
        5294,
        5304
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x160A"
    },
    "5221": {
      "fn": "Types.negative",
      "jump": "i",
      "offset": [
        5294,
        5304
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5222": {
      "fn": "Types.negative",
      "offset": [
        5294,
        5304
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5223": {
      "op": "POP"
    },
    "5224": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 93,
      "value": "0x40"
    },
    "5226": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5227": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5228": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5229": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5230": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "ADD",
      "path": "52"
    },
    "5231": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5232": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5233": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5234": {
      "fn": "Types.negative",
      "offset": [
        5352,
        5358
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5235": {
      "fn": "Types.negative",
      "offset": [
        5352,
        5358
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5236": {
      "fn": "Types.negative",
      "offset": [
        5351,
        5358
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5237": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5238": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5239": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5241": {
      "fn": "Types.negative",
      "offset": [
        5379,
        5386
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5242": {
      "fn": "Types.negative",
      "offset": [
        5379,
        5386
      ],
      "op": "DUP4",
      "path": "52"
    },
    "5243": {
      "fn": "Types.negative",
      "offset": [
        5379,
        5386
      ],
      "op": "ADD",
      "path": "52"
    },
    "5244": {
      "fn": "Types.negative",
      "offset": [
        5379,
        5386
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5245": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5246": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5247": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "ADD",
      "path": "52"
    },
    "5248": {
      "fn": "Types.negative",
      "offset": [
        5327,
        5397
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5249": {
      "fn": "Types.negative",
      "offset": [
        5201,
        5404
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5250": {
      "fn": "Types.negative",
      "offset": [
        5201,
        5404
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5251": {
      "fn": "Types.negative",
      "offset": [
        5201,
        5404
      ],
      "op": "POP",
      "path": "52"
    },
    "5252": {
      "fn": "Types.negative",
      "jump": "o",
      "offset": [
        5201,
        5404
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5253": {
      "fn": "Types.add",
      "offset": [
        4271,
        4881
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5254": {
      "fn": "Types.add",
      "offset": [
        4381,
        4391
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x148D"
    },
    "5257": {
      "fn": "Types.add",
      "offset": [
        4381,
        4391
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x160A"
    },
    "5260": {
      "fn": "Types.add",
      "jump": "i",
      "offset": [
        4381,
        4391
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5261": {
      "fn": "Types.add",
      "offset": [
        4381,
        4391
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5262": {
      "fn": "Types.add",
      "offset": [
        4407,
        4424
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x1495"
    },
    "5265": {
      "fn": "Types.add",
      "offset": [
        4407,
        4424
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x160A"
    },
    "5268": {
      "fn": "Types.add",
      "jump": "i",
      "offset": [
        4407,
        4424
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5269": {
      "fn": "Types.add",
      "offset": [
        4407,
        4424
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5270": {
      "fn": "Types.add",
      "offset": [
        4448,
        4454
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5271": {
      "fn": "Types.add",
      "offset": [
        4448,
        4454
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5272": {
      "fn": "Types.add",
      "offset": [
        4438,
        4444
      ],
      "op": "DUP5",
      "path": "52"
    },
    "5273": {
      "fn": "Types.add",
      "offset": [
        4438,
        4444
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5274": {
      "fn": "Types.add",
      "offset": [
        4438,
        4454
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5275": {
      "fn": "Types.add",
      "offset": [
        4438,
        4454
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5276": {
      "fn": "Types.add",
      "offset": [
        4438,
        4454
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5277": {
      "fn": "Types.add",
      "offset": [
        4438,
        4454
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5278": {
      "fn": "Types.add",
      "offset": [
        4438,
        4454
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5279": {
      "branch": 125,
      "fn": "Types.add",
      "offset": [
        4438,
        4454
      ],
      "op": "EQ",
      "path": "52"
    },
    "5280": {
      "fn": "Types.add",
      "offset": [
        4434,
        4852
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5281": {
      "fn": "Types.add",
      "offset": [
        4434,
        4852
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x14C8"
    },
    "5284": {
      "branch": 125,
      "fn": "Types.add",
      "offset": [
        4434,
        4852
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5285": {
      "fn": "Types.add",
      "offset": [
        4484,
        4490
      ],
      "op": "DUP4",
      "path": "52",
      "statement": 94
    },
    "5286": {
      "fn": "Types.add",
      "offset": [
        4484,
        4490
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5287": {
      "fn": "Types.add",
      "offset": [
        4470,
        4490
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5288": {
      "fn": "Types.add",
      "offset": [
        4470,
        4490
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5289": {
      "fn": "Types.add",
      "offset": [
        4470,
        4490
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5290": {
      "fn": "Types.add",
      "offset": [
        4470,
        4490
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5291": {
      "fn": "Types.add",
      "offset": [
        4532,
        4539
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 95,
      "value": "0x20"
    },
    "5293": {
      "fn": "Types.add",
      "offset": [
        4532,
        4539
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5294": {
      "fn": "Types.add",
      "offset": [
        4532,
        4539
      ],
      "op": "DUP6",
      "path": "52"
    },
    "5295": {
      "fn": "Types.add",
      "offset": [
        4532,
        4539
      ],
      "op": "ADD",
      "path": "52"
    },
    "5296": {
      "fn": "Types.add",
      "offset": [
        4532,
        4539
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5297": {
      "fn": "Types.add",
      "offset": [
        4541,
        4548
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5298": {
      "fn": "Types.add",
      "offset": [
        4541,
        4548
      ],
      "op": "DUP5",
      "path": "52"
    },
    "5299": {
      "fn": "Types.add",
      "offset": [
        4541,
        4548
      ],
      "op": "ADD",
      "path": "52"
    },
    "5300": {
      "fn": "Types.add",
      "offset": [
        4541,
        4548
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5301": {
      "fn": "Types.add",
      "offset": [
        4519,
        4549
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x14BE"
    },
    "5304": {
      "fn": "Types.add",
      "offset": [
        4519,
        4549
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5305": {
      "fn": "Types.add",
      "offset": [
        4532,
        4539
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5306": {
      "fn": "Types.add",
      "offset": [
        4519,
        4531
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x159A"
    },
    "5309": {
      "fn": "Types.add",
      "jump": "i",
      "offset": [
        4519,
        4549
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5310": {
      "fn": "Types.add",
      "offset": [
        4519,
        4549
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5311": {
      "fn": "Types.add",
      "offset": [
        4504,
        4516
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5313": {
      "fn": "Types.add",
      "offset": [
        4504,
        4516
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5314": {
      "fn": "Types.add",
      "offset": [
        4504,
        4516
      ],
      "op": "ADD",
      "path": "52"
    },
    "5315": {
      "fn": "Types.add",
      "offset": [
        4504,
        4549
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5316": {
      "fn": "Types.add",
      "offset": [
        4434,
        4852
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x7D6"
    },
    "5319": {
      "fn": "Types.add",
      "offset": [
        4434,
        4852
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5320": {
      "fn": "Types.add",
      "offset": [
        4434,
        4852
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5321": {
      "fn": "Types.add",
      "offset": [
        4595,
        4596
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5322": {
      "fn": "Types.add",
      "offset": [
        4595,
        4602
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5324": {
      "fn": "Types.add",
      "offset": [
        4595,
        4602
      ],
      "op": "ADD",
      "path": "52"
    },
    "5325": {
      "fn": "Types.add",
      "offset": [
        4595,
        4602
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5326": {
      "fn": "Types.add",
      "offset": [
        4584,
        4585
      ],
      "op": "DUP5",
      "path": "52"
    },
    "5327": {
      "fn": "Types.add",
      "offset": [
        4584,
        4591
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5329": {
      "fn": "Types.add",
      "offset": [
        4584,
        4591
      ],
      "op": "ADD",
      "path": "52"
    },
    "5330": {
      "fn": "Types.add",
      "offset": [
        4584,
        4591
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5331": {
      "branch": 126,
      "fn": "Types.add",
      "offset": [
        4584,
        4602
      ],
      "op": "LT",
      "path": "52"
    },
    "5332": {
      "fn": "Types.add",
      "offset": [
        4580,
        4842
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x14F1"
    },
    "5335": {
      "branch": 126,
      "fn": "Types.add",
      "offset": [
        4580,
        4842
      ],
      "op": "JUMPI",
      "path": "52"
    },
    "5336": {
      "fn": "Types.add",
      "offset": [
        4636,
        4642
      ],
      "op": "DUP4",
      "path": "52",
      "statement": 96
    },
    "5337": {
      "fn": "Types.add",
      "offset": [
        4636,
        4642
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5338": {
      "fn": "Types.add",
      "offset": [
        4622,
        4642
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5339": {
      "fn": "Types.add",
      "offset": [
        4622,
        4642
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5340": {
      "fn": "Types.add",
      "offset": [
        4622,
        4642
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5341": {
      "fn": "Types.add",
      "offset": [
        4622,
        4642
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5342": {
      "fn": "Types.add",
      "offset": [
        4688,
        4695
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 97,
      "value": "0x20"
    },
    "5344": {
      "fn": "Types.add",
      "offset": [
        4688,
        4695
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5345": {
      "fn": "Types.add",
      "offset": [
        4688,
        4695
      ],
      "op": "DUP6",
      "path": "52"
    },
    "5346": {
      "fn": "Types.add",
      "offset": [
        4688,
        4695
      ],
      "op": "ADD",
      "path": "52"
    },
    "5347": {
      "fn": "Types.add",
      "offset": [
        4688,
        4695
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5348": {
      "fn": "Types.add",
      "offset": [
        4697,
        4704
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5349": {
      "fn": "Types.add",
      "offset": [
        4697,
        4704
      ],
      "op": "DUP5",
      "path": "52"
    },
    "5350": {
      "fn": "Types.add",
      "offset": [
        4697,
        4704
      ],
      "op": "ADD",
      "path": "52"
    },
    "5351": {
      "fn": "Types.add",
      "offset": [
        4697,
        4704
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5352": {
      "fn": "Types.add",
      "offset": [
        4675,
        4705
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x14BE"
    },
    "5355": {
      "fn": "Types.add",
      "offset": [
        4675,
        4705
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5356": {
      "fn": "Types.add",
      "offset": [
        4688,
        4695
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5357": {
      "fn": "Types.add",
      "offset": [
        4675,
        4687
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15AC"
    },
    "5360": {
      "fn": "Types.add",
      "jump": "i",
      "offset": [
        4675,
        4705
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5361": {
      "fn": "Types.add",
      "offset": [
        4580,
        4842
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5362": {
      "fn": "Types.add",
      "offset": [
        4758,
        4764
      ],
      "op": "DUP3",
      "path": "52",
      "statement": 98
    },
    "5363": {
      "fn": "Types.add",
      "offset": [
        4758,
        4764
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5364": {
      "fn": "Types.add",
      "offset": [
        4744,
        4764
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5365": {
      "fn": "Types.add",
      "offset": [
        4744,
        4764
      ],
      "op": "ISZERO",
      "path": "52"
    },
    "5366": {
      "fn": "Types.add",
      "offset": [
        4744,
        4764
      ],
      "op": "DUP2",
      "path": "52"
    },
    "5367": {
      "fn": "Types.add",
      "offset": [
        4744,
        4764
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5368": {
      "fn": "Types.add",
      "offset": [
        4810,
        4817
      ],
      "op": "PUSH1",
      "path": "52",
      "statement": 99,
      "value": "0x20"
    },
    "5370": {
      "fn": "Types.add",
      "offset": [
        4810,
        4817
      ],
      "op": "DUP1",
      "path": "52"
    },
    "5371": {
      "fn": "Types.add",
      "offset": [
        4810,
        4817
      ],
      "op": "DUP5",
      "path": "52"
    },
    "5372": {
      "fn": "Types.add",
      "offset": [
        4810,
        4817
      ],
      "op": "ADD",
      "path": "52"
    },
    "5373": {
      "fn": "Types.add",
      "offset": [
        4810,
        4817
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5374": {
      "fn": "Types.add",
      "offset": [
        4819,
        4826
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5375": {
      "fn": "Types.add",
      "offset": [
        4819,
        4826
      ],
      "op": "DUP6",
      "path": "52"
    },
    "5376": {
      "fn": "Types.add",
      "offset": [
        4819,
        4826
      ],
      "op": "ADD",
      "path": "52"
    },
    "5377": {
      "fn": "Types.add",
      "offset": [
        4819,
        4826
      ],
      "op": "MLOAD",
      "path": "52"
    },
    "5378": {
      "fn": "Types.add",
      "offset": [
        4797,
        4827
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x150B"
    },
    "5381": {
      "fn": "Types.add",
      "offset": [
        4797,
        4827
      ],
      "op": "SWAP2",
      "path": "52"
    },
    "5382": {
      "fn": "Types.add",
      "offset": [
        4810,
        4817
      ],
      "op": "SWAP1",
      "path": "52"
    },
    "5383": {
      "fn": "Types.add",
      "offset": [
        4797,
        4809
      ],
      "op": "PUSH2",
      "path": "52",
      "value": "0x15AC"
    },
    "5386": {
      "fn": "Types.add",
      "jump": "i",
      "offset": [
        4797,
        4827
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5387": {
      "fn": "Types.add",
      "offset": [
        4797,
        4827
      ],
      "op": "JUMPDEST",
      "path": "52"
    },
    "5388": {
      "fn": "Types.add",
      "offset": [
        4782,
        4794
      ],
      "op": "PUSH1",
      "path": "52",
      "value": "0x20"
    },
    "5390": {
      "fn": "Types.add",
      "offset": [
        4782,
        4794
      ],
      "op": "DUP3",
      "path": "52"
    },
    "5391": {
      "fn": "Types.add",
      "offset": [
        4782,
        4794
      ],
      "op": "ADD",
      "path": "52"
    },
    "5392": {
      "fn": "Types.add",
      "offset": [
        4782,
        4827
      ],
      "op": "MSTORE",
      "path": "52"
    },
    "5393": {
      "fn": "Types.add",
      "offset": [
        4868,
        4874
      ],
      "op": "SWAP4",
      "path": "52",
      "statement": 100
    },
    "5394": {
      "fn": "Types.add",
      "offset": [
        4271,
        4881
      ],
      "op": "SWAP3",
      "path": "52"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "fn": "Types.add",
      "jump": "o",
      "offset": [
        4271,
        4881
      ],
      "op": "JUMP",
      "path": "52"
    },
    "5399": {
      "fn": "Math.getPartial",
      "offset": [
        1117,
        1345
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5400": {
      "fn": "Math.getPartial",
      "offset": [
        1270,
        1277
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5402": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1338
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 101,
      "value": "0x1539"
    },
    "5405": {
      "fn": "Math.getPartial",
      "offset": [
        1326,
        1337
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5406": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1321
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x152D"
    },
    "5409": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1306
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5410": {
      "fn": "Math.getPartial",
      "offset": [
        1311,
        1320
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5411": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1321
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5416": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1310
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15C1"
    },
    "5419": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1321
      ],
      "op": "AND",
      "path": "46"
    },
    "5420": {
      "fn": "Math.getPartial",
      "jump": "i",
      "offset": [
        1300,
        1321
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5421": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1321
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5422": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1325
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5423": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1338
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5428": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1325
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15E8"
    },
    "5431": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1338
      ],
      "op": "AND",
      "path": "46"
    },
    "5432": {
      "fn": "Math.getPartial",
      "jump": "i",
      "offset": [
        1300,
        1338
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5433": {
      "fn": "Math.getPartial",
      "offset": [
        1300,
        1338
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5434": {
      "fn": "Math.getPartial",
      "offset": [
        1293,
        1338
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "5435": {
      "fn": "Math.getPartial",
      "offset": [
        1117,
        1345
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "op": "POP"
    },
    "5439": {
      "op": "POP"
    },
    "5440": {
      "fn": "Math.getPartial",
      "jump": "o",
      "offset": [
        1117,
        1345
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5441": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1432,
        1841
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5442": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1592,
        1599
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5444": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1619,
        1630
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5445": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1619,
        1630
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5446": {
      "branch": 112,
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1619,
        1630
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5447": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1619,
        1648
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x154E"
    },
    "5450": {
      "branch": 112,
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1619,
        1648
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5451": {
      "op": "POP"
    },
    "5452": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1634,
        1648
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5453": {
      "branch": 113,
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1634,
        1648
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5454": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1619,
        1648
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5455": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1615,
        1766
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5456": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1615,
        1766
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1565"
    },
    "5459": {
      "branch": 113,
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1615,
        1766
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5460": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1727,
        1755
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 102,
      "value": "0x155E"
    },
    "5463": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1740,
        1741
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5465": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1743,
        1754
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5466": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1727,
        1739
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15E8"
    },
    "5469": {
      "fn": "Math.getPartialRoundUp",
      "jump": "i",
      "offset": [
        1727,
        1755
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5470": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1727,
        1755
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5471": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1720,
        1755
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5472": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1720,
        1755
      ],
      "op": "POP",
      "path": "46"
    },
    "5473": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1720,
        1755
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7D6"
    },
    "5476": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1720,
        1755
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5477": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1615,
        1766
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5478": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1834
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 103,
      "value": "0x1539"
    },
    "5481": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1832,
        1833
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "5483": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1827
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x158E"
    },
    "5486": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1815,
        1826
      ],
      "op": "DUP5",
      "path": "46"
    },
    "5487": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1810
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x152D"
    },
    "5490": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1832,
        1833
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5491": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1803
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1582"
    },
    "5494": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1788
      ],
      "op": "DUP11",
      "path": "46"
    },
    "5495": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1793,
        1802
      ],
      "op": "DUP11",
      "path": "46"
    },
    "5496": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1803
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5501": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1792
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15C1"
    },
    "5504": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1803
      ],
      "op": "AND",
      "path": "46"
    },
    "5505": {
      "fn": "Math.getPartialRoundUp",
      "jump": "i",
      "offset": [
        1782,
        1803
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5506": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1803
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5507": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1807
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5508": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1810
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5513": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1807
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15AC"
    },
    "5516": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1810
      ],
      "op": "AND",
      "path": "46"
    },
    "5517": {
      "fn": "Math.getPartialRoundUp",
      "jump": "i",
      "offset": [
        1782,
        1810
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5518": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1827
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5519": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5520": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1834
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5525": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x159A"
    },
    "5528": {
      "fn": "Math.getPartialRoundUp",
      "offset": [
        1782,
        1834
      ],
      "op": "AND",
      "path": "46"
    },
    "5529": {
      "fn": "Math.getPartialRoundUp",
      "jump": "i",
      "offset": [
        1782,
        1834
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5530": {
      "fn": "SafeMath.add",
      "offset": [
        1431,
        1576
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5531": {
      "fn": "SafeMath.add",
      "offset": [
        1489,
        1496
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5533": {
      "fn": "SafeMath.add",
      "offset": [
        1520,
        1525
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5534": {
      "fn": "SafeMath.add",
      "offset": [
        1520,
        1525
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5535": {
      "fn": "SafeMath.add",
      "offset": [
        1520,
        1525
      ],
      "op": "ADD",
      "path": "75"
    },
    "5536": {
      "fn": "SafeMath.add",
      "offset": [
        1543,
        1549
      ],
      "op": "DUP4",
      "path": "75",
      "statement": 104
    },
    "5537": {
      "fn": "SafeMath.add",
      "offset": [
        1543,
        1549
      ],
      "op": "DUP2",
      "path": "75"
    },
    "5538": {
      "fn": "SafeMath.add",
      "offset": [
        1543,
        1549
      ],
      "op": "LT",
      "path": "75"
    },
    "5539": {
      "branch": 118,
      "fn": "SafeMath.add",
      "offset": [
        1543,
        1549
      ],
      "op": "ISZERO",
      "path": "75"
    },
    "5540": {
      "fn": "SafeMath.add",
      "offset": [
        1535,
        1550
      ],
      "op": "PUSH2",
      "path": "75",
      "value": "0x7D6"
    },
    "5543": {
      "branch": 118,
      "fn": "SafeMath.add",
      "offset": [
        1535,
        1550
      ],
      "op": "JUMPI",
      "path": "75"
    },
    "5544": {
      "fn": "SafeMath.add",
      "offset": [
        1535,
        1550
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5546": {
      "fn": "SafeMath.add",
      "offset": [
        1535,
        1550
      ],
      "op": "DUP1",
      "path": "75"
    },
    "5547": {
      "fn": "SafeMath.add",
      "offset": [
        1535,
        1550
      ],
      "op": "REVERT",
      "path": "75"
    },
    "5548": {
      "fn": "SafeMath.sub",
      "offset": [
        1205,
        1350
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5549": {
      "fn": "SafeMath.sub",
      "offset": [
        1263,
        1270
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5551": {
      "fn": "SafeMath.sub",
      "offset": [
        1295,
        1296
      ],
      "op": "DUP3",
      "path": "75",
      "statement": 105
    },
    "5552": {
      "fn": "SafeMath.sub",
      "offset": [
        1290,
        1291
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5553": {
      "fn": "SafeMath.sub",
      "offset": [
        1290,
        1296
      ],
      "op": "GT",
      "path": "75"
    },
    "5554": {
      "branch": 119,
      "fn": "SafeMath.sub",
      "offset": [
        1290,
        1296
      ],
      "op": "ISZERO",
      "path": "75"
    },
    "5555": {
      "fn": "SafeMath.sub",
      "offset": [
        1282,
        1297
      ],
      "op": "PUSH2",
      "path": "75",
      "value": "0x15BB"
    },
    "5558": {
      "branch": 119,
      "fn": "SafeMath.sub",
      "offset": [
        1282,
        1297
      ],
      "op": "JUMPI",
      "path": "75"
    },
    "5559": {
      "fn": "SafeMath.sub",
      "offset": [
        1282,
        1297
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5561": {
      "fn": "SafeMath.sub",
      "offset": [
        1282,
        1297
      ],
      "op": "DUP1",
      "path": "75"
    },
    "5562": {
      "fn": "SafeMath.sub",
      "offset": [
        1282,
        1297
      ],
      "op": "REVERT",
      "path": "75"
    },
    "5563": {
      "fn": "SafeMath.sub",
      "offset": [
        1282,
        1297
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5564": {
      "op": "POP"
    },
    "5565": {
      "fn": "SafeMath.sub",
      "offset": [
        1319,
        1324
      ],
      "op": "SWAP1",
      "path": "75"
    },
    "5566": {
      "fn": "SafeMath.sub",
      "offset": [
        1319,
        1324
      ],
      "op": "SUB",
      "path": "75"
    },
    "5567": {
      "fn": "SafeMath.sub",
      "offset": [
        1319,
        1324
      ],
      "op": "SWAP1",
      "path": "75"
    },
    "5568": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1205,
        1350
      ],
      "op": "JUMP",
      "path": "75"
    },
    "5569": {
      "fn": "SafeMath.mul",
      "offset": [
        229,
        650
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5570": {
      "fn": "SafeMath.mul",
      "offset": [
        287,
        294
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5572": {
      "branch": 120,
      "fn": "SafeMath.mul",
      "offset": [
        527,
        533
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5573": {
      "fn": "SafeMath.mul",
      "offset": [
        523,
        568
      ],
      "op": "PUSH2",
      "path": "75",
      "value": "0x15D0"
    },
    "5576": {
      "branch": 120,
      "fn": "SafeMath.mul",
      "offset": [
        523,
        568
      ],
      "op": "JUMPI",
      "path": "75"
    },
    "5577": {
      "op": "POP"
    },
    "5578": {
      "fn": "SafeMath.mul",
      "offset": [
        556,
        557
      ],
      "op": "PUSH1",
      "path": "75",
      "statement": 106,
      "value": "0x0"
    },
    "5580": {
      "fn": "SafeMath.mul",
      "offset": [
        549,
        557
      ],
      "op": "PUSH2",
      "path": "75",
      "value": "0xEC6"
    },
    "5583": {
      "fn": "SafeMath.mul",
      "offset": [
        549,
        557
      ],
      "op": "JUMP",
      "path": "75"
    },
    "5584": {
      "fn": "SafeMath.mul",
      "offset": [
        523,
        568
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5585": {
      "fn": "SafeMath.mul",
      "offset": [
        590,
        595
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5586": {
      "fn": "SafeMath.mul",
      "offset": [
        590,
        595
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5587": {
      "fn": "SafeMath.mul",
      "offset": [
        590,
        595
      ],
      "op": "MUL",
      "path": "75"
    },
    "5588": {
      "fn": "SafeMath.mul",
      "offset": [
        594,
        595
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5589": {
      "fn": "SafeMath.mul",
      "offset": [
        590,
        591
      ],
      "op": "DUP5",
      "path": "75"
    },
    "5590": {
      "fn": "SafeMath.mul",
      "offset": [
        590,
        595
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5591": {
      "fn": "SafeMath.mul",
      "offset": [
        590,
        591
      ],
      "op": "DUP2",
      "path": "75"
    },
    "5592": {
      "fn": "SafeMath.mul",
      "offset": [
        613,
        618
      ],
      "op": "PUSH2",
      "path": "75",
      "statement": 107,
      "value": "0x15DD"
    },
    "5595": {
      "fn": "SafeMath.mul",
      "offset": [
        613,
        618
      ],
      "op": "JUMPI",
      "path": "75"
    },
    "5596": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        613,
        618
      ],
      "op": "INVALID",
      "path": "75"
    },
    "5597": {
      "fn": "SafeMath.mul",
      "offset": [
        613,
        618
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5598": {
      "fn": "SafeMath.mul",
      "offset": [
        613,
        618
      ],
      "op": "DIV",
      "path": "75"
    },
    "5599": {
      "branch": 121,
      "fn": "SafeMath.mul",
      "offset": [
        613,
        623
      ],
      "op": "EQ",
      "path": "75"
    },
    "5600": {
      "fn": "SafeMath.mul",
      "offset": [
        605,
        624
      ],
      "op": "PUSH2",
      "path": "75",
      "value": "0x7D6"
    },
    "5603": {
      "branch": 121,
      "fn": "SafeMath.mul",
      "offset": [
        605,
        624
      ],
      "op": "JUMPI",
      "path": "75"
    },
    "5604": {
      "fn": "SafeMath.mul",
      "offset": [
        605,
        624
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5606": {
      "fn": "SafeMath.mul",
      "offset": [
        605,
        624
      ],
      "op": "DUP1",
      "path": "75"
    },
    "5607": {
      "fn": "SafeMath.mul",
      "offset": [
        605,
        624
      ],
      "op": "REVERT",
      "path": "75"
    },
    "5608": {
      "fn": "SafeMath.div",
      "offset": [
        778,
        1074
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5609": {
      "fn": "SafeMath.div",
      "offset": [
        836,
        843
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5611": {
      "fn": "SafeMath.div",
      "offset": [
        933,
        934
      ],
      "op": "DUP1",
      "path": "75",
      "statement": 108
    },
    "5612": {
      "fn": "SafeMath.div",
      "offset": [
        929,
        930
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5613": {
      "branch": 122,
      "fn": "SafeMath.div",
      "offset": [
        929,
        934
      ],
      "op": "GT",
      "path": "75"
    },
    "5614": {
      "fn": "SafeMath.div",
      "offset": [
        921,
        935
      ],
      "op": "PUSH2",
      "path": "75",
      "value": "0x15F6"
    },
    "5617": {
      "branch": 122,
      "fn": "SafeMath.div",
      "offset": [
        921,
        935
      ],
      "op": "JUMPI",
      "path": "75"
    },
    "5618": {
      "fn": "SafeMath.div",
      "offset": [
        921,
        935
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5620": {
      "fn": "SafeMath.div",
      "offset": [
        921,
        935
      ],
      "op": "DUP1",
      "path": "75"
    },
    "5621": {
      "fn": "SafeMath.div",
      "offset": [
        921,
        935
      ],
      "op": "REVERT",
      "path": "75"
    },
    "5622": {
      "fn": "SafeMath.div",
      "offset": [
        921,
        935
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5623": {
      "fn": "SafeMath.div",
      "offset": [
        945,
        954
      ],
      "op": "PUSH1",
      "path": "75",
      "value": "0x0"
    },
    "5625": {
      "fn": "SafeMath.div",
      "offset": [
        961,
        962
      ],
      "op": "DUP3",
      "path": "75"
    },
    "5626": {
      "fn": "SafeMath.div",
      "offset": [
        957,
        958
      ],
      "op": "DUP5",
      "path": "75"
    },
    "5627": {
      "fn": "SafeMath.div",
      "offset": [
        957,
        962
      ],
      "op": "DUP2",
      "path": "75"
    },
    "5628": {
      "fn": "SafeMath.div",
      "offset": [
        957,
        962
      ],
      "op": "PUSH2",
      "path": "75",
      "value": "0x1601"
    },
    "5631": {
      "fn": "SafeMath.div",
      "offset": [
        957,
        962
      ],
      "op": "JUMPI",
      "path": "75"
    },
    "5632": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        957,
        962
      ],
      "op": "INVALID",
      "path": "75"
    },
    "5633": {
      "fn": "SafeMath.div",
      "offset": [
        957,
        962
      ],
      "op": "JUMPDEST",
      "path": "75"
    },
    "5634": {
      "fn": "SafeMath.div",
      "offset": [
        957,
        962
      ],
      "op": "DIV",
      "path": "75"
    },
    "5635": {
      "fn": "SafeMath.div",
      "offset": [
        957,
        962
      ],
      "op": "SWAP5",
      "path": "75"
    },
    "5636": {
      "fn": "SafeMath.div",
      "offset": [
        778,
        1074
      ],
      "op": "SWAP4",
      "path": "75"
    },
    "5637": {
      "op": "POP"
    },
    "5638": {
      "op": "POP"
    },
    "5639": {
      "op": "POP"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        778,
        1074
      ],
      "op": "JUMP",
      "path": "75"
    },
    "5642": {
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "5643": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "5645": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "5646": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "5647": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "5648": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP3",
      "path": "31"
    },
    "5649": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "ADD",
      "path": "31"
    },
    "5650": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "5651": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "5652": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5655": {
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "5656": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP3",
      "path": "31"
    },
    "5657": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5658": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "5660": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP3",
      "path": "31"
    },
    "5661": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "ADD",
      "path": "31"
    },
    "5662": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5663": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "5664": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        1217,
        11029
      ],
      "op": "JUMP",
      "path": "31"
    },
    "5665": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "5666": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "5668": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "5669": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "5670": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x60"
    },
    "5672": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP2",
      "path": "31"
    },
    "5673": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "ADD",
      "path": "31"
    },
    "5674": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP3",
      "path": "31"
    },
    "5675": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5678": {
      "offset": [
        1217,
        11029
      ],
      "op": "DUP1",
      "path": "31"
    },
    "5679": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP3",
      "path": "31"
    },
    "5680": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5681": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "5683": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP3",
      "path": "31"
    },
    "5684": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "ADD",
      "path": "31"
    },
    "5685": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP2",
      "path": "31"
    },
    "5686": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "5687": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5688": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "5689": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "DUP2",
      "path": "31"
    },
    "5690": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "ADD",
      "path": "31"
    },
    "5691": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "5692": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "5693": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "5694": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "5695": {
      "fn": "SafeMath.div",
      "offset": [
        1217,
        11029
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "5696": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        1217,
        11029
      ],
      "op": "JUMP",
      "path": "31"
    },
    "5697": {
      "op": "JUMPDEST"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5700": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "5703": {
      "op": "DUP3"
    },
    "5704": {
      "op": "CALLDATALOAD"
    },
    "5705": {
      "op": "PUSH2",
      "value": "0x1BCD"
    },
    "5708": {
      "op": "JUMP"
    },
    "5709": {
      "op": "JUMPDEST"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5712": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "5715": {
      "op": "DUP3"
    },
    "5716": {
      "op": "CALLDATALOAD"
    },
    "5717": {
      "op": "PUSH2",
      "value": "0x1BD8"
    },
    "5720": {
      "op": "JUMP"
    },
    "5721": {
      "op": "JUMPDEST"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5724": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "5727": {
      "op": "DUP3"
    },
    "5728": {
      "op": "CALLDATALOAD"
    },
    "5729": {
      "op": "PUSH2",
      "value": "0x1C06"
    },
    "5732": {
      "op": "JUMP"
    },
    "5733": {
      "op": "JUMPDEST"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5738": {
      "op": "DUP3"
    },
    "5739": {
      "op": "DUP5"
    },
    "5740": {
      "op": "SUB"
    },
    "5741": {
      "op": "SLT"
    },
    "5742": {
      "op": "ISZERO"
    },
    "5743": {
      "op": "PUSH2",
      "value": "0x1677"
    },
    "5746": {
      "op": "JUMPI"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5749": {
      "op": "DUP1"
    },
    "5750": {
      "op": "REVERT"
    },
    "5751": {
      "op": "JUMPDEST"
    },
    "5752": {
      "op": "PUSH2",
      "value": "0x1681"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5757": {
      "op": "PUSH2",
      "value": "0x1B99"
    },
    "5760": {
      "op": "JUMP"
    },
    "5761": {
      "op": "JUMPDEST"
    },
    "5762": {
      "op": "SWAP1"
    },
    "5763": {
      "op": "POP"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5766": {
      "op": "PUSH2",
      "value": "0x168F"
    },
    "5769": {
      "op": "DUP5"
    },
    "5770": {
      "op": "DUP5"
    },
    "5771": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "5774": {
      "op": "JUMP"
    },
    "5775": {
      "op": "JUMPDEST"
    },
    "5776": {
      "op": "DUP3"
    },
    "5777": {
      "op": "MSTORE"
    },
    "5778": {
      "op": "POP"
    },
    "5779": {
      "op": "SWAP3"
    },
    "5780": {
      "op": "SWAP2"
    },
    "5781": {
      "op": "POP"
    },
    "5782": {
      "op": "POP"
    },
    "5783": {
      "op": "JUMP"
    },
    "5784": {
      "op": "JUMPDEST"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5789": {
      "op": "DUP3"
    },
    "5790": {
      "op": "DUP5"
    },
    "5791": {
      "op": "SUB"
    },
    "5792": {
      "op": "SLT"
    },
    "5793": {
      "op": "ISZERO"
    },
    "5794": {
      "op": "PUSH2",
      "value": "0x16AA"
    },
    "5797": {
      "op": "JUMPI"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5800": {
      "op": "DUP1"
    },
    "5801": {
      "op": "REVERT"
    },
    "5802": {
      "op": "JUMPDEST"
    },
    "5803": {
      "op": "PUSH2",
      "value": "0x16B4"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5808": {
      "op": "PUSH2",
      "value": "0x1B99"
    },
    "5811": {
      "op": "JUMP"
    },
    "5812": {
      "op": "JUMPDEST"
    },
    "5813": {
      "op": "SWAP1"
    },
    "5814": {
      "op": "POP"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5817": {
      "op": "PUSH2",
      "value": "0x168F"
    },
    "5820": {
      "op": "DUP5"
    },
    "5821": {
      "op": "DUP5"
    },
    "5822": {
      "op": "PUSH2",
      "value": "0x16CE"
    },
    "5825": {
      "op": "JUMP"
    },
    "5826": {
      "op": "JUMPDEST"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5829": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "5832": {
      "op": "DUP3"
    },
    "5833": {
      "op": "CALLDATALOAD"
    },
    "5834": {
      "op": "PUSH2",
      "value": "0x1BF7"
    },
    "5837": {
      "op": "JUMP"
    },
    "5838": {
      "op": "JUMPDEST"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5841": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "5844": {
      "op": "DUP3"
    },
    "5845": {
      "op": "MLOAD"
    },
    "5846": {
      "op": "PUSH2",
      "value": "0x1BF7"
    },
    "5849": {
      "op": "JUMP"
    },
    "5850": {
      "op": "JUMPDEST"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5855": {
      "op": "DUP3"
    },
    "5856": {
      "op": "DUP5"
    },
    "5857": {
      "op": "SUB"
    },
    "5858": {
      "op": "SLT"
    },
    "5859": {
      "op": "ISZERO"
    },
    "5860": {
      "op": "PUSH2",
      "value": "0x16EC"
    },
    "5863": {
      "op": "JUMPI"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5866": {
      "op": "DUP1"
    },
    "5867": {
      "op": "REVERT"
    },
    "5868": {
      "op": "JUMPDEST"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5871": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "5874": {
      "op": "DUP5"
    },
    "5875": {
      "op": "DUP5"
    },
    "5876": {
      "op": "PUSH2",
      "value": "0x1698"
    },
    "5879": {
      "op": "JUMP"
    },
    "5880": {
      "op": "JUMPDEST"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5883": {
      "op": "DUP1"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5888": {
      "op": "DUP5"
    },
    "5889": {
      "op": "DUP7"
    },
    "5890": {
      "op": "SUB"
    },
    "5891": {
      "op": "SLT"
    },
    "5892": {
      "op": "ISZERO"
    },
    "5893": {
      "op": "PUSH2",
      "value": "0x170D"
    },
    "5896": {
      "op": "JUMPI"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5899": {
      "op": "DUP1"
    },
    "5900": {
      "op": "REVERT"
    },
    "5901": {
      "op": "JUMPDEST"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5904": {
      "op": "PUSH2",
      "value": "0x1719"
    },
    "5907": {
      "op": "DUP7"
    },
    "5908": {
      "op": "DUP7"
    },
    "5909": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "5912": {
      "op": "JUMP"
    },
    "5913": {
      "op": "JUMPDEST"
    },
    "5914": {
      "op": "SWAP4"
    },
    "5915": {
      "op": "POP"
    },
    "5916": {
      "op": "POP"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5919": {
      "op": "PUSH2",
      "value": "0x172A"
    },
    "5922": {
      "op": "DUP7"
    },
    "5923": {
      "op": "DUP3"
    },
    "5924": {
      "op": "DUP8"
    },
    "5925": {
      "op": "ADD"
    },
    "5926": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "5929": {
      "op": "JUMP"
    },
    "5930": {
      "op": "JUMPDEST"
    },
    "5931": {
      "op": "SWAP3"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "op": "POP"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5936": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "5939": {
      "op": "DUP7"
    },
    "5940": {
      "op": "DUP3"
    },
    "5941": {
      "op": "DUP8"
    },
    "5942": {
      "op": "ADD"
    },
    "5943": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "5946": {
      "op": "JUMP"
    },
    "5947": {
      "op": "JUMPDEST"
    },
    "5948": {
      "op": "SWAP2"
    },
    "5949": {
      "op": "POP"
    },
    "5950": {
      "op": "POP"
    },
    "5951": {
      "op": "SWAP3"
    },
    "5952": {
      "op": "POP"
    },
    "5953": {
      "op": "SWAP3"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "op": "SWAP3"
    },
    "5956": {
      "op": "JUMP"
    },
    "5957": {
      "op": "JUMPDEST"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5960": {
      "op": "DUP1"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5965": {
      "op": "DUP5"
    },
    "5966": {
      "op": "DUP7"
    },
    "5967": {
      "op": "SUB"
    },
    "5968": {
      "op": "SLT"
    },
    "5969": {
      "op": "ISZERO"
    },
    "5970": {
      "op": "PUSH2",
      "value": "0x175A"
    },
    "5973": {
      "op": "JUMPI"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5976": {
      "op": "DUP1"
    },
    "5977": {
      "op": "REVERT"
    },
    "5978": {
      "op": "JUMPDEST"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5981": {
      "op": "PUSH2",
      "value": "0x1766"
    },
    "5984": {
      "op": "DUP7"
    },
    "5985": {
      "op": "DUP7"
    },
    "5986": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "5989": {
      "op": "JUMP"
    },
    "5990": {
      "op": "JUMPDEST"
    },
    "5991": {
      "op": "SWAP4"
    },
    "5992": {
      "op": "POP"
    },
    "5993": {
      "op": "POP"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5996": {
      "op": "PUSH2",
      "value": "0x1777"
    },
    "5999": {
      "op": "DUP7"
    },
    "6000": {
      "op": "DUP3"
    },
    "6001": {
      "op": "DUP8"
    },
    "6002": {
      "op": "ADD"
    },
    "6003": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "6006": {
      "op": "JUMP"
    },
    "6007": {
      "op": "JUMPDEST"
    },
    "6008": {
      "op": "SWAP3"
    },
    "6009": {
      "op": "POP"
    },
    "6010": {
      "op": "POP"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6013": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "6016": {
      "op": "DUP7"
    },
    "6017": {
      "op": "DUP3"
    },
    "6018": {
      "op": "DUP8"
    },
    "6019": {
      "op": "ADD"
    },
    "6020": {
      "op": "PUSH2",
      "value": "0x164D"
    },
    "6023": {
      "op": "JUMP"
    },
    "6024": {
      "op": "JUMPDEST"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6027": {
      "op": "DUP1"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6030": {
      "op": "DUP1"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6033": {
      "op": "DUP1"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6036": {
      "op": "DUP8"
    },
    "6037": {
      "op": "DUP10"
    },
    "6038": {
      "op": "SUB"
    },
    "6039": {
      "op": "SLT"
    },
    "6040": {
      "op": "ISZERO"
    },
    "6041": {
      "op": "PUSH2",
      "value": "0x17A1"
    },
    "6044": {
      "op": "JUMPI"
    },
    "6045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6047": {
      "op": "DUP1"
    },
    "6048": {
      "op": "REVERT"
    },
    "6049": {
      "op": "JUMPDEST"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6052": {
      "op": "PUSH2",
      "value": "0x17AD"
    },
    "6055": {
      "op": "DUP10"
    },
    "6056": {
      "op": "DUP10"
    },
    "6057": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6060": {
      "op": "JUMP"
    },
    "6061": {
      "op": "JUMPDEST"
    },
    "6062": {
      "op": "SWAP7"
    },
    "6063": {
      "op": "POP"
    },
    "6064": {
      "op": "POP"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6067": {
      "op": "PUSH2",
      "value": "0x17BE"
    },
    "6070": {
      "op": "DUP10"
    },
    "6071": {
      "op": "DUP3"
    },
    "6072": {
      "op": "DUP11"
    },
    "6073": {
      "op": "ADD"
    },
    "6074": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "6077": {
      "op": "JUMP"
    },
    "6078": {
      "op": "JUMPDEST"
    },
    "6079": {
      "op": "SWAP6"
    },
    "6080": {
      "op": "POP"
    },
    "6081": {
      "op": "POP"
    },
    "6082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6084": {
      "op": "PUSH2",
      "value": "0x17CF"
    },
    "6087": {
      "op": "DUP10"
    },
    "6088": {
      "op": "DUP3"
    },
    "6089": {
      "op": "DUP11"
    },
    "6090": {
      "op": "ADD"
    },
    "6091": {
      "op": "PUSH2",
      "value": "0x1659"
    },
    "6094": {
      "op": "JUMP"
    },
    "6095": {
      "op": "JUMPDEST"
    },
    "6096": {
      "op": "SWAP5"
    },
    "6097": {
      "op": "POP"
    },
    "6098": {
      "op": "POP"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6101": {
      "op": "PUSH2",
      "value": "0x17E0"
    },
    "6104": {
      "op": "DUP10"
    },
    "6105": {
      "op": "DUP3"
    },
    "6106": {
      "op": "DUP11"
    },
    "6107": {
      "op": "ADD"
    },
    "6108": {
      "op": "PUSH2",
      "value": "0x1659"
    },
    "6111": {
      "op": "JUMP"
    },
    "6112": {
      "op": "JUMPDEST"
    },
    "6113": {
      "op": "SWAP4"
    },
    "6114": {
      "op": "POP"
    },
    "6115": {
      "op": "POP"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6118": {
      "op": "PUSH2",
      "value": "0x17F1"
    },
    "6121": {
      "op": "DUP10"
    },
    "6122": {
      "op": "DUP3"
    },
    "6123": {
      "op": "DUP11"
    },
    "6124": {
      "op": "ADD"
    },
    "6125": {
      "op": "PUSH2",
      "value": "0x1665"
    },
    "6128": {
      "op": "JUMP"
    },
    "6129": {
      "op": "JUMPDEST"
    },
    "6130": {
      "op": "SWAP3"
    },
    "6131": {
      "op": "POP"
    },
    "6132": {
      "op": "POP"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6135": {
      "op": "PUSH2",
      "value": "0x1802"
    },
    "6138": {
      "op": "DUP10"
    },
    "6139": {
      "op": "DUP3"
    },
    "6140": {
      "op": "DUP11"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "op": "PUSH2",
      "value": "0x1665"
    },
    "6145": {
      "op": "JUMP"
    },
    "6146": {
      "op": "JUMPDEST"
    },
    "6147": {
      "op": "SWAP2"
    },
    "6148": {
      "op": "POP"
    },
    "6149": {
      "op": "POP"
    },
    "6150": {
      "op": "SWAP3"
    },
    "6151": {
      "op": "SWAP6"
    },
    "6152": {
      "op": "POP"
    },
    "6153": {
      "op": "SWAP3"
    },
    "6154": {
      "op": "SWAP6"
    },
    "6155": {
      "op": "POP"
    },
    "6156": {
      "op": "SWAP3"
    },
    "6157": {
      "op": "SWAP6"
    },
    "6158": {
      "op": "JUMP"
    },
    "6159": {
      "op": "JUMPDEST"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6162": {
      "op": "DUP1"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6165": {
      "op": "DUP4"
    },
    "6166": {
      "op": "DUP6"
    },
    "6167": {
      "op": "SUB"
    },
    "6168": {
      "op": "SLT"
    },
    "6169": {
      "op": "ISZERO"
    },
    "6170": {
      "op": "PUSH2",
      "value": "0x1822"
    },
    "6173": {
      "op": "JUMPI"
    },
    "6174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6176": {
      "op": "DUP1"
    },
    "6177": {
      "op": "REVERT"
    },
    "6178": {
      "op": "JUMPDEST"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6181": {
      "op": "PUSH2",
      "value": "0x182E"
    },
    "6184": {
      "op": "DUP6"
    },
    "6185": {
      "op": "DUP6"
    },
    "6186": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6189": {
      "op": "JUMP"
    },
    "6190": {
      "op": "JUMPDEST"
    },
    "6191": {
      "op": "SWAP3"
    },
    "6192": {
      "op": "POP"
    },
    "6193": {
      "op": "POP"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6196": {
      "op": "PUSH2",
      "value": "0x183F"
    },
    "6199": {
      "op": "DUP6"
    },
    "6200": {
      "op": "DUP3"
    },
    "6201": {
      "op": "DUP7"
    },
    "6202": {
      "op": "ADD"
    },
    "6203": {
      "op": "PUSH2",
      "value": "0x1665"
    },
    "6206": {
      "op": "JUMP"
    },
    "6207": {
      "op": "JUMPDEST"
    },
    "6208": {
      "op": "SWAP2"
    },
    "6209": {
      "op": "POP"
    },
    "6210": {
      "op": "POP"
    },
    "6211": {
      "op": "SWAP3"
    },
    "6212": {
      "op": "POP"
    },
    "6213": {
      "op": "SWAP3"
    },
    "6214": {
      "op": "SWAP1"
    },
    "6215": {
      "op": "POP"
    },
    "6216": {
      "op": "JUMP"
    },
    "6217": {
      "op": "JUMPDEST"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6220": {
      "op": "DUP1"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6225": {
      "op": "DUP5"
    },
    "6226": {
      "op": "DUP7"
    },
    "6227": {
      "op": "SUB"
    },
    "6228": {
      "op": "SLT"
    },
    "6229": {
      "op": "ISZERO"
    },
    "6230": {
      "op": "PUSH2",
      "value": "0x185E"
    },
    "6233": {
      "op": "JUMPI"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6236": {
      "op": "DUP1"
    },
    "6237": {
      "op": "REVERT"
    },
    "6238": {
      "op": "JUMPDEST"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6241": {
      "op": "PUSH2",
      "value": "0x186A"
    },
    "6244": {
      "op": "DUP7"
    },
    "6245": {
      "op": "DUP7"
    },
    "6246": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6249": {
      "op": "JUMP"
    },
    "6250": {
      "op": "JUMPDEST"
    },
    "6251": {
      "op": "SWAP4"
    },
    "6252": {
      "op": "POP"
    },
    "6253": {
      "op": "POP"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6256": {
      "op": "PUSH2",
      "value": "0x172A"
    },
    "6259": {
      "op": "DUP7"
    },
    "6260": {
      "op": "DUP3"
    },
    "6261": {
      "op": "DUP8"
    },
    "6262": {
      "op": "ADD"
    },
    "6263": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6266": {
      "op": "JUMP"
    },
    "6267": {
      "op": "JUMPDEST"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6270": {
      "op": "DUP1"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6275": {
      "op": "DUP5"
    },
    "6276": {
      "op": "DUP7"
    },
    "6277": {
      "op": "SUB"
    },
    "6278": {
      "op": "SLT"
    },
    "6279": {
      "op": "ISZERO"
    },
    "6280": {
      "op": "PUSH2",
      "value": "0x1890"
    },
    "6283": {
      "op": "JUMPI"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6286": {
      "op": "DUP1"
    },
    "6287": {
      "op": "REVERT"
    },
    "6288": {
      "op": "JUMPDEST"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6291": {
      "op": "PUSH2",
      "value": "0x189C"
    },
    "6294": {
      "op": "DUP7"
    },
    "6295": {
      "op": "DUP7"
    },
    "6296": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6299": {
      "op": "JUMP"
    },
    "6300": {
      "op": "JUMPDEST"
    },
    "6301": {
      "op": "SWAP4"
    },
    "6302": {
      "op": "POP"
    },
    "6303": {
      "op": "POP"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6306": {
      "op": "PUSH2",
      "value": "0x1777"
    },
    "6309": {
      "op": "DUP7"
    },
    "6310": {
      "op": "DUP3"
    },
    "6311": {
      "op": "DUP8"
    },
    "6312": {
      "op": "ADD"
    },
    "6313": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6316": {
      "op": "JUMP"
    },
    "6317": {
      "op": "JUMPDEST"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6320": {
      "op": "DUP1"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6325": {
      "op": "DUP5"
    },
    "6326": {
      "op": "DUP7"
    },
    "6327": {
      "op": "SUB"
    },
    "6328": {
      "op": "SLT"
    },
    "6329": {
      "op": "ISZERO"
    },
    "6330": {
      "op": "PUSH2",
      "value": "0x18C2"
    },
    "6333": {
      "op": "JUMPI"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6336": {
      "op": "DUP1"
    },
    "6337": {
      "op": "REVERT"
    },
    "6338": {
      "op": "JUMPDEST"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6341": {
      "op": "PUSH2",
      "value": "0x18CE"
    },
    "6344": {
      "op": "DUP7"
    },
    "6345": {
      "op": "DUP7"
    },
    "6346": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6349": {
      "op": "JUMP"
    },
    "6350": {
      "op": "JUMPDEST"
    },
    "6351": {
      "op": "SWAP4"
    },
    "6352": {
      "op": "POP"
    },
    "6353": {
      "op": "POP"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6356": {
      "op": "PUSH2",
      "value": "0x18DF"
    },
    "6359": {
      "op": "DUP7"
    },
    "6360": {
      "op": "DUP3"
    },
    "6361": {
      "op": "DUP8"
    },
    "6362": {
      "op": "ADD"
    },
    "6363": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6366": {
      "op": "JUMP"
    },
    "6367": {
      "op": "JUMPDEST"
    },
    "6368": {
      "op": "SWAP3"
    },
    "6369": {
      "op": "POP"
    },
    "6370": {
      "op": "POP"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6373": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "6376": {
      "op": "DUP7"
    },
    "6377": {
      "op": "DUP3"
    },
    "6378": {
      "op": "DUP8"
    },
    "6379": {
      "op": "ADD"
    },
    "6380": {
      "op": "PUSH2",
      "value": "0x1659"
    },
    "6383": {
      "op": "JUMP"
    },
    "6384": {
      "op": "JUMPDEST"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6387": {
      "op": "DUP1"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6392": {
      "op": "DUP5"
    },
    "6393": {
      "op": "DUP7"
    },
    "6394": {
      "op": "SUB"
    },
    "6395": {
      "op": "SLT"
    },
    "6396": {
      "op": "ISZERO"
    },
    "6397": {
      "op": "PUSH2",
      "value": "0x1905"
    },
    "6400": {
      "op": "JUMPI"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6403": {
      "op": "DUP1"
    },
    "6404": {
      "op": "REVERT"
    },
    "6405": {
      "op": "JUMPDEST"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6408": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "6411": {
      "op": "DUP7"
    },
    "6412": {
      "op": "DUP7"
    },
    "6413": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6416": {
      "op": "JUMP"
    },
    "6417": {
      "op": "JUMPDEST"
    },
    "6418": {
      "op": "SWAP4"
    },
    "6419": {
      "op": "POP"
    },
    "6420": {
      "op": "POP"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6423": {
      "op": "PUSH2",
      "value": "0x1922"
    },
    "6426": {
      "op": "DUP7"
    },
    "6427": {
      "op": "DUP3"
    },
    "6428": {
      "op": "DUP8"
    },
    "6429": {
      "op": "ADD"
    },
    "6430": {
      "op": "PUSH2",
      "value": "0x16C2"
    },
    "6433": {
      "op": "JUMP"
    },
    "6434": {
      "op": "JUMPDEST"
    },
    "6435": {
      "op": "SWAP3"
    },
    "6436": {
      "op": "POP"
    },
    "6437": {
      "op": "POP"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6440": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "6443": {
      "op": "DUP7"
    },
    "6444": {
      "op": "DUP3"
    },
    "6445": {
      "op": "DUP8"
    },
    "6446": {
      "op": "ADD"
    },
    "6447": {
      "op": "PUSH2",
      "value": "0x1665"
    },
    "6450": {
      "op": "JUMP"
    },
    "6451": {
      "op": "JUMPDEST"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6456": {
      "op": "DUP3"
    },
    "6457": {
      "op": "DUP5"
    },
    "6458": {
      "op": "SUB"
    },
    "6459": {
      "op": "SLT"
    },
    "6460": {
      "op": "ISZERO"
    },
    "6461": {
      "op": "PUSH2",
      "value": "0x1945"
    },
    "6464": {
      "op": "JUMPI"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6467": {
      "op": "DUP1"
    },
    "6468": {
      "op": "REVERT"
    },
    "6469": {
      "op": "JUMPDEST"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6472": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "6475": {
      "op": "DUP5"
    },
    "6476": {
      "op": "DUP5"
    },
    "6477": {
      "op": "PUSH2",
      "value": "0x16CE"
    },
    "6480": {
      "op": "JUMP"
    },
    "6481": {
      "op": "JUMPDEST"
    },
    "6482": {
      "op": "PUSH2",
      "value": "0x195A"
    },
    "6485": {
      "op": "DUP2"
    },
    "6486": {
      "op": "PUSH2",
      "value": "0x1BCD"
    },
    "6489": {
      "op": "JUMP"
    },
    "6490": {
      "op": "JUMPDEST"
    },
    "6491": {
      "op": "DUP3"
    },
    "6492": {
      "op": "MSTORE"
    },
    "6493": {
      "op": "POP"
    },
    "6494": {
      "op": "POP"
    },
    "6495": {
      "op": "JUMP"
    },
    "6496": {
      "op": "JUMPDEST"
    },
    "6497": {
      "op": "PUSH2",
      "value": "0x195A"
    },
    "6500": {
      "op": "DUP2"
    },
    "6501": {
      "op": "PUSH2",
      "value": "0x1BD8"
    },
    "6504": {
      "op": "JUMP"
    },
    "6505": {
      "op": "JUMPDEST"
    },
    "6506": {
      "op": "PUSH2",
      "value": "0x195A"
    },
    "6509": {
      "op": "PUSH2",
      "value": "0x1975"
    },
    "6512": {
      "op": "DUP3"
    },
    "6513": {
      "op": "PUSH2",
      "value": "0x1BDD"
    },
    "6516": {
      "op": "JUMP"
    },
    "6517": {
      "op": "JUMPDEST"
    },
    "6518": {
      "op": "PUSH2",
      "value": "0x1BF7"
    },
    "6521": {
      "op": "JUMP"
    },
    "6522": {
      "op": "JUMPDEST"
    },
    "6523": {
      "op": "PUSH2",
      "value": "0x195A"
    },
    "6526": {
      "op": "PUSH2",
      "value": "0x1975"
    },
    "6529": {
      "op": "DUP3"
    },
    "6530": {
      "op": "PUSH2",
      "value": "0x1BEA"
    },
    "6533": {
      "op": "JUMP"
    },
    "6534": {
      "op": "JUMPDEST"
    },
    "6535": {
      "op": "PUSH2",
      "value": "0x195A"
    },
    "6538": {
      "op": "PUSH2",
      "value": "0x1975"
    },
    "6541": {
      "op": "DUP3"
    },
    "6542": {
      "op": "PUSH2",
      "value": "0x1BF7"
    },
    "6545": {
      "op": "JUMP"
    },
    "6546": {
      "op": "JUMPDEST"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6549": {
      "op": "PUSH2",
      "value": "0x199D"
    },
    "6552": {
      "op": "DUP3"
    },
    "6553": {
      "op": "PUSH2",
      "value": "0x1BC0"
    },
    "6556": {
      "op": "JUMP"
    },
    "6557": {
      "op": "JUMPDEST"
    },
    "6558": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "6561": {
      "op": "DUP2"
    },
    "6562": {
      "op": "DUP6"
    },
    "6563": {
      "op": "PUSH2",
      "value": "0xEE5"
    },
    "6566": {
      "op": "JUMP"
    },
    "6567": {
      "op": "JUMPDEST"
    },
    "6568": {
      "op": "SWAP4"
    },
    "6569": {
      "op": "POP"
    },
    "6570": {
      "op": "PUSH2",
      "value": "0x19B7"
    },
    "6573": {
      "op": "DUP2"
    },
    "6574": {
      "op": "DUP6"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6577": {
      "op": "DUP7"
    },
    "6578": {
      "op": "ADD"
    },
    "6579": {
      "op": "PUSH2",
      "value": "0x1C1C"
    },
    "6582": {
      "op": "JUMP"
    },
    "6583": {
      "op": "JUMPDEST"
    },
    "6584": {
      "op": "SWAP3"
    },
    "6585": {
      "op": "SWAP1"
    },
    "6586": {
      "op": "SWAP3"
    },
    "6587": {
      "op": "ADD"
    },
    "6588": {
      "op": "SWAP3"
    },
    "6589": {
      "op": "SWAP2"
    },
    "6590": {
      "op": "POP"
    },
    "6591": {
      "op": "POP"
    },
    "6592": {
      "op": "JUMP"
    },
    "6593": {
      "op": "JUMPDEST"
    },
    "6594": {
      "op": "PUSH2",
      "value": "0x195A"
    },
    "6597": {
      "op": "DUP2"
    },
    "6598": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "6601": {
      "op": "JUMP"
    },
    "6602": {
      "op": "JUMPDEST"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6605": {
      "op": "PUSH2",
      "value": "0x19D5"
    },
    "6608": {
      "op": "DUP3"
    },
    "6609": {
      "op": "PUSH2",
      "value": "0x1BC0"
    },
    "6612": {
      "op": "JUMP"
    },
    "6613": {
      "op": "JUMPDEST"
    },
    "6614": {
      "op": "PUSH2",
      "value": "0x19DF"
    },
    "6617": {
      "op": "DUP2"
    },
    "6618": {
      "op": "DUP6"
    },
    "6619": {
      "op": "PUSH2",
      "value": "0x1BC4"
    },
    "6622": {
      "op": "JUMP"
    },
    "6623": {
      "op": "JUMPDEST"
    },
    "6624": {
      "op": "SWAP4"
    },
    "6625": {
      "op": "POP"
    },
    "6626": {
      "op": "PUSH2",
      "value": "0x19EF"
    },
    "6629": {
      "op": "DUP2"
    },
    "6630": {
      "op": "DUP6"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6633": {
      "op": "DUP7"
    },
    "6634": {
      "op": "ADD"
    },
    "6635": {
      "op": "PUSH2",
      "value": "0x1C1C"
    },
    "6638": {
      "op": "JUMP"
    },
    "6639": {
      "op": "JUMPDEST"
    },
    "6640": {
      "op": "PUSH2",
      "value": "0x19F8"
    },
    "6643": {
      "op": "DUP2"
    },
    "6644": {
      "op": "PUSH2",
      "value": "0x1C48"
    },
    "6647": {
      "op": "JUMP"
    },
    "6648": {
      "op": "JUMPDEST"
    },
    "6649": {
      "op": "SWAP1"
    },
    "6650": {
      "op": "SWAP4"
    },
    "6651": {
      "op": "ADD"
    },
    "6652": {
      "op": "SWAP4"
    },
    "6653": {
      "op": "SWAP3"
    },
    "6654": {
      "op": "POP"
    },
    "6655": {
      "op": "POP"
    },
    "6656": {
      "op": "POP"
    },
    "6657": {
      "op": "JUMP"
    },
    "6658": {
      "op": "JUMPDEST"
    },
    "6659": {
      "op": "DUP1"
    },
    "6660": {
      "op": "MLOAD"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6663": {
      "op": "DUP4"
    },
    "6664": {
      "op": "ADD"
    },
    "6665": {
      "op": "SWAP1"
    },
    "6666": {
      "op": "PUSH2",
      "value": "0xA59"
    },
    "6669": {
      "op": "DUP5"
    },
    "6670": {
      "op": "DUP3"
    },
    "6671": {
      "op": "JUMPDEST"
    },
    "6672": {
      "op": "PUSH2",
      "value": "0x195A"
    },
    "6675": {
      "op": "DUP2"
    },
    "6676": {
      "op": "PUSH2",
      "value": "0x1BF7"
    },
    "6679": {
      "op": "JUMP"
    },
    "6680": {
      "op": "JUMPDEST"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6683": {
      "op": "PUSH2",
      "value": "0x1A24"
    },
    "6686": {
      "op": "DUP3"
    },
    "6687": {
      "op": "DUP5"
    },
    "6688": {
      "op": "PUSH2",
      "value": "0x1986"
    },
    "6691": {
      "op": "JUMP"
    },
    "6692": {
      "op": "JUMPDEST"
    },
    "6693": {
      "op": "POP"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6696": {
      "op": "ADD"
    },
    "6697": {
      "op": "SWAP2"
    },
    "6698": {
      "op": "SWAP1"
    },
    "6699": {
      "op": "POP"
    },
    "6700": {
      "op": "JUMP"
    },
    "6701": {
      "op": "JUMPDEST"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6704": {
      "op": "PUSH2",
      "value": "0x1A39"
    },
    "6707": {
      "op": "DUP3"
    },
    "6708": {
      "op": "DUP7"
    },
    "6709": {
      "op": "PUSH2",
      "value": "0x1992"
    },
    "6712": {
      "op": "JUMP"
    },
    "6713": {
      "op": "JUMPDEST"
    },
    "6714": {
      "op": "SWAP2"
    },
    "6715": {
      "op": "POP"
    },
    "6716": {
      "op": "PUSH2",
      "value": "0x1A45"
    },
    "6719": {
      "op": "DUP3"
    },
    "6720": {
      "op": "DUP6"
    },
    "6721": {
      "op": "PUSH2",
      "value": "0x197A"
    },
    "6724": {
      "op": "JUMP"
    },
    "6725": {
      "op": "JUMPDEST"
    },
    "6726": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6728": {
      "op": "DUP3"
    },
    "6729": {
      "op": "ADD"
    },
    "6730": {
      "op": "SWAP2"
    },
    "6731": {
      "op": "POP"
    },
    "6732": {
      "op": "PUSH2",
      "value": "0x1A55"
    },
    "6735": {
      "op": "DUP3"
    },
    "6736": {
      "op": "DUP5"
    },
    "6737": {
      "op": "PUSH2",
      "value": "0x1992"
    },
    "6740": {
      "op": "JUMP"
    },
    "6741": {
      "op": "JUMPDEST"
    },
    "6742": {
      "op": "SWAP6"
    },
    "6743": {
      "op": "SWAP5"
    },
    "6744": {
      "op": "POP"
    },
    "6745": {
      "op": "POP"
    },
    "6746": {
      "op": "POP"
    },
    "6747": {
      "op": "POP"
    },
    "6748": {
      "op": "POP"
    },
    "6749": {
      "op": "JUMP"
    },
    "6750": {
      "op": "JUMPDEST"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6753": {
      "op": "PUSH2",
      "value": "0x1A6A"
    },
    "6756": {
      "op": "DUP3"
    },
    "6757": {
      "op": "DUP10"
    },
    "6758": {
      "op": "PUSH2",
      "value": "0x1992"
    },
    "6761": {
      "op": "JUMP"
    },
    "6762": {
      "op": "JUMPDEST"
    },
    "6763": {
      "op": "SWAP2"
    },
    "6764": {
      "op": "POP"
    },
    "6765": {
      "op": "PUSH2",
      "value": "0x1A76"
    },
    "6768": {
      "op": "DUP3"
    },
    "6769": {
      "op": "DUP9"
    },
    "6770": {
      "op": "PUSH2",
      "value": "0x197A"
    },
    "6773": {
      "op": "JUMP"
    },
    "6774": {
      "op": "JUMPDEST"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6777": {
      "op": "DUP3"
    },
    "6778": {
      "op": "ADD"
    },
    "6779": {
      "op": "SWAP2"
    },
    "6780": {
      "op": "POP"
    },
    "6781": {
      "op": "PUSH2",
      "value": "0x1A86"
    },
    "6784": {
      "op": "DUP3"
    },
    "6785": {
      "op": "DUP8"
    },
    "6786": {
      "op": "PUSH2",
      "value": "0x1992"
    },
    "6789": {
      "op": "JUMP"
    },
    "6790": {
      "op": "JUMPDEST"
    },
    "6791": {
      "op": "SWAP2"
    },
    "6792": {
      "op": "POP"
    },
    "6793": {
      "op": "PUSH2",
      "value": "0x1A92"
    },
    "6796": {
      "op": "DUP3"
    },
    "6797": {
      "op": "DUP7"
    },
    "6798": {
      "op": "PUSH2",
      "value": "0x197A"
    },
    "6801": {
      "op": "JUMP"
    },
    "6802": {
      "op": "JUMPDEST"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6805": {
      "op": "DUP3"
    },
    "6806": {
      "op": "ADD"
    },
    "6807": {
      "op": "SWAP2"
    },
    "6808": {
      "op": "POP"
    },
    "6809": {
      "op": "PUSH2",
      "value": "0x1AA2"
    },
    "6812": {
      "op": "DUP3"
    },
    "6813": {
      "op": "DUP6"
    },
    "6814": {
      "op": "PUSH2",
      "value": "0x1992"
    },
    "6817": {
      "op": "JUMP"
    },
    "6818": {
      "op": "JUMPDEST"
    },
    "6819": {
      "op": "SWAP2"
    },
    "6820": {
      "op": "POP"
    },
    "6821": {
      "op": "PUSH2",
      "value": "0x1AAE"
    },
    "6824": {
      "op": "DUP3"
    },
    "6825": {
      "op": "DUP5"
    },
    "6826": {
      "op": "PUSH2",
      "value": "0x1969"
    },
    "6829": {
      "op": "JUMP"
    },
    "6830": {
      "op": "JUMPDEST"
    },
    "6831": {
      "op": "POP"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6834": {
      "op": "ADD"
    },
    "6835": {
      "op": "SWAP7"
    },
    "6836": {
      "op": "SWAP6"
    },
    "6837": {
      "op": "POP"
    },
    "6838": {
      "op": "POP"
    },
    "6839": {
      "op": "POP"
    },
    "6840": {
      "op": "POP"
    },
    "6841": {
      "op": "POP"
    },
    "6842": {
      "op": "POP"
    },
    "6843": {
      "op": "JUMP"
    },
    "6844": {
      "op": "JUMPDEST"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6847": {
      "op": "DUP2"
    },
    "6848": {
      "op": "ADD"
    },
    "6849": {
      "op": "PUSH2",
      "value": "0xEC6"
    },
    "6852": {
      "op": "DUP3"
    },
    "6853": {
      "op": "DUP5"
    },
    "6854": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6857": {
      "op": "JUMP"
    },
    "6858": {
      "op": "JUMPDEST"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6861": {
      "op": "DUP2"
    },
    "6862": {
      "op": "ADD"
    },
    "6863": {
      "op": "PUSH2",
      "value": "0x1AD8"
    },
    "6866": {
      "op": "DUP3"
    },
    "6867": {
      "op": "DUP6"
    },
    "6868": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6871": {
      "op": "JUMP"
    },
    "6872": {
      "op": "JUMPDEST"
    },
    "6873": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6878": {
      "op": "DUP4"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "DUP5"
    },
    "6881": {
      "op": "PUSH2",
      "value": "0x1960"
    },
    "6884": {
      "op": "JUMP"
    },
    "6885": {
      "op": "JUMPDEST"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6888": {
      "op": "DUP2"
    },
    "6889": {
      "op": "ADD"
    },
    "6890": {
      "op": "PUSH2",
      "value": "0x1AF3"
    },
    "6893": {
      "op": "DUP3"
    },
    "6894": {
      "op": "DUP7"
    },
    "6895": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6898": {
      "op": "JUMP"
    },
    "6899": {
      "op": "JUMPDEST"
    },
    "6900": {
      "op": "PUSH2",
      "value": "0x1B00"
    },
    "6903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6905": {
      "op": "DUP4"
    },
    "6906": {
      "op": "ADD"
    },
    "6907": {
      "op": "DUP6"
    },
    "6908": {
      "op": "PUSH2",
      "value": "0x19C1"
    },
    "6911": {
      "op": "JUMP"
    },
    "6912": {
      "op": "JUMPDEST"
    },
    "6913": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6918": {
      "op": "DUP4"
    },
    "6919": {
      "op": "ADD"
    },
    "6920": {
      "op": "DUP5"
    },
    "6921": {
      "op": "PUSH2",
      "value": "0x19C1"
    },
    "6924": {
      "op": "JUMP"
    },
    "6925": {
      "op": "JUMPDEST"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6928": {
      "op": "DUP2"
    },
    "6929": {
      "op": "ADD"
    },
    "6930": {
      "op": "PUSH2",
      "value": "0x1B1B"
    },
    "6933": {
      "op": "DUP3"
    },
    "6934": {
      "op": "DUP6"
    },
    "6935": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6938": {
      "op": "JUMP"
    },
    "6939": {
      "op": "JUMPDEST"
    },
    "6940": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6945": {
      "op": "DUP4"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "op": "DUP5"
    },
    "6948": {
      "op": "PUSH2",
      "value": "0x1A0F"
    },
    "6951": {
      "op": "JUMP"
    },
    "6952": {
      "op": "JUMPDEST"
    },
    "6953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6955": {
      "op": "DUP1"
    },
    "6956": {
      "op": "DUP3"
    },
    "6957": {
      "op": "MSTORE"
    },
    "6958": {
      "op": "DUP2"
    },
    "6959": {
      "op": "ADD"
    },
    "6960": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "6963": {
      "op": "DUP2"
    },
    "6964": {
      "op": "DUP5"
    },
    "6965": {
      "op": "PUSH2",
      "value": "0x19CA"
    },
    "6968": {
      "op": "JUMP"
    },
    "6969": {
      "op": "JUMPDEST"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6972": {
      "op": "DUP2"
    },
    "6973": {
      "op": "ADD"
    },
    "6974": {
      "op": "PUSH2",
      "value": "0xEC6"
    },
    "6977": {
      "op": "DUP3"
    },
    "6978": {
      "op": "DUP5"
    },
    "6979": {
      "op": "PUSH2",
      "value": "0x1A02"
    },
    "6982": {
      "op": "JUMP"
    },
    "6983": {
      "op": "JUMPDEST"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6986": {
      "op": "DUP2"
    },
    "6987": {
      "op": "ADD"
    },
    "6988": {
      "op": "PUSH2",
      "value": "0xEC6"
    },
    "6991": {
      "op": "DUP3"
    },
    "6992": {
      "op": "DUP5"
    },
    "6993": {
      "op": "PUSH2",
      "value": "0x1A0F"
    },
    "6996": {
      "op": "JUMP"
    },
    "6997": {
      "op": "JUMPDEST"
    },
    "6998": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7000": {
      "op": "DUP2"
    },
    "7001": {
      "op": "ADD"
    },
    "7002": {
      "op": "PUSH2",
      "value": "0x1B63"
    },
    "7005": {
      "op": "DUP3"
    },
    "7006": {
      "op": "DUP6"
    },
    "7007": {
      "op": "PUSH2",
      "value": "0x1A0F"
    },
    "7010": {
      "op": "JUMP"
    },
    "7011": {
      "op": "JUMPDEST"
    },
    "7012": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7017": {
      "op": "DUP4"
    },
    "7018": {
      "op": "ADD"
    },
    "7019": {
      "op": "DUP5"
    },
    "7020": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "7023": {
      "op": "JUMP"
    },
    "7024": {
      "op": "JUMPDEST"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7027": {
      "op": "DUP2"
    },
    "7028": {
      "op": "ADD"
    },
    "7029": {
      "op": "PUSH2",
      "value": "0x1AD8"
    },
    "7032": {
      "op": "DUP3"
    },
    "7033": {
      "op": "DUP6"
    },
    "7034": {
      "op": "PUSH2",
      "value": "0x1A0F"
    },
    "7037": {
      "op": "JUMP"
    },
    "7038": {
      "op": "JUMPDEST"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7041": {
      "op": "DUP2"
    },
    "7042": {
      "op": "ADD"
    },
    "7043": {
      "op": "PUSH2",
      "value": "0x1B8C"
    },
    "7046": {
      "op": "DUP3"
    },
    "7047": {
      "op": "DUP6"
    },
    "7048": {
      "op": "PUSH2",
      "value": "0x1A0F"
    },
    "7051": {
      "op": "JUMP"
    },
    "7052": {
      "op": "JUMPDEST"
    },
    "7053": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7058": {
      "op": "DUP4"
    },
    "7059": {
      "op": "ADD"
    },
    "7060": {
      "op": "DUP5"
    },
    "7061": {
      "op": "PUSH2",
      "value": "0x1A02"
    },
    "7064": {
      "op": "JUMP"
    },
    "7065": {
      "op": "JUMPDEST"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7068": {
      "op": "MLOAD"
    },
    "7069": {
      "op": "DUP2"
    },
    "7070": {
      "op": "DUP2"
    },
    "7071": {
      "op": "ADD"
    },
    "7072": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7081": {
      "op": "DUP2"
    },
    "7082": {
      "op": "GT"
    },
    "7083": {
      "op": "DUP3"
    },
    "7084": {
      "op": "DUP3"
    },
    "7085": {
      "op": "LT"
    },
    "7086": {
      "op": "OR"
    },
    "7087": {
      "op": "ISZERO"
    },
    "7088": {
      "op": "PUSH2",
      "value": "0x1BB8"
    },
    "7091": {
      "op": "JUMPI"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7094": {
      "op": "DUP1"
    },
    "7095": {
      "op": "REVERT"
    },
    "7096": {
      "op": "JUMPDEST"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7099": {
      "op": "MSTORE"
    },
    "7100": {
      "op": "SWAP2"
    },
    "7101": {
      "op": "SWAP1"
    },
    "7102": {
      "op": "POP"
    },
    "7103": {
      "op": "JUMP"
    },
    "7104": {
      "op": "JUMPDEST"
    },
    "7105": {
      "op": "MLOAD"
    },
    "7106": {
      "op": "SWAP1"
    },
    "7107": {
      "op": "JUMP"
    },
    "7108": {
      "op": "JUMPDEST"
    },
    "7109": {
      "op": "SWAP1"
    },
    "7110": {
      "op": "DUP2"
    },
    "7111": {
      "op": "MSTORE"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7114": {
      "op": "ADD"
    },
    "7115": {
      "op": "SWAP1"
    },
    "7116": {
      "op": "JUMP"
    },
    "7117": {
      "op": "JUMPDEST"
    },
    "7118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7120": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "7123": {
      "op": "DUP3"
    },
    "7124": {
      "op": "PUSH2",
      "value": "0x1BFA"
    },
    "7127": {
      "op": "JUMP"
    },
    "7128": {
      "op": "JUMPDEST"
    },
    "7129": {
      "op": "ISZERO"
    },
    "7130": {
      "op": "ISZERO"
    },
    "7131": {
      "op": "SWAP1"
    },
    "7132": {
      "op": "JUMP"
    },
    "7133": {
      "op": "JUMPDEST"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7140": {
      "op": "SHL"
    },
    "7141": {
      "op": "SUB"
    },
    "7142": {
      "op": "NOT"
    },
    "7143": {
      "op": "AND"
    },
    "7144": {
      "op": "SWAP1"
    },
    "7145": {
      "op": "JUMP"
    },
    "7146": {
      "op": "JUMPDEST"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7153": {
      "op": "SHL"
    },
    "7154": {
      "op": "SUB"
    },
    "7155": {
      "op": "NOT"
    },
    "7156": {
      "op": "AND"
    },
    "7157": {
      "op": "SWAP1"
    },
    "7158": {
      "op": "JUMP"
    },
    "7159": {
      "op": "JUMPDEST"
    },
    "7160": {
      "op": "SWAP1"
    },
    "7161": {
      "op": "JUMP"
    },
    "7162": {
      "op": "JUMPDEST"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7169": {
      "op": "SHL"
    },
    "7170": {
      "op": "SUB"
    },
    "7171": {
      "op": "AND"
    },
    "7172": {
      "op": "SWAP1"
    },
    "7173": {
      "op": "JUMP"
    },
    "7174": {
      "op": "JUMPDEST"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7177": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "7180": {
      "op": "DUP3"
    },
    "7181": {
      "op": "PUSH2",
      "value": "0x1BCD"
    },
    "7184": {
      "op": "JUMP"
    },
    "7185": {
      "op": "JUMPDEST"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7188": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "7191": {
      "op": "DUP3"
    },
    "7192": {
      "op": "PUSH2",
      "value": "0x1BF7"
    },
    "7195": {
      "op": "JUMP"
    },
    "7196": {
      "op": "JUMPDEST"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7199": {
      "op": "JUMPDEST"
    },
    "7200": {
      "op": "DUP4"
    },
    "7201": {
      "op": "DUP2"
    },
    "7202": {
      "op": "LT"
    },
    "7203": {
      "op": "ISZERO"
    },
    "7204": {
      "op": "PUSH2",
      "value": "0x1C37"
    },
    "7207": {
      "op": "JUMPI"
    },
    "7208": {
      "op": "DUP2"
    },
    "7209": {
      "op": "DUP2"
    },
    "7210": {
      "op": "ADD"
    },
    "7211": {
      "op": "MLOAD"
    },
    "7212": {
      "op": "DUP4"
    },
    "7213": {
      "op": "DUP3"
    },
    "7214": {
      "op": "ADD"
    },
    "7215": {
      "op": "MSTORE"
    },
    "7216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7218": {
      "op": "ADD"
    },
    "7219": {
      "op": "PUSH2",
      "value": "0x1C1F"
    },
    "7222": {
      "op": "JUMP"
    },
    "7223": {
      "op": "JUMPDEST"
    },
    "7224": {
      "op": "DUP4"
    },
    "7225": {
      "op": "DUP2"
    },
    "7226": {
      "op": "GT"
    },
    "7227": {
      "op": "ISZERO"
    },
    "7228": {
      "op": "PUSH2",
      "value": "0xA59"
    },
    "7231": {
      "op": "JUMPI"
    },
    "7232": {
      "op": "POP"
    },
    "7233": {
      "op": "POP"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7236": {
      "op": "SWAP2"
    },
    "7237": {
      "op": "ADD"
    },
    "7238": {
      "op": "MSTORE"
    },
    "7239": {
      "op": "JUMP"
    },
    "7240": {
      "op": "JUMPDEST"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7243": {
      "op": "ADD"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7246": {
      "op": "NOT"
    },
    "7247": {
      "op": "AND"
    },
    "7248": {
      "op": "SWAP1"
    },
    "7249": {
      "op": "JUMP"
    }
  },
  "sha1": "96577ac2a1fa9216b6d0865276e932bd537a43ba",
  "source": "/*\n\n    Copyright 2019 dYdX Trading Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n*/\n\npragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\nimport { IInterestSetter } from \"../interfaces/IInterestSetter.sol\";\nimport { IPriceOracle } from \"../interfaces/IPriceOracle.sol\";\nimport { Decimal } from \"../lib/Decimal.sol\";\nimport { Interest } from \"../lib/Interest.sol\";\nimport { Monetary } from \"../lib/Monetary.sol\";\nimport { Require } from \"../lib/Require.sol\";\nimport { Storage } from \"../lib/Storage.sol\";\nimport { Token } from \"../lib/Token.sol\";\nimport { Types } from \"../lib/Types.sol\";\n\n\n/**\n * @title AdminImpl\n * @author dYdX\n *\n * Administrative functions to keep the protocol updated\n */\nlibrary AdminImpl {\n    using Storage for Storage.State;\n    using Token for address;\n    using Types for Types.Wei;\n\n    // ============ Constants ============\n\n    bytes32 constant FILE = \"AdminImpl\";\n\n    // ============ Events ============\n\n    event LogWithdrawExcessTokens(\n        address token,\n        uint256 amount\n    );\n\n    event LogAddMarket(\n        uint256 marketId,\n        address token\n    );\n\n    event LogSetIsClosing(\n        uint256 marketId,\n        bool isClosing\n    );\n\n    event LogSetPriceOracle(\n        uint256 marketId,\n        address priceOracle\n    );\n\n    event LogSetInterestSetter(\n        uint256 marketId,\n        address interestSetter\n    );\n\n    event LogSetMarginPremium(\n        uint256 marketId,\n        Decimal.D256 marginPremium\n    );\n\n    event LogSetSpreadPremium(\n        uint256 marketId,\n        Decimal.D256 spreadPremium\n    );\n\n    event LogSetMarginRatio(\n        Decimal.D256 marginRatio\n    );\n\n    event LogSetLiquidationSpread(\n        Decimal.D256 liquidationSpread\n    );\n\n    event LogSetEarningsRate(\n        Decimal.D256 earningsRate\n    );\n\n    event LogSetMinBorrowedValue(\n        Monetary.Value minBorrowedValue\n    );\n\n    event LogSetGlobalOperator(\n        address operator,\n        bool approved\n    );\n\n    // ============ Token Functions ============\n\n    function ownerWithdrawExcessTokens(\n        Storage.State storage state,\n        uint256 marketId,\n        address recipient\n    )\n        public\n        returns (uint256)\n    {\n        _validateMarketId(state, marketId);\n        Types.Wei memory excessWei = state.getNumExcessTokens(marketId);\n\n        Require.that(\n            !excessWei.isNegative(),\n            FILE,\n            \"Negative excess\"\n        );\n\n        address token = state.getToken(marketId);\n\n        uint256 actualBalance = token.balanceOf(address(this));\n        if (excessWei.value > actualBalance) {\n            excessWei.value = actualBalance;\n        }\n\n        token.transfer(recipient, excessWei.value);\n\n        emit LogWithdrawExcessTokens(token, excessWei.value);\n\n        return excessWei.value;\n    }\n\n    function ownerWithdrawUnsupportedTokens(\n        Storage.State storage state,\n        address token,\n        address recipient\n    )\n        public\n        returns (uint256)\n    {\n        _requireNoMarket(state, token);\n\n        uint256 balance = token.balanceOf(address(this));\n        token.transfer(recipient, balance);\n\n        emit LogWithdrawExcessTokens(token, balance);\n\n        return balance;\n    }\n\n    // ============ Market Functions ============\n\n    function ownerAddMarket(\n        Storage.State storage state,\n        address token,\n        IPriceOracle priceOracle,\n        IInterestSetter interestSetter,\n        Decimal.D256 memory marginPremium,\n        Decimal.D256 memory spreadPremium\n    )\n        public\n    {\n        _requireNoMarket(state, token);\n\n        uint256 marketId = state.numMarkets;\n\n        state.numMarkets++;\n        state.markets[marketId].token = token;\n        state.markets[marketId].index = Interest.newIndex();\n\n        emit LogAddMarket(marketId, token);\n\n        _setPriceOracle(state, marketId, priceOracle);\n        _setInterestSetter(state, marketId, interestSetter);\n        _setMarginPremium(state, marketId, marginPremium);\n        _setSpreadPremium(state, marketId, spreadPremium);\n    }\n\n    function ownerSetIsClosing(\n        Storage.State storage state,\n        uint256 marketId,\n        bool isClosing\n    )\n        public\n    {\n        _validateMarketId(state, marketId);\n        state.markets[marketId].isClosing = isClosing;\n        emit LogSetIsClosing(marketId, isClosing);\n    }\n\n    function ownerSetPriceOracle(\n        Storage.State storage state,\n        uint256 marketId,\n        IPriceOracle priceOracle\n    )\n        public\n    {\n        _validateMarketId(state, marketId);\n        _setPriceOracle(state, marketId, priceOracle);\n    }\n\n    function ownerSetInterestSetter(\n        Storage.State storage state,\n        uint256 marketId,\n        IInterestSetter interestSetter\n    )\n        public\n    {\n        _validateMarketId(state, marketId);\n        _setInterestSetter(state, marketId, interestSetter);\n    }\n\n    function ownerSetMarginPremium(\n        Storage.State storage state,\n        uint256 marketId,\n        Decimal.D256 memory marginPremium\n    )\n        public\n    {\n        _validateMarketId(state, marketId);\n        _setMarginPremium(state, marketId, marginPremium);\n    }\n\n    function ownerSetSpreadPremium(\n        Storage.State storage state,\n        uint256 marketId,\n        Decimal.D256 memory spreadPremium\n    )\n        public\n    {\n        _validateMarketId(state, marketId);\n        _setSpreadPremium(state, marketId, spreadPremium);\n    }\n\n    // ============ Risk Functions ============\n\n    function ownerSetMarginRatio(\n        Storage.State storage state,\n        Decimal.D256 memory ratio\n    )\n        public\n    {\n        Require.that(\n            ratio.value <= state.riskLimits.marginRatioMax,\n            FILE,\n            \"Ratio too high\"\n        );\n        Require.that(\n            ratio.value > state.riskParams.liquidationSpread.value,\n            FILE,\n            \"Ratio cannot be <= spread\"\n        );\n        state.riskParams.marginRatio = ratio;\n        emit LogSetMarginRatio(ratio);\n    }\n\n    function ownerSetLiquidationSpread(\n        Storage.State storage state,\n        Decimal.D256 memory spread\n    )\n        public\n    {\n        Require.that(\n            spread.value <= state.riskLimits.liquidationSpreadMax,\n            FILE,\n            \"Spread too high\"\n        );\n        Require.that(\n            spread.value < state.riskParams.marginRatio.value,\n            FILE,\n            \"Spread cannot be >= ratio\"\n        );\n        state.riskParams.liquidationSpread = spread;\n        emit LogSetLiquidationSpread(spread);\n    }\n\n    function ownerSetEarningsRate(\n        Storage.State storage state,\n        Decimal.D256 memory earningsRate\n    )\n        public\n    {\n        Require.that(\n            earningsRate.value <= state.riskLimits.earningsRateMax,\n            FILE,\n            \"Rate too high\"\n        );\n        state.riskParams.earningsRate = earningsRate;\n        emit LogSetEarningsRate(earningsRate);\n    }\n\n    function ownerSetMinBorrowedValue(\n        Storage.State storage state,\n        Monetary.Value memory minBorrowedValue\n    )\n        public\n    {\n        Require.that(\n            minBorrowedValue.value <= state.riskLimits.minBorrowedValueMax,\n            FILE,\n            \"Value too high\"\n        );\n        state.riskParams.minBorrowedValue = minBorrowedValue;\n        emit LogSetMinBorrowedValue(minBorrowedValue);\n    }\n\n    // ============ Global Operator Functions ============\n\n    function ownerSetGlobalOperator(\n        Storage.State storage state,\n        address operator,\n        bool approved\n    )\n        public\n    {\n        state.globalOperators[operator] = approved;\n\n        emit LogSetGlobalOperator(operator, approved);\n    }\n\n    // ============ Private Functions ============\n\n    function _setPriceOracle(\n        Storage.State storage state,\n        uint256 marketId,\n        IPriceOracle priceOracle\n    )\n        private\n    {\n        // require oracle can return non-zero price\n        address token = state.markets[marketId].token;\n\n        Require.that(\n            priceOracle.getPrice(token).value != 0,\n            FILE,\n            \"Invalid oracle price\"\n        );\n\n        state.markets[marketId].priceOracle = priceOracle;\n\n        emit LogSetPriceOracle(marketId, address(priceOracle));\n    }\n\n    function _setInterestSetter(\n        Storage.State storage state,\n        uint256 marketId,\n        IInterestSetter interestSetter\n    )\n        private\n    {\n        // ensure interestSetter can return a value without reverting\n        address token = state.markets[marketId].token;\n        interestSetter.getInterestRate(token, 0, 0);\n\n        state.markets[marketId].interestSetter = interestSetter;\n\n        emit LogSetInterestSetter(marketId, address(interestSetter));\n    }\n\n    function _setMarginPremium(\n        Storage.State storage state,\n        uint256 marketId,\n        Decimal.D256 memory marginPremium\n    )\n        private\n    {\n        Require.that(\n            marginPremium.value <= state.riskLimits.marginPremiumMax,\n            FILE,\n            \"Margin premium too high\"\n        );\n        state.markets[marketId].marginPremium = marginPremium;\n\n        emit LogSetMarginPremium(marketId, marginPremium);\n    }\n\n    function _setSpreadPremium(\n        Storage.State storage state,\n        uint256 marketId,\n        Decimal.D256 memory spreadPremium\n    )\n        private\n    {\n        Require.that(\n            spreadPremium.value <= state.riskLimits.spreadPremiumMax,\n            FILE,\n            \"Spread premium too high\"\n        );\n        state.markets[marketId].spreadPremium = spreadPremium;\n\n        emit LogSetSpreadPremium(marketId, spreadPremium);\n    }\n\n    function _requireNoMarket(\n        Storage.State storage state,\n        address token\n    )\n        private\n        view\n    {\n        uint256 numMarkets = state.numMarkets;\n\n        bool marketExists = false;\n\n        for (uint256 m = 0; m < numMarkets; m++) {\n            if (state.markets[m].token == token) {\n                marketExists = true;\n                break;\n            }\n        }\n\n        Require.that(\n            !marketExists,\n            FILE,\n            \"Market exists\"\n        );\n    }\n\n    function _validateMarketId(\n        Storage.State storage state,\n        uint256 marketId\n    )\n        private\n        view\n    {\n        Require.that(\n            marketId < state.numMarkets,\n            FILE,\n            \"Market OOB\",\n            marketId\n        );\n    }\n}\n",
  "sourceMap": "1217:9812:31:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "sourcePath": "contracts/protocol/impl/AdminImpl.sol",
  "type": "library"
}